ActionGroup.channels -> channels:    collection, (read-only)    F-Curves in this group
ActionGroup.color_set -> color_set:    enum    Custom color set to use
ActionGroup.colors -> colors:    pointer, (read-only)    Copy of the colors associated with the group's color set
ActionGroup.lock -> lock:    boolean    Action group is locked
ActionGroup.name -> name:    string    
ActionGroup.select -> select:    boolean    Action group is selected
ActionGroup.show_expanded -> show_expanded:    boolean    Action group is expanded
ActionPoseMarkers.active -> active:    pointer    Active pose marker for this action
ActionPoseMarkers.active_index -> active_index:    int    Index of active pose marker
Actuator.name -> name:    string    
Actuator.pin -> pin:    boolean    Display when not linked to a visible states controller
Actuator.show_expanded -> show_expanded:    boolean    Set actuator expanded in the user interface
Actuator.type -> type:    enum    
Actuator|ActionActuator.action -> action:    pointer    
Actuator|ActionActuator.apply_to_children -> apply_to_children:    boolean    Update Action on all children Objects as well
Actuator|ActionActuator.blend_mode -> blend_mode:    enum    How this layer is blended with previous layers
Actuator|ActionActuator.frame_blend_in -> frame_blend_in:    int    Number of frames of motion blending
Actuator|ActionActuator.frame_end -> frame_end:    float    
Actuator|ActionActuator.frame_property -> frame_property:    string    Assign the action's current frame number to this property
Actuator|ActionActuator.frame_start -> frame_start:    float    
Actuator|ActionActuator.layer -> layer:    int    The animation layer to play the action on
Actuator|ActionActuator.layer_weight -> layer_weight:    float    How much of the previous layer to blend into this one
Actuator|ActionActuator.play_mode -> play_mode:    enum    Action playback type
Actuator|ActionActuator.priority -> priority:    int    Execution priority - lower numbers will override actions with higher numbers (with 2 or more actions at once, the overriding channels must be lower in the stack)
Actuator|ActionActuator.property -> property:    string    Use this property to define the Action position
Actuator|ActionActuator.use_additive -> use_additive:    boolean    Action is added to the current loc/rot/scale in global or local coordinate according to Local flag
Actuator|ActionActuator.use_continue_last_frame -> use_continue_last_frame:    boolean    Restore last frame when switching on/off, otherwise play from the start each time
Actuator|ActionActuator.use_force -> use_force:    boolean    Apply Action as a global or local force depending on the local option (dynamic objects only)
Actuator|ActionActuator.use_local -> use_local:    boolean    Let the Action act in local coordinates, used in Force and Add mode
Actuator|ArmatureActuator.bone -> bone:    string    Bone on which the constraint is defined
Actuator|ArmatureActuator.constraint -> constraint:    string    Name of the constraint to control
Actuator|ArmatureActuator.influence -> influence:    float    Influence of this constraint
Actuator|ArmatureActuator.mode -> mode:    enum    
Actuator|ArmatureActuator.secondary_target -> secondary_target:    pointer    Set this object as the secondary target of the constraint (only IK polar target at the moment)
Actuator|ArmatureActuator.target -> target:    pointer    Set this object as the target of the constraint
Actuator|ArmatureActuator.weight -> weight:    float    Weight of this constraint
Actuator|CameraActuator.axis -> axis:    enum    Axis the Camera will try to get behind
Actuator|CameraActuator.damping -> damping:    float    Strength of the constraint that drives the camera behind the target
Actuator|CameraActuator.height -> height:    float    
Actuator|CameraActuator.max -> max:    float    
Actuator|CameraActuator.min -> min:    float    
Actuator|CameraActuator.object -> object:    pointer    Look at this Object
Actuator|ConstraintActuator.angle_max -> angle_max:    float    Maximum angle allowed with target direction (no correction is done if angle with target direction is between min and max)
Actuator|ConstraintActuator.angle_min -> angle_min:    float    Minimum angle to maintain with target direction (no correction is done if angle with target direction is between min and max)
Actuator|ConstraintActuator.damping -> damping:    int    Damping factor: time constant (in frame) of low pass filter
Actuator|ConstraintActuator.damping_rotation -> damping_rotation:    int    Use a different damping for orientation
Actuator|ConstraintActuator.direction -> direction:    enum    Direction of the ray
Actuator|ConstraintActuator.direction_axis -> direction_axis:    enum    Select the axis to be aligned along the reference direction
Actuator|ConstraintActuator.direction_axis_pos -> direction_axis_pos:    enum    Select the axis to be aligned along the reference direction
Actuator|ConstraintActuator.distance -> distance:    float    Keep this distance to target
Actuator|ConstraintActuator.fh_damping -> fh_damping:    float    Damping factor of the force field spring
Actuator|ConstraintActuator.fh_force -> fh_force:    float    Spring force within the force field area
Actuator|ConstraintActuator.fh_height -> fh_height:    float    Height of the force field area
Actuator|ConstraintActuator.limit -> limit:    enum    
Actuator|ConstraintActuator.limit_max -> limit_max:    float    
Actuator|ConstraintActuator.limit_min -> limit_min:    float    
Actuator|ConstraintActuator.material -> material:    string    Ray detects only Objects with this material
Actuator|ConstraintActuator.mode -> mode:    enum    The type of the constraint
Actuator|ConstraintActuator.property -> property:    string    Ray detects only Objects with this property
Actuator|ConstraintActuator.range -> range:    float    Maximum length of ray
Actuator|ConstraintActuator.rotation_max -> rotation_max:    float[3]    Reference Direction
Actuator|ConstraintActuator.time -> time:    int    Maximum activation time in frame, 0 for unlimited
Actuator|ConstraintActuator.use_fh_normal -> use_fh_normal:    boolean    Add a horizontal spring force on slopes
Actuator|ConstraintActuator.use_fh_paralel_axis -> use_fh_paralel_axis:    boolean    Keep object axis parallel to normal
Actuator|ConstraintActuator.use_force_distance -> use_force_distance:    boolean    Force distance of object to point of impact of ray
Actuator|ConstraintActuator.use_local -> use_local:    boolean    Set ray along object's axis or global axis
Actuator|ConstraintActuator.use_material_detect -> use_material_detect:    boolean    Detect material instead of property
Actuator|ConstraintActuator.use_normal -> use_normal:    boolean    Set object axis along (local axis) or parallel (global axis) to the normal at hit position
Actuator|ConstraintActuator.use_persistent -> use_persistent:    boolean    Persistent actuator: stays active even if ray does not reach target
Actuator|EditObjectActuator.angular_velocity -> angular_velocity:    float[3]    Angular velocity upon creation
Actuator|EditObjectActuator.dynamic_operation -> dynamic_operation:    enum    
Actuator|EditObjectActuator.linear_velocity -> linear_velocity:    float[3]    Velocity upon creation
Actuator|EditObjectActuator.mass -> mass:    float    The mass of the object
Actuator|EditObjectActuator.mesh -> mesh:    pointer    Replace the existing, when left blank 'Phys' will remake the existing physics mesh
Actuator|EditObjectActuator.mode -> mode:    enum    The mode of the actuator
Actuator|EditObjectActuator.object -> object:    pointer    Add this Object and all its children (can't be on a visible layer)
Actuator|EditObjectActuator.time -> time:    int    Duration the new Object lives or the track takes
Actuator|EditObjectActuator.track_object -> track_object:    pointer    Track to this Object
Actuator|EditObjectActuator.use_3d_tracking -> use_3d_tracking:    boolean    Enable 3D tracking
Actuator|EditObjectActuator.use_local_angular_velocity -> use_local_angular_velocity:    boolean    Apply the rotation locally
Actuator|EditObjectActuator.use_local_linear_velocity -> use_local_linear_velocity:    boolean    Apply the transformation locally
Actuator|EditObjectActuator.use_replace_display_mesh -> use_replace_display_mesh:    boolean    Replace the display mesh
Actuator|EditObjectActuator.use_replace_physics_mesh -> use_replace_physics_mesh:    boolean    Replace the physics mesh (triangle bounds only - compound shapes not supported)
Actuator|Filter2DActuator.filter_pass -> filter_pass:    int    Set filter order
Actuator|Filter2DActuator.glsl_shader -> glsl_shader:    pointer    
Actuator|Filter2DActuator.mode -> mode:    enum    
Actuator|Filter2DActuator.motion_blur_factor -> motion_blur_factor:    float    Motion blur factor
Actuator|Filter2DActuator.use_motion_blur -> use_motion_blur:    boolean    Enable/Disable Motion Blur
Actuator|GameActuator.filename -> filename:    string    Load this blend file, use the "//" prefix for a path relative to the current blend file
Actuator|GameActuator.mode -> mode:    enum    
Actuator|MessageActuator.body_message -> body_message:    string    Optional, message body Text
Actuator|MessageActuator.body_property -> body_property:    string    The message body will be set by the Property Value
Actuator|MessageActuator.body_type -> body_type:    enum    Toggle message type: either Text or a PropertyName
Actuator|MessageActuator.subject -> subject:    string    Optional, message subject (this is what can be filtered on)
Actuator|MessageActuator.to_property -> to_property:    string    Optional, send message to objects with this name only, or empty to broadcast
Actuator|ObjectActuator.angular_velocity -> angular_velocity:    float[3]    Angular velocity
Actuator|ObjectActuator.damping -> damping:    int    Number of frames to reach the target velocity
Actuator|ObjectActuator.derivate_coefficient -> derivate_coefficient:    float    Not required, high values can cause instability
Actuator|ObjectActuator.force -> force:    float[3]    Force
Actuator|ObjectActuator.force_max_x -> force_max_x:    float    Upper limit for X force
Actuator|ObjectActuator.force_max_y -> force_max_y:    float    Upper limit for Y force
Actuator|ObjectActuator.force_max_z -> force_max_z:    float    Upper limit for Z force
Actuator|ObjectActuator.force_min_x -> force_min_x:    float    Lower limit for X force
Actuator|ObjectActuator.force_min_y -> force_min_y:    float    Lower limit for Y force
Actuator|ObjectActuator.force_min_z -> force_min_z:    float    Lower limit for Z force
Actuator|ObjectActuator.integral_coefficient -> integral_coefficient:    float    Low value (0.01) for slow response, high value (0.5) for fast response
Actuator|ObjectActuator.linear_velocity -> linear_velocity:    float[3]    Linear velocity (in Servo mode it sets the target relative linear velocity, it will be achieved by automatic application of force - Null velocity is a valid
target)
Actuator|ObjectActuator.mode -> mode:    enum    Specify the motion system
Actuator|ObjectActuator.offset_location -> offset_location:    float[3]    Location
Actuator|ObjectActuator.offset_rotation -> offset_rotation:    float[3]    Rotation
Actuator|ObjectActuator.proportional_coefficient -> proportional_coefficient:    float    Typical value is 60x integral coefficient
Actuator|ObjectActuator.reference_object -> reference_object:    pointer    Reference object for velocity calculation, leave empty for world reference
Actuator|ObjectActuator.torque -> torque:    float[3]    Torque
Actuator|ObjectActuator.use_add_character_location -> use_add_character_location:    boolean    Toggle between ADD and SET character location
Actuator|ObjectActuator.use_add_linear_velocity -> use_add_linear_velocity:    boolean    Toggles between ADD and SET linV
Actuator|ObjectActuator.use_character_jump -> use_character_jump:    boolean    Make the character jump using the settings in the physics properties
Actuator|ObjectActuator.use_local_angular_velocity -> use_local_angular_velocity:    boolean    Angular velocity is defined in local coordinates
Actuator|ObjectActuator.use_local_force -> use_local_force:    boolean    Force is defined in local coordinates
Actuator|ObjectActuator.use_local_linear_velocity -> use_local_linear_velocity:    boolean    Velocity is defined in local coordinates
Actuator|ObjectActuator.use_local_location -> use_local_location:    boolean    Location is defined in local coordinates
Actuator|ObjectActuator.use_local_rotation -> use_local_rotation:    boolean    Rotation is defined in local coordinates
Actuator|ObjectActuator.use_local_torque -> use_local_torque:    boolean    Torque is defined in local coordinates
Actuator|ObjectActuator.use_servo_limit_x -> use_servo_limit_x:    boolean    Set limit to force along the X axis
Actuator|ObjectActuator.use_servo_limit_y -> use_servo_limit_y:    boolean    Set limit to force along the Y axis
Actuator|ObjectActuator.use_servo_limit_z -> use_servo_limit_z:    boolean    Set limit to force along the Z axis
Actuator|ParentActuator.mode -> mode:    enum    
Actuator|ParentActuator.object -> object:    pointer    Set this object as parent
Actuator|ParentActuator.use_compound -> use_compound:    boolean    Add this object shape to the parent shape (only if the parent shape is already compound)
Actuator|ParentActuator.use_ghost -> use_ghost:    boolean    Make this object ghost while parented
Actuator|PropertyActuator.mode -> mode:    enum    
Actuator|PropertyActuator.object -> object:    pointer    Copy from this Object
Actuator|PropertyActuator.object_property -> object_property:    string    Copy this property
Actuator|PropertyActuator.property -> property:    string    The name of the property
Actuator|PropertyActuator.value -> value:    string    The name of the property or the value to use (use "" around strings)
Actuator|RandomActuator.chance -> chance:    float    Pick a number between 0 and 1, success if it's below this value
Actuator|RandomActuator.distribution -> distribution:    enum    Choose the type of distribution
Actuator|RandomActuator.float_max -> float_max:    float    Choose a number from a range: upper boundary of the range
Actuator|RandomActuator.float_mean -> float_mean:    float    A normal distribution: mean of the distribution
Actuator|RandomActuator.float_min -> float_min:    float    Choose a number from a range: lower boundary of the range
Actuator|RandomActuator.float_value -> float_value:    float    Always return this number
Actuator|RandomActuator.half_life_time -> half_life_time:    float    Negative exponential dropoff
Actuator|RandomActuator.int_max -> int_max:    int    Choose a number from a range: upper boundary of the range
Actuator|RandomActuator.int_mean -> int_mean:    float    Expected mean value of the distribution
Actuator|RandomActuator.int_min -> int_min:    int    Choose a number from a range: lower boundary of the range
Actuator|RandomActuator.int_value -> int_value:    int    Always return this number
Actuator|RandomActuator.property -> property:    string    Assign the random value to this property
Actuator|RandomActuator.seed -> seed:    int    Initial seed of the random generator, use Python for more freedom (choose 0 for not random)
Actuator|RandomActuator.standard_derivation -> standard_derivation:    float    A normal distribution: standard deviation of the distribution
Actuator|RandomActuator.use_always_true -> use_always_true:    boolean    Always false or always true
Actuator|SceneActuator.camera -> camera:    pointer    Set this Camera (leave empty to refer to self object)
Actuator|SceneActuator.mode -> mode:    enum    
Actuator|SceneActuator.scene -> scene:    pointer    Scene to be added/removed/paused/resumed
Actuator|SoundActuator.cone_inner_angle_3d -> cone_inner_angle_3d:    float    The angle of the inner cone
Actuator|SoundActuator.cone_outer_angle_3d -> cone_outer_angle_3d:    float    The angle of the outer cone
Actuator|SoundActuator.cone_outer_gain_3d -> cone_outer_gain_3d:    float    The gain outside the outer cone (the gain in the outer cone will be interpolated between this value and the normal gain in the inner cone)
Actuator|SoundActuator.distance_3d_max -> distance_3d_max:    float    The maximum distance at which you can hear the sound
Actuator|SoundActuator.distance_3d_reference -> distance_3d_reference:    float    The distance where the sound has a gain of 1.0
Actuator|SoundActuator.gain_3d_max -> gain_3d_max:    float    The maximum gain of the sound, no matter how near it is
Actuator|SoundActuator.gain_3d_min -> gain_3d_min:    float    The minimum gain of the sound, no matter how far it is away
Actuator|SoundActuator.mode -> mode:    enum    
Actuator|SoundActuator.pitch -> pitch:    float    Pitch of the sound
Actuator|SoundActuator.rolloff_factor_3d -> rolloff_factor_3d:    float    The influence factor on volume depending on distance
Actuator|SoundActuator.sound -> sound:    pointer    
Actuator|SoundActuator.use_sound_3d -> use_sound_3d:    boolean    Enable/Disable 3D Sound
Actuator|SoundActuator.volume -> volume:    float    Initial volume of the sound
Actuator|StateActuator.operation -> operation:    enum    Select the bit operation on object state mask
Actuator|StateActuator.states -> states:    boolean[30]    
Actuator|SteeringActuator.acceleration -> acceleration:    float    Max acceleration
Actuator|SteeringActuator.distance -> distance:    float    Relax distance
Actuator|SteeringActuator.facing -> facing:    boolean    Enable automatic facing
Actuator|SteeringActuator.facing_axis -> facing_axis:    enum    Axis for automatic facing
Actuator|SteeringActuator.mode -> mode:    enum    
Actuator|SteeringActuator.navmesh -> navmesh:    pointer    Navigation mesh
Actuator|SteeringActuator.normal_up -> normal_up:    boolean    Use normal of the navmesh to set "UP" vector
Actuator|SteeringActuator.self_terminated -> self_terminated:    boolean    Terminate when target is reached
Actuator|SteeringActuator.show_visualization -> show_visualization:    boolean    Enable debug visualization for 'Path following'
Actuator|SteeringActuator.target -> target:    pointer    Target object
Actuator|SteeringActuator.turn_speed -> turn_speed:    float    Max turn speed
Actuator|SteeringActuator.update_period -> update_period:    int    Path update period
Actuator|SteeringActuator.velocity -> velocity:    float    Velocity magnitude
Actuator|VisibilityActuator.apply_to_children -> apply_to_children:    boolean    Set all the children of this object to the same visibility/occlusion recursively
Actuator|VisibilityActuator.use_occlusion -> use_occlusion:    boolean    Set the object to occlude objects behind it (initialized from the object type in physics button)
Actuator|VisibilityActuator.use_visible -> use_visible:    boolean    Set the objects visible (initialized from the object render restriction toggle in physics button)
Addon.module -> module:    string    Module name
Addon.preferences -> preferences:    pointer, (read-only)    
AddonPreferences.bl_idname -> bl_idname:    string    
AnimData.action -> action:    pointer    Active Action for this datablock
AnimData.action_blend_type -> action_blend_type:    enum    Method used for combining Active Action's result with result of NLA stack
AnimData.action_extrapolation -> action_extrapolation:    enum    Action to take for gaps past the Active Action's range (when evaluating with NLA)
AnimData.action_influence -> action_influence:    float    Amount the Active Action contributes to the result of the NLA stack
AnimData.drivers -> drivers:    collection, (read-only)    The Drivers/Expressions for this datablock
AnimData.nla_tracks -> nla_tracks:    collection, (read-only)    NLA Tracks (i.e. Animation Layers)
AnimData.use_nla -> use_nla:    boolean    NLA stack is evaluated when evaluating this block
AnimViz.motion_path -> motion_path:    pointer, (read-only)    Motion Path settings for visualization
AnimViz.onion_skin_frames -> onion_skin_frames:    pointer, (read-only)    Onion Skinning (ghosting) settings for visualization
AnimVizMotionPaths.bake_location -> bake_location:    enum    When calculating Bone Paths, use Head or Tips
AnimVizMotionPaths.frame_after -> frame_after:    int    Number of frames to show after the current frame (only for 'Around Current Frame' Onion-skinning method)
AnimVizMotionPaths.frame_before -> frame_before:    int    Number of frames to show before the current frame (only for 'Around Current Frame' Onion-skinning method)
AnimVizMotionPaths.frame_end -> frame_end:    int    End frame of range of paths to display/calculate (not for 'Around Current Frame' Onion-skinning method)
AnimVizMotionPaths.frame_start -> frame_start:    int    Starting frame of range of paths to display/calculate (not for 'Around Current Frame' Onion-skinning method)
AnimVizMotionPaths.frame_step -> frame_step:    int    Number of frames between paths shown (not for 'On Keyframes' Onion-skinning method)
AnimVizMotionPaths.show_frame_numbers -> show_frame_numbers:    boolean    Show frame numbers on Motion Paths
AnimVizMotionPaths.show_keyframe_action_all -> show_keyframe_action_all:    boolean    For bone motion paths, search whole Action for keyframes instead of in group with matching name only (is slower)
AnimVizMotionPaths.show_keyframe_highlight -> show_keyframe_highlight:    boolean    Emphasize position of keyframes on Motion Paths
AnimVizMotionPaths.show_keyframe_numbers -> show_keyframe_numbers:    boolean    Show frame numbers of Keyframes on Motion Paths
AnimVizMotionPaths.type -> type:    enum    Type of range to show for Motion Paths
AnimVizOnionSkinning.frame_after -> frame_after:    int    Number of frames to show after the current frame (only for 'Around Current Frame' Onion-skinning method)
AnimVizOnionSkinning.frame_before -> frame_before:    int    Number of frames to show before the current frame (only for 'Around Current Frame' Onion-skinning method)
AnimVizOnionSkinning.frame_end -> frame_end:    int    End frame of range of Ghosts to display (not for 'Around Current Frame' Onion-skinning method)
AnimVizOnionSkinning.frame_start -> frame_start:    int    Starting frame of range of Ghosts to display (not for 'Around Current Frame' Onion-skinning method)
AnimVizOnionSkinning.frame_step -> frame_step:    int    Number of frames between ghosts shown (not for 'On Keyframes' Onion-skinning method)
AnimVizOnionSkinning.show_only_selected -> show_only_selected:    boolean    For Pose-Mode drawing, only draw ghosts for selected bones
AnimVizOnionSkinning.type -> type:    enum    Method used for determining what ghosts get drawn
Area.height -> height:    int, (read-only)    Area height
Area.regions -> regions:    collection, (read-only)    Regions this area is subdivided in
Area.show_menus -> show_menus:    boolean    Show menus in the header
Area.spaces -> spaces:    collection, (read-only)    Spaces contained in this area, the first being the active space (NOTE: Useful for example to restore a previously used 3D view space in a certain area to get the old view
orientation)
Area.type -> type:    enum    Current editor type for this area
Area.width -> width:    int, (read-only)    Area width
Area.x -> x:    int, (read-only)    The window relative vertical location of the area
Area.y -> y:    int, (read-only)    The window relative horizontal location of the area
AreaSpaces.active -> active:    pointer, (read-only)    Space currently being displayed in this area
ArmatureBones.active -> active:    pointer    Armature's active bone
ArmatureEditBones.active -> active:    pointer    Armatures active edit bone
BackgroundImage.clip -> clip:    pointer    Movie clip displayed and edited in this space
BackgroundImage.clip_user -> clip_user:    pointer, (read-only)    Parameters defining which frame of the movie clip is displayed
BackgroundImage.draw_depth -> draw_depth:    enum    Draw under or over everything
BackgroundImage.frame_method -> frame_method:    enum    How the image fits in the camera frame
BackgroundImage.image -> image:    pointer    Image displayed and edited in this space
BackgroundImage.image_user -> image_user:    pointer, (read-only)    Parameters defining which layer, pass and frame of the image is displayed
BackgroundImage.offset_x -> offset_x:    float    Offset image horizontally from the world origin
BackgroundImage.offset_y -> offset_y:    float    Offset image vertically from the world origin
BackgroundImage.opacity -> opacity:    float    Image opacity to blend the image against the background color
BackgroundImage.show_background_image -> show_background_image:    boolean    Show this image as background
BackgroundImage.show_expanded -> show_expanded:    boolean    Show the expanded in the user interface
BackgroundImage.show_on_foreground -> show_on_foreground:    boolean    Show this image in front of objects in viewport
BackgroundImage.size -> size:    float    Scaling factor for the background image
BackgroundImage.source -> source:    enum    Data source used for background
BackgroundImage.use_camera_clip -> use_camera_clip:    boolean    Use movie clip from active scene camera
BackgroundImage.view_axis -> view_axis:    enum    The axis to display the image on
BezierSplinePoint.co -> co:    float[3]    Coordinates of the control point
BezierSplinePoint.handle_left -> handle_left:    float[3]    Coordinates of the first handle
BezierSplinePoint.handle_left_type -> handle_left_type:    enum    Handle types
BezierSplinePoint.handle_right -> handle_right:    float[3]    Coordinates of the second handle
BezierSplinePoint.handle_right_type -> handle_right_type:    enum    Handle types
BezierSplinePoint.hide -> hide:    boolean    Visibility status
BezierSplinePoint.radius -> radius:    float    Radius for beveling
BezierSplinePoint.select_control_point -> select_control_point:    boolean    Control point selection status
BezierSplinePoint.select_left_handle -> select_left_handle:    boolean    Handle 1 selection status
BezierSplinePoint.select_right_handle -> select_right_handle:    boolean    Handle 2 selection status
BezierSplinePoint.tilt -> tilt:    float    Tilt in 3D View
BezierSplinePoint.weight_softbody -> weight_softbody:    float    Softbody goal weight
BlendData.actions -> actions:    collection, (read-only)    Action datablocks
BlendData.armatures -> armatures:    collection, (read-only)    Armature datablocks
BlendData.brushes -> brushes:    collection, (read-only)    Brush datablocks
BlendData.cameras -> cameras:    collection, (read-only)    Camera datablocks
BlendData.curves -> curves:    collection, (read-only)    Curve datablocks
BlendData.filepath -> filepath:    string, (read-only)    Path to the .blend file
BlendData.fonts -> fonts:    collection, (read-only)    Vector font datablocks
BlendData.grease_pencil -> grease_pencil:    collection, (read-only)    Grease Pencil datablocks
BlendData.groups -> groups:    collection, (read-only)    Group datablocks
BlendData.images -> images:    collection, (read-only)    Image datablocks
BlendData.is_dirty -> is_dirty:    boolean, (read-only)    Have recent edits been saved to disk
BlendData.is_saved -> is_saved:    boolean, (read-only)    Has the current session been saved to disk as a .blend file
BlendData.lamps -> lamps:    collection, (read-only)    Lamp datablocks
BlendData.lattices -> lattices:    collection, (read-only)    Lattice datablocks
BlendData.libraries -> libraries:    collection, (read-only)    Library datablocks
BlendData.linestyles -> linestyles:    collection, (read-only)    Line Style datablocks
BlendData.masks -> masks:    collection, (read-only)    Masks datablocks
BlendData.materials -> materials:    collection, (read-only)    Material datablocks
BlendData.meshes -> meshes:    collection, (read-only)    Mesh datablocks
BlendData.metaballs -> metaballs:    collection, (read-only)    Metaball datablocks
BlendData.movieclips -> movieclips:    collection, (read-only)    Movie Clip datablocks
BlendData.node_groups -> node_groups:    collection, (read-only)    Node group datablocks
BlendData.objects -> objects:    collection, (read-only)    Object datablocks
BlendData.particles -> particles:    collection, (read-only)    Particle datablocks
BlendData.scenes -> scenes:    collection, (read-only)    Scene datablocks
BlendData.screens -> screens:    collection, (read-only)    Screen datablocks
BlendData.scripts -> scripts:    collection, (read-only)    Script datablocks (DEPRECATED)
BlendData.shape_keys -> shape_keys:    collection, (read-only)    Shape Key datablocks
BlendData.sounds -> sounds:    collection, (read-only)    Sound datablocks
BlendData.speakers -> speakers:    collection, (read-only)    Speaker datablocks
BlendData.texts -> texts:    collection, (read-only)    Text datablocks
BlendData.textures -> textures:    collection, (read-only)    Texture datablocks
BlendData.use_autopack -> use_autopack:    boolean    Automatically pack all external data into .blend file
BlendData.window_managers -> window_managers:    collection, (read-only)    Window manager datablocks
BlendData.worlds -> worlds:    collection, (read-only)    World datablocks
BlendDataActions.is_updated -> is_updated:    boolean, (read-only)    
BlendDataArmatures.is_updated -> is_updated:    boolean, (read-only)    
BlendDataBrushes.is_updated -> is_updated:    boolean, (read-only)    
BlendDataCameras.is_updated -> is_updated:    boolean, (read-only)    
BlendDataCurves.is_updated -> is_updated:    boolean, (read-only)    
BlendDataFonts.is_updated -> is_updated:    boolean, (read-only)    
BlendDataGreasePencils.is_updated -> is_updated:    boolean, (read-only)    
BlendDataGroups.is_updated -> is_updated:    boolean, (read-only)    
BlendDataImages.is_updated -> is_updated:    boolean, (read-only)    
BlendDataLamps.is_updated -> is_updated:    boolean, (read-only)    
BlendDataLattices.is_updated -> is_updated:    boolean, (read-only)    
BlendDataLibraries.is_updated -> is_updated:    boolean, (read-only)    
BlendDataMaterials.is_updated -> is_updated:    boolean, (read-only)    
BlendDataMeshes.is_updated -> is_updated:    boolean, (read-only)    
BlendDataMetaBalls.is_updated -> is_updated:    boolean, (read-only)    
BlendDataNodeTrees.is_updated -> is_updated:    boolean, (read-only)    
BlendDataObjects.is_updated -> is_updated:    boolean, (read-only)    
BlendDataParticles.is_updated -> is_updated:    boolean, (read-only)    
BlendDataScenes.is_updated -> is_updated:    boolean, (read-only)    
BlendDataScreens.is_updated -> is_updated:    boolean, (read-only)    
BlendDataSounds.is_updated -> is_updated:    boolean, (read-only)    
BlendDataSpeakers.is_updated -> is_updated:    boolean, (read-only)    
BlendDataTexts.is_updated -> is_updated:    boolean, (read-only)    
BlendDataTextures.is_updated -> is_updated:    boolean, (read-only)    
BlendDataWindowManagers.is_updated -> is_updated:    boolean, (read-only)    
BlendDataWorlds.is_updated -> is_updated:    boolean, (read-only)    
BlenderRNA.structs -> structs:    collection, (read-only)    
BoidRule.name -> name:    string    Boid rule name
BoidRule.type -> type:    enum, (read-only)    
BoidRule.use_in_air -> use_in_air:    boolean    Use rule when boid is flying
BoidRule.use_on_land -> use_on_land:    boolean    Use rule when boid is on land
BoidRule|BoidRuleAverageSpeed.level -> level:    float    How much velocity's z-component is kept constant
BoidRule|BoidRuleAverageSpeed.speed -> speed:    float    Percentage of maximum speed
BoidRule|BoidRuleAverageSpeed.wander -> wander:    float    How fast velocity's direction is randomized
BoidRule|BoidRuleAvoid.fear_factor -> fear_factor:    float    Avoid object if danger from it is above this threshold
BoidRule|BoidRuleAvoid.object -> object:    pointer    Object to avoid
BoidRule|BoidRuleAvoid.use_predict -> use_predict:    boolean    Predict target movement
BoidRule|BoidRuleAvoidCollision.look_ahead -> look_ahead:    float    Time to look ahead in seconds
BoidRule|BoidRuleAvoidCollision.use_avoid -> use_avoid:    boolean    Avoid collision with other boids
BoidRule|BoidRuleAvoidCollision.use_avoid_collision -> use_avoid_collision:    boolean    Avoid collision with deflector objects
BoidRule|BoidRuleFight.distance -> distance:    float    Attack boids at max this distance
BoidRule|BoidRuleFight.flee_distance -> flee_distance:    float    Flee to this distance
BoidRule|BoidRuleFollowLeader.distance -> distance:    float    Distance behind leader to follow
BoidRule|BoidRuleFollowLeader.object -> object:    pointer    Follow this object instead of a boid
BoidRule|BoidRuleFollowLeader.queue_count -> queue_count:    int    How many boids in a line
BoidRule|BoidRuleFollowLeader.use_line -> use_line:    boolean    Follow leader in a line
BoidRule|BoidRuleGoal.object -> object:    pointer    Goal object
BoidRule|BoidRuleGoal.use_predict -> use_predict:    boolean    Predict target movement
BoidSettings.accuracy -> accuracy:    float    Accuracy of attack
BoidSettings.active_boid_state -> active_boid_state:    pointer, (read-only)    
BoidSettings.active_boid_state_index -> active_boid_state_index:    int    
BoidSettings.aggression -> aggression:    float    Boid will fight this times stronger enemy
BoidSettings.air_acc_max -> air_acc_max:    float    Maximum acceleration in air (relative to maximum speed)
BoidSettings.air_ave_max -> air_ave_max:    float    Maximum angular velocity in air (relative to 180 degrees)
BoidSettings.air_personal_space -> air_personal_space:    float    Radius of boids personal space in air (% of particle size)
BoidSettings.air_speed_max -> air_speed_max:    float    Maximum speed in air
BoidSettings.air_speed_min -> air_speed_min:    float    Minimum speed in air (relative to maximum speed)
BoidSettings.bank -> bank:    float    Amount of rotation around velocity vector on turns
BoidSettings.health -> health:    float    Initial boid health when born
BoidSettings.height -> height:    float    Boid height relative to particle size
BoidSettings.land_acc_max -> land_acc_max:    float    Maximum acceleration on land (relative to maximum speed)
BoidSettings.land_ave_max -> land_ave_max:    float    Maximum angular velocity on land (relative to 180 degrees)
BoidSettings.land_jump_speed -> land_jump_speed:    float    Maximum speed for jumping
BoidSettings.land_personal_space -> land_personal_space:    float    Radius of boids personal space on land (% of particle size)
BoidSettings.land_smooth -> land_smooth:    float    How smoothly the boids land
BoidSettings.land_speed_max -> land_speed_max:    float    Maximum speed on land
BoidSettings.land_stick_force -> land_stick_force:    float    How strong a force must be to start effecting a boid on land
BoidSettings.pitch -> pitch:    float    Amount of rotation around side vector
BoidSettings.range -> range:    float    Maximum distance from which a boid can attack
BoidSettings.states -> states:    collection, (read-only)    
BoidSettings.strength -> strength:    float    Maximum caused damage on attack per second
BoidSettings.use_climb -> use_climb:    boolean    Allow boids to climb goal objects
BoidSettings.use_flight -> use_flight:    boolean    Allow boids to move in air
BoidSettings.use_land -> use_land:    boolean    Allow boids to move on land
BoidState.active_boid_rule -> active_boid_rule:    pointer, (read-only)    
BoidState.active_boid_rule_index -> active_boid_rule_index:    int    
BoidState.falloff -> falloff:    float    
BoidState.name -> name:    string    Boid state name
BoidState.rule_fuzzy -> rule_fuzzy:    float    
BoidState.rules -> rules:    collection, (read-only)    
BoidState.ruleset_type -> ruleset_type:    enum    How the rules in the list are evaluated
BoidState.volume -> volume:    float    
Bone.bbone_in -> bbone_in:    float    Length of first Bezier Handle (for B-Bones only)
Bone.bbone_out -> bbone_out:    float    Length of second Bezier Handle (for B-Bones only)
Bone.bbone_segments -> bbone_segments:    int    Number of subdivisions of bone (for B-Bones only)
Bone.bbone_x -> bbone_x:    float    B-Bone X size
Bone.bbone_z -> bbone_z:    float    B-Bone Z size
Bone.children -> children:    collection, (read-only)    Bones which are children of this bone
Bone.envelope_distance -> envelope_distance:    float    Bone deformation distance (for Envelope deform only)
Bone.envelope_weight -> envelope_weight:    float    Bone deformation weight (for Envelope deform only)
Bone.head -> head:    float[3]    Location of head end of the bone relative to its parent
Bone.head_local -> head_local:    float[3]    Location of head end of the bone relative to armature
Bone.head_radius -> head_radius:    float    Radius of head of bone (for Envelope deform only)
Bone.hide -> hide:    boolean    Bone is not visible when it is not in Edit Mode (i.e. in Object or Pose Modes)
Bone.hide_select -> hide_select:    boolean    Bone is able to be selected
Bone.layers -> layers:    boolean[32]    Layers bone exists in
Bone.matrix -> matrix:    float[9]    3x3 bone matrix
Bone.matrix_local -> matrix_local:    float[16]    4x4 bone matrix relative to armature
Bone.name -> name:    string    
Bone.parent -> parent:    pointer, (read-only)    Parent bone (in same Armature)
Bone.select -> select:    boolean    
Bone.select_head -> select_head:    boolean    
Bone.select_tail -> select_tail:    boolean    
Bone.show_wire -> show_wire:    boolean    Bone is always drawn as Wireframe regardless of viewport draw mode (useful for non-obstructive custom bone shapes)
Bone.tail -> tail:    float[3]    Location of tail end of the bone
Bone.tail_local -> tail_local:    float[3]    Location of tail end of the bone relative to armature
Bone.tail_radius -> tail_radius:    float    Radius of tail of bone (for Envelope deform only)
Bone.use_connect -> use_connect:    boolean, (read-only)    When bone has a parent, bone's head is stuck to the parent's tail
Bone.use_cyclic_offset -> use_cyclic_offset:    boolean    When bone doesn't have a parent, it receives cyclic offset effects (Deprecated)
Bone.use_deform -> use_deform:    boolean    Enable Bone to deform geometry
Bone.use_envelope_multiply -> use_envelope_multiply:    boolean    When deforming bone, multiply effects of Vertex Group weights with Envelope influence
Bone.use_inherit_rotation -> use_inherit_rotation:    boolean    Bone inherits rotation or scale from parent bone
Bone.use_inherit_scale -> use_inherit_scale:    boolean    Bone inherits scaling from parent bone
Bone.use_local_location -> use_local_location:    boolean    Bone location is set in local space
Bone.use_relative_parent -> use_relative_parent:    boolean    Object children will use relative transform, like deform
BoneGroup.color_set -> color_set:    enum    Custom color set to use
BoneGroup.colors -> colors:    pointer, (read-only)    Copy of the colors associated with the group's color set
BoneGroup.name -> name:    string    
BoneGroups.active -> active:    pointer    Active bone group for this pose
BoneGroups.active_index -> active_index:    int    Active index in bone groups array
BrushCapabilities.has_overlay -> has_overlay:    boolean, (read-only)    
BrushCapabilities.has_random_texture_angle -> has_random_texture_angle:    boolean, (read-only)    
BrushCapabilities.has_spacing -> has_spacing:    boolean, (read-only)    
BrushCapabilities.has_texture_angle -> has_texture_angle:    boolean, (read-only)    
BrushCapabilities.has_texture_angle_source -> has_texture_angle_source:    boolean, (read-only)    
ClothCollisionSettings.collision_quality -> collision_quality:    int    How many collision iterations should be done. (higher is better quality but slower)
ClothCollisionSettings.distance_min -> distance_min:    float    Minimum distance between collision objects before collision response takes in
ClothCollisionSettings.distance_repel -> distance_repel:    float    Maximum distance to apply repulsion force, must be greater than minimum distance
ClothCollisionSettings.friction -> friction:    float    Friction force if a collision happened (higher = less movement)
ClothCollisionSettings.group -> group:    pointer    Limit colliders to this Group
ClothCollisionSettings.repel_force -> repel_force:    float    Repulsion force to apply on cloth when close to colliding
ClothCollisionSettings.self_collision_quality -> self_collision_quality:    int    How many self collision iterations should be done (higher is better quality but slower)
ClothCollisionSettings.self_distance_min -> self_distance_min:    float    0.5 means no distance at all, 1.0 is maximum distance
ClothCollisionSettings.self_friction -> self_friction:    float    Friction/damping with self contact
ClothCollisionSettings.use_collision -> use_collision:    boolean    Enable collisions with other objects
ClothCollisionSettings.use_self_collision -> use_self_collision:    boolean    Enable self collisions
ClothCollisionSettings.vertex_group_self_collisions -> vertex_group_self_collisions:    string    Vertex group to define vertices which are not used during self collisions
ClothSettings.air_damping -> air_damping:    float    Air has normally some thickness which slows falling things down
ClothSettings.bending_stiffness -> bending_stiffness:    float    Wrinkle coefficient (higher = less smaller but more big wrinkles)
ClothSettings.bending_stiffness_max -> bending_stiffness_max:    float    Maximum bending stiffness value
ClothSettings.collider_friction -> collider_friction:    float    
ClothSettings.effector_weights -> effector_weights:    pointer, (read-only)    
ClothSettings.goal_default -> goal_default:    float    Default Goal (vertex target position) value, when no Vertex Group used
ClothSettings.goal_friction -> goal_friction:    float    Goal (vertex target position) friction
ClothSettings.goal_max -> goal_max:    float    Goal maximum, vertex group weights are scaled to match this range
ClothSettings.goal_min -> goal_min:    float    Goal minimum, vertex group weights are scaled to match this range
ClothSettings.goal_spring -> goal_spring:    float    Goal (vertex target position) spring stiffness
ClothSettings.gravity -> gravity:    float[3]    Gravity or external force vector
ClothSettings.internal_friction -> internal_friction:    float    
ClothSettings.mass -> mass:    float    Mass of cloth material
ClothSettings.pin_stiffness -> pin_stiffness:    float    Pin (vertex target position) spring stiffness
ClothSettings.pre_roll -> pre_roll:    int    Start simulation a number of frames earlier to let the cloth settle in
ClothSettings.quality -> quality:    int    Quality of the simulation in steps per frame (higher is better quality but slower)
ClothSettings.rest_shape_key -> rest_shape_key:    pointer    Shape key to use the rest spring lengths from
ClothSettings.spring_damping -> spring_damping:    float    Damping of cloth velocity (higher = more smooth, less jiggling)
ClothSettings.structural_stiffness -> structural_stiffness:    float    Overall stiffness of structure
ClothSettings.structural_stiffness_max -> structural_stiffness_max:    float    Maximum structural stiffness value
ClothSettings.use_pin_cloth -> use_pin_cloth:    boolean    Enable pinning of cloth vertices to other objects/positions
ClothSettings.use_stiffness_scale -> use_stiffness_scale:    boolean    If enabled, stiffness can be scaled along a weight painted vertex group
ClothSettings.vel_damping -> vel_damping:    float    Damp velocity to help cloth reach the resting position faster (1.0 = no damping, 0.0 = fully dampened)
ClothSettings.vertex_group_bending -> vertex_group_bending:    string    Vertex group for fine control over bending stiffness
ClothSettings.vertex_group_mass -> vertex_group_mass:    string    Vertex Group for pinning of vertices
ClothSettings.vertex_group_structural_stiffness -> vertex_group_structural_stiffness:    string    Vertex group for fine control over structural stiffness
CollisionSettings.absorption -> absorption:    float    How much of effector force gets lost during collision with this object (in percent)
CollisionSettings.damping -> damping:    float    Amount of damping during collision
CollisionSettings.damping_factor -> damping_factor:    float    Amount of damping during particle collision
CollisionSettings.damping_random -> damping_random:    float    Random variation of damping
CollisionSettings.friction_factor -> friction_factor:    float    Amount of friction during particle collision
CollisionSettings.friction_random -> friction_random:    float    Random variation of friction
CollisionSettings.permeability -> permeability:    float    Chance that the particle will pass through the mesh
CollisionSettings.stickiness -> stickiness:    float    Amount of stickiness to surface collision
CollisionSettings.thickness_inner -> thickness_inner:    float    Inner face thickness
CollisionSettings.thickness_outer -> thickness_outer:    float    Outer face thickness
CollisionSettings.use -> use:    boolean    Enable this objects as a collider for physics systems
CollisionSettings.use_particle_kill -> use_particle_kill:    boolean    Kill collided particles
ColorManagedDisplaySettings.display_device -> display_device:    enum    Display device name
ColorManagedInputColorspaceSettings.name -> name:    enum    Color space of the image or movie on disk
ColorManagedSequencerColorspaceSettings.name -> name:    enum    Color space that the sequencer operates in
ColorManagedViewSettings.curve_mapping -> curve_mapping:    pointer, (read-only)    Color curve mapping applied before display transform
ColorManagedViewSettings.exposure -> exposure:    float    Exposure (stops) applied before display transform
ColorManagedViewSettings.gamma -> gamma:    float    Amount of gamma modification applied after display transform
ColorManagedViewSettings.look -> look:    enum    Additional transform applied before view transform for an artistic needs
ColorManagedViewSettings.use_curve_mapping -> use_curve_mapping:    boolean    Use RGB curved for pre-display transformation
ColorManagedViewSettings.view_transform -> view_transform:    enum    View used when converting image to a display space
ColorMapping.blend_color -> blend_color:    float[3]    Blend color to mix with texture output color
ColorMapping.blend_factor -> blend_factor:    float    
ColorMapping.blend_type -> blend_type:    enum    Mode used to mix with texture output color
ColorMapping.brightness -> brightness:    float    Adjust the brightness of the texture
ColorMapping.color_ramp -> color_ramp:    pointer, (read-only)    
ColorMapping.contrast -> contrast:    float    Adjust the contrast of the texture
ColorMapping.saturation -> saturation:    float    Adjust the saturation of colors in the texture
ColorMapping.use_color_ramp -> use_color_ramp:    boolean    Toggle color ramp operations
ColorRamp.elements -> elements:    collection, (read-only)    
ColorRamp.interpolation -> interpolation:    enum    
ColorRampElement.color -> color:    float[4]    Set color of selected color stop
ColorRampElement.position -> position:    float    Set position of selected color stop
ConsoleLine.body -> body:    string    Text in the line
ConsoleLine.current_character -> current_character:    int    
ConsoleLine.type -> type:    enum    Console line type when used in scrollback
Constraint.active -> active:    boolean    Constraint is the one being edited
Constraint.error_location -> error_location:    float, (read-only)    Amount of residual error in Blender space unit for constraints that work on position
Constraint.error_rotation -> error_rotation:    float, (read-only)    Amount of residual error in radians for constraints that work on orientation
Constraint.influence -> influence:    float    Amount of influence constraint will have on the final solution
Constraint.is_proxy_local -> is_proxy_local:    boolean    Constraint was added in this proxy instance (i.e. did not belong to source Armature)
Constraint.is_valid -> is_valid:    boolean, (read-only)    Constraint has valid settings and can be evaluated
Constraint.mute -> mute:    boolean    Enable/Disable Constraint
Constraint.name -> name:    string    Constraint name
Constraint.owner_space -> owner_space:    enum    Space that owner is evaluated in
Constraint.show_expanded -> show_expanded:    boolean    Constraint's panel is expanded in UI
Constraint.target_space -> target_space:    enum    Space that target is evaluated in
Constraint.type -> type:    enum, (read-only)    
ConstraintTarget.subtarget -> subtarget:    string    
ConstraintTarget.target -> target:    pointer    Target Object
Constraint|ActionConstraint.action -> action:    pointer    The constraining action
Constraint|ActionConstraint.frame_end -> frame_end:    int    Last frame of the Action to use
Constraint|ActionConstraint.frame_start -> frame_start:    int    First frame of the Action to use
Constraint|ActionConstraint.max -> max:    float    Maximum value for target channel range
Constraint|ActionConstraint.min -> min:    float    Minimum value for target channel range
Constraint|ActionConstraint.subtarget -> subtarget:    string    
Constraint|ActionConstraint.target -> target:    pointer    Target Object
Constraint|ActionConstraint.transform_channel -> transform_channel:    enum    Transformation channel from the target that is used to key the Action
Constraint|ActionConstraint.use_bone_object_action -> use_bone_object_action:    boolean    Bones only: apply the object's transformation channels of the action to the constrained bone, instead of bone's channels
Constraint|CameraSolverConstraint.clip -> clip:    pointer    Movie Clip to get tracking data from
Constraint|CameraSolverConstraint.use_active_clip -> use_active_clip:    boolean    Use active clip defined in scene
Constraint|ChildOfConstraint.inverse_matrix -> inverse_matrix:    float[16]    Transformation matrix to apply before
Constraint|ChildOfConstraint.subtarget -> subtarget:    string    
Constraint|ChildOfConstraint.target -> target:    pointer    Target Object
Constraint|ChildOfConstraint.use_location_x -> use_location_x:    boolean    Use X Location of Parent
Constraint|ChildOfConstraint.use_location_y -> use_location_y:    boolean    Use Y Location of Parent
Constraint|ChildOfConstraint.use_location_z -> use_location_z:    boolean    Use Z Location of Parent
Constraint|ChildOfConstraint.use_rotation_x -> use_rotation_x:    boolean    Use X Rotation of Parent
Constraint|ChildOfConstraint.use_rotation_y -> use_rotation_y:    boolean    Use Y Rotation of Parent
Constraint|ChildOfConstraint.use_rotation_z -> use_rotation_z:    boolean    Use Z Rotation of Parent
Constraint|ChildOfConstraint.use_scale_x -> use_scale_x:    boolean    Use X Scale of Parent
Constraint|ChildOfConstraint.use_scale_y -> use_scale_y:    boolean    Use Y Scale of Parent
Constraint|ChildOfConstraint.use_scale_z -> use_scale_z:    boolean    Use Z Scale of Parent
Constraint|ClampToConstraint.main_axis -> main_axis:    enum    Main axis of movement
Constraint|ClampToConstraint.target -> target:    pointer    Target Object (Curves only)
Constraint|ClampToConstraint.use_cyclic -> use_cyclic:    boolean    Treat curve as cyclic curve (no clamping to curve bounding box)
Constraint|CopyLocationConstraint.head_tail -> head_tail:    float    Target along length of bone: Head=0, Tail=1
Constraint|CopyLocationConstraint.invert_x -> invert_x:    boolean    Invert the X location
Constraint|CopyLocationConstraint.invert_y -> invert_y:    boolean    Invert the Y location
Constraint|CopyLocationConstraint.invert_z -> invert_z:    boolean    Invert the Z location
Constraint|CopyLocationConstraint.subtarget -> subtarget:    string    
Constraint|CopyLocationConstraint.target -> target:    pointer    Target Object
Constraint|CopyLocationConstraint.use_offset -> use_offset:    boolean    Add original location into copied location
Constraint|CopyLocationConstraint.use_x -> use_x:    boolean    Copy the target's X location
Constraint|CopyLocationConstraint.use_y -> use_y:    boolean    Copy the target's Y location
Constraint|CopyLocationConstraint.use_z -> use_z:    boolean    Copy the target's Z location
Constraint|CopyRotationConstraint.invert_x -> invert_x:    boolean    Invert the X rotation
Constraint|CopyRotationConstraint.invert_y -> invert_y:    boolean    Invert the Y rotation
Constraint|CopyRotationConstraint.invert_z -> invert_z:    boolean    Invert the Z rotation
Constraint|CopyRotationConstraint.subtarget -> subtarget:    string    
Constraint|CopyRotationConstraint.target -> target:    pointer    Target Object
Constraint|CopyRotationConstraint.use_offset -> use_offset:    boolean    Add original rotation into copied rotation
Constraint|CopyRotationConstraint.use_x -> use_x:    boolean    Copy the target's X rotation
Constraint|CopyRotationConstraint.use_y -> use_y:    boolean    Copy the target's Y rotation
Constraint|CopyRotationConstraint.use_z -> use_z:    boolean    Copy the target's Z rotation
Constraint|CopyScaleConstraint.subtarget -> subtarget:    string    
Constraint|CopyScaleConstraint.target -> target:    pointer    Target Object
Constraint|CopyScaleConstraint.use_offset -> use_offset:    boolean    Add original scale into copied scale
Constraint|CopyScaleConstraint.use_x -> use_x:    boolean    Copy the target's X scale
Constraint|CopyScaleConstraint.use_y -> use_y:    boolean    Copy the target's Y scale
Constraint|CopyScaleConstraint.use_z -> use_z:    boolean    Copy the target's Z scale
Constraint|CopyTransformsConstraint.head_tail -> head_tail:    float    Target along length of bone: Head=0, Tail=1
Constraint|CopyTransformsConstraint.subtarget -> subtarget:    string    
Constraint|CopyTransformsConstraint.target -> target:    pointer    Target Object
Constraint|DampedTrackConstraint.head_tail -> head_tail:    float    Target along length of bone: Head=0, Tail=1
Constraint|DampedTrackConstraint.subtarget -> subtarget:    string    
Constraint|DampedTrackConstraint.target -> target:    pointer    Target Object
Constraint|DampedTrackConstraint.track_axis -> track_axis:    enum    Axis that points to the target object
Constraint|FloorConstraint.floor_location -> floor_location:    enum    Location of target that object will not pass through
Constraint|FloorConstraint.offset -> offset:    float    Offset of floor from object origin
Constraint|FloorConstraint.subtarget -> subtarget:    string    
Constraint|FloorConstraint.target -> target:    pointer    Target Object
Constraint|FloorConstraint.use_rotation -> use_rotation:    boolean    Use the target's rotation to determine floor
Constraint|FloorConstraint.use_sticky -> use_sticky:    boolean    Immobilize object while constrained
Constraint|FollowPathConstraint.forward_axis -> forward_axis:    enum    Axis that points forward along the path
Constraint|FollowPathConstraint.offset -> offset:    float    Offset from the position corresponding to the time frame
Constraint|FollowPathConstraint.offset_factor -> offset_factor:    float    Percentage value defining target position along length of curve
Constraint|FollowPathConstraint.target -> target:    pointer    Target Object
Constraint|FollowPathConstraint.up_axis -> up_axis:    enum    Axis that points upward
Constraint|FollowPathConstraint.use_curve_follow -> use_curve_follow:    boolean    Object will follow the heading and banking of the curve
Constraint|FollowPathConstraint.use_curve_radius -> use_curve_radius:    boolean    Object is scaled by the curve radius
Constraint|FollowPathConstraint.use_fixed_location -> use_fixed_location:    boolean    Object will stay locked to a single point somewhere along the length of the curve regardless of time
Constraint|FollowTrackConstraint.camera -> camera:    pointer    Camera to which motion is parented (if empty active scene camera is used)
Constraint|FollowTrackConstraint.clip -> clip:    pointer    Movie Clip to get tracking data from
Constraint|FollowTrackConstraint.depth_object -> depth_object:    pointer    Object used to define depth in camera space by projecting onto surface of this object
Constraint|FollowTrackConstraint.frame_method -> frame_method:    enum    How the footage fits in the camera frame
Constraint|FollowTrackConstraint.object -> object:    string    Movie tracking object to follow (if empty, camera object is used)
Constraint|FollowTrackConstraint.track -> track:    string    Movie tracking track to follow
Constraint|FollowTrackConstraint.use_3d_position -> use_3d_position:    boolean    Use 3D position of track to parent to
Constraint|FollowTrackConstraint.use_active_clip -> use_active_clip:    boolean    Use active clip defined in scene
Constraint|KinematicConstraint.chain_count -> chain_count:    int    How many bones are included in the IK effect - 0 uses all bones
Constraint|KinematicConstraint.distance -> distance:    float    Radius of limiting sphere
Constraint|KinematicConstraint.ik_type -> ik_type:    enum    
Constraint|KinematicConstraint.iterations -> iterations:    int    Maximum number of solving iterations
Constraint|KinematicConstraint.limit_mode -> limit_mode:    enum    Distances in relation to sphere of influence to allow
Constraint|KinematicConstraint.lock_location_x -> lock_location_x:    boolean    Constraint position along X axis
Constraint|KinematicConstraint.lock_location_y -> lock_location_y:    boolean    Constraint position along Y axis
Constraint|KinematicConstraint.lock_location_z -> lock_location_z:    boolean    Constraint position along Z axis
Constraint|KinematicConstraint.lock_rotation_x -> lock_rotation_x:    boolean    Constraint rotation along X axis
Constraint|KinematicConstraint.lock_rotation_y -> lock_rotation_y:    boolean    Constraint rotation along Y axis
Constraint|KinematicConstraint.lock_rotation_z -> lock_rotation_z:    boolean    Constraint rotation along Z axis
Constraint|KinematicConstraint.orient_weight -> orient_weight:    float    For Tree-IK: Weight of orientation control for this target
Constraint|KinematicConstraint.pole_angle -> pole_angle:    float    Pole rotation offset
Constraint|KinematicConstraint.pole_subtarget -> pole_subtarget:    string    
Constraint|KinematicConstraint.pole_target -> pole_target:    pointer    Object for pole rotation
Constraint|KinematicConstraint.reference_axis -> reference_axis:    enum    Constraint axis Lock options relative to Bone or Target reference
Constraint|KinematicConstraint.subtarget -> subtarget:    string    
Constraint|KinematicConstraint.target -> target:    pointer    Target Object
Constraint|KinematicConstraint.use_location -> use_location:    boolean    Chain follows position of target
Constraint|KinematicConstraint.use_rotation -> use_rotation:    boolean    Chain follows rotation of target
Constraint|KinematicConstraint.use_stretch -> use_stretch:    boolean    Enable IK Stretching
Constraint|KinematicConstraint.use_tail -> use_tail:    boolean    Include bone's tail as last element in chain
Constraint|KinematicConstraint.weight -> weight:    float    For Tree-IK: Weight of position control for this target
Constraint|LimitDistanceConstraint.distance -> distance:    float    Radius of limiting sphere
Constraint|LimitDistanceConstraint.head_tail -> head_tail:    float    Target along length of bone: Head=0, Tail=1
Constraint|LimitDistanceConstraint.limit_mode -> limit_mode:    enum    Distances in relation to sphere of influence to allow
Constraint|LimitDistanceConstraint.subtarget -> subtarget:    string    
Constraint|LimitDistanceConstraint.target -> target:    pointer    Target Object
Constraint|LimitDistanceConstraint.use_transform_limit -> use_transform_limit:    boolean    Transforms are affected by this constraint as well
Constraint|LimitLocationConstraint.max_x -> max_x:    float    Highest X value to allow
Constraint|LimitLocationConstraint.max_y -> max_y:    float    Highest Y value to allow
Constraint|LimitLocationConstraint.max_z -> max_z:    float    Highest Z value to allow
Constraint|LimitLocationConstraint.min_x -> min_x:    float    Lowest X value to allow
Constraint|LimitLocationConstraint.min_y -> min_y:    float    Lowest Y value to allow
Constraint|LimitLocationConstraint.min_z -> min_z:    float    Lowest Z value to allow
Constraint|LimitLocationConstraint.use_max_x -> use_max_x:    boolean    Use the maximum X value
Constraint|LimitLocationConstraint.use_max_y -> use_max_y:    boolean    Use the maximum Y value
Constraint|LimitLocationConstraint.use_max_z -> use_max_z:    boolean    Use the maximum Z value
Constraint|LimitLocationConstraint.use_min_x -> use_min_x:    boolean    Use the minimum X value
Constraint|LimitLocationConstraint.use_min_y -> use_min_y:    boolean    Use the minimum Y value
Constraint|LimitLocationConstraint.use_min_z -> use_min_z:    boolean    Use the minimum Z value
Constraint|LimitLocationConstraint.use_transform_limit -> use_transform_limit:    boolean    Transforms are affected by this constraint as well
Constraint|LimitRotationConstraint.max_x -> max_x:    float    Highest X value to allow
Constraint|LimitRotationConstraint.max_y -> max_y:    float    Highest Y value to allow
Constraint|LimitRotationConstraint.max_z -> max_z:    float    Highest Z value to allow
Constraint|LimitRotationConstraint.min_x -> min_x:    float    Lowest X value to allow
Constraint|LimitRotationConstraint.min_y -> min_y:    float    Lowest Y value to allow
Constraint|LimitRotationConstraint.min_z -> min_z:    float    Lowest Z value to allow
Constraint|LimitRotationConstraint.use_limit_x -> use_limit_x:    boolean    Use the minimum X value
Constraint|LimitRotationConstraint.use_limit_y -> use_limit_y:    boolean    Use the minimum Y value
Constraint|LimitRotationConstraint.use_limit_z -> use_limit_z:    boolean    Use the minimum Z value
Constraint|LimitRotationConstraint.use_transform_limit -> use_transform_limit:    boolean    Transforms are affected by this constraint as well
Constraint|LimitScaleConstraint.max_x -> max_x:    float    Highest X value to allow
Constraint|LimitScaleConstraint.max_y -> max_y:    float    Highest Y value to allow
Constraint|LimitScaleConstraint.max_z -> max_z:    float    Highest Z value to allow
Constraint|LimitScaleConstraint.min_x -> min_x:    float    Lowest X value to allow
Constraint|LimitScaleConstraint.min_y -> min_y:    float    Lowest Y value to allow
Constraint|LimitScaleConstraint.min_z -> min_z:    float    Lowest Z value to allow
Constraint|LimitScaleConstraint.use_max_x -> use_max_x:    boolean    Use the maximum X value
Constraint|LimitScaleConstraint.use_max_y -> use_max_y:    boolean    Use the maximum Y value
Constraint|LimitScaleConstraint.use_max_z -> use_max_z:    boolean    Use the maximum Z value
Constraint|LimitScaleConstraint.use_min_x -> use_min_x:    boolean    Use the minimum X value
Constraint|LimitScaleConstraint.use_min_y -> use_min_y:    boolean    Use the minimum Y value
Constraint|LimitScaleConstraint.use_min_z -> use_min_z:    boolean    Use the minimum Z value
Constraint|LimitScaleConstraint.use_transform_limit -> use_transform_limit:    boolean    Transforms are affected by this constraint as well
Constraint|LockedTrackConstraint.head_tail -> head_tail:    float    Target along length of bone: Head=0, Tail=1
Constraint|LockedTrackConstraint.lock_axis -> lock_axis:    enum    Axis that points upward
Constraint|LockedTrackConstraint.subtarget -> subtarget:    string    
Constraint|LockedTrackConstraint.target -> target:    pointer    Target Object
Constraint|LockedTrackConstraint.track_axis -> track_axis:    enum    Axis that points to the target object
Constraint|MaintainVolumeConstraint.free_axis -> free_axis:    enum    The free scaling axis of the object
Constraint|MaintainVolumeConstraint.volume -> volume:    float    Volume of the bone at rest
Constraint|ObjectSolverConstraint.camera -> camera:    pointer    Camera to which motion is parented (if empty active scene camera is used)
Constraint|ObjectSolverConstraint.clip -> clip:    pointer    Movie Clip to get tracking data from
Constraint|ObjectSolverConstraint.object -> object:    string    Movie tracking object to follow
Constraint|ObjectSolverConstraint.use_active_clip -> use_active_clip:    boolean    Use active clip defined in scene
Constraint|PivotConstraint.head_tail -> head_tail:    float    Target along length of bone: Head=0, Tail=1
Constraint|PivotConstraint.offset -> offset:    float[3]    Offset of pivot from target (when set), or from owner's location (when Fixed Position is off), or the absolute pivot point
Constraint|PivotConstraint.rotation_range -> rotation_range:    enum    Rotation range on which pivoting should occur
Constraint|PivotConstraint.subtarget -> subtarget:    string    
Constraint|PivotConstraint.target -> target:    pointer    Target Object, defining the position of the pivot when defined
Constraint|PivotConstraint.use_relative_location -> use_relative_location:    boolean    Offset will be an absolute point in space instead of relative to the target
Constraint|PythonConstraint.has_script_error -> has_script_error:    boolean, (read-only)    The linked Python script has thrown an error
Constraint|PythonConstraint.target_count -> target_count:    int    Usually only 1-3 are needed
Constraint|PythonConstraint.targets -> targets:    collection, (read-only)    Target Objects
Constraint|PythonConstraint.text -> text:    pointer    The text object that contains the Python script
Constraint|PythonConstraint.use_targets -> use_targets:    boolean    Use the targets indicated in the constraint panel
Constraint|RigidBodyJointConstraint.axis_x -> axis_x:    float    Rotate pivot on X axis
Constraint|RigidBodyJointConstraint.axis_y -> axis_y:    float    Rotate pivot on Y axis
Constraint|RigidBodyJointConstraint.axis_z -> axis_z:    float    Rotate pivot on Z axis
Constraint|RigidBodyJointConstraint.child -> child:    pointer    Child object
Constraint|RigidBodyJointConstraint.limit_angle_max_x -> limit_angle_max_x:    float    
Constraint|RigidBodyJointConstraint.limit_angle_max_y -> limit_angle_max_y:    float    
Constraint|RigidBodyJointConstraint.limit_angle_max_z -> limit_angle_max_z:    float    
Constraint|RigidBodyJointConstraint.limit_angle_min_x -> limit_angle_min_x:    float    
Constraint|RigidBodyJointConstraint.limit_angle_min_y -> limit_angle_min_y:    float    
Constraint|RigidBodyJointConstraint.limit_angle_min_z -> limit_angle_min_z:    float    
Constraint|RigidBodyJointConstraint.limit_max_x -> limit_max_x:    float    
Constraint|RigidBodyJointConstraint.limit_max_y -> limit_max_y:    float    
Constraint|RigidBodyJointConstraint.limit_max_z -> limit_max_z:    float    
Constraint|RigidBodyJointConstraint.limit_min_x -> limit_min_x:    float    
Constraint|RigidBodyJointConstraint.limit_min_y -> limit_min_y:    float    
Constraint|RigidBodyJointConstraint.limit_min_z -> limit_min_z:    float    
Constraint|RigidBodyJointConstraint.pivot_type -> pivot_type:    enum    
Constraint|RigidBodyJointConstraint.pivot_x -> pivot_x:    float    Offset pivot on X
Constraint|RigidBodyJointConstraint.pivot_y -> pivot_y:    float    Offset pivot on Y
Constraint|RigidBodyJointConstraint.pivot_z -> pivot_z:    float    Offset pivot on Z
Constraint|RigidBodyJointConstraint.show_pivot -> show_pivot:    boolean    Display the pivot point and rotation in 3D view
Constraint|RigidBodyJointConstraint.target -> target:    pointer    Target Object
Constraint|RigidBodyJointConstraint.use_angular_limit_x -> use_angular_limit_x:    boolean    Use minimum/maximum X angular limit
Constraint|RigidBodyJointConstraint.use_angular_limit_y -> use_angular_limit_y:    boolean    Use minimum/maximum Y angular limit
Constraint|RigidBodyJointConstraint.use_angular_limit_z -> use_angular_limit_z:    boolean    Use minimum/maximum Z angular limit
Constraint|RigidBodyJointConstraint.use_limit_x -> use_limit_x:    boolean    Use minimum/maximum X limit
Constraint|RigidBodyJointConstraint.use_limit_y -> use_limit_y:    boolean    Use minimum/maximum y limit
Constraint|RigidBodyJointConstraint.use_limit_z -> use_limit_z:    boolean    Use minimum/maximum z limit
Constraint|RigidBodyJointConstraint.use_linked_collision -> use_linked_collision:    boolean    Disable collision between linked bodies
Constraint|ShrinkwrapConstraint.distance -> distance:    float    Distance to Target
Constraint|ShrinkwrapConstraint.project_axis -> project_axis:    enum    Axis constrain to
Constraint|ShrinkwrapConstraint.project_axis_space -> project_axis_space:    enum    Space for the projection axis
Constraint|ShrinkwrapConstraint.project_limit -> project_limit:    float    Limit the distance used for projection (zero disables)
Constraint|ShrinkwrapConstraint.shrinkwrap_type -> shrinkwrap_type:    enum    Select type of shrinkwrap algorithm for target position
Constraint|ShrinkwrapConstraint.target -> target:    pointer    Target Object
Constraint|SplineIKConstraint.chain_count -> chain_count:    int    How many bones are included in the chain
Constraint|SplineIKConstraint.joint_bindings -> joint_bindings:    float[32]    (EXPERIENCED USERS ONLY) The relative positions of the joints along the chain, as percentages
Constraint|SplineIKConstraint.target -> target:    pointer    Curve that controls this relationship
Constraint|SplineIKConstraint.use_chain_offset -> use_chain_offset:    boolean    Offset the entire chain relative to the root joint
Constraint|SplineIKConstraint.use_curve_radius -> use_curve_radius:    boolean    Average radius of the endpoints is used to tweak the X and Z Scaling of the bones, on top of XZ Scale mode
Constraint|SplineIKConstraint.use_even_divisions -> use_even_divisions:    boolean    Ignore the relative lengths of the bones when fitting to the curve
Constraint|SplineIKConstraint.use_y_stretch -> use_y_stretch:    boolean    Stretch the Y axis of the bones to fit the curve
Constraint|SplineIKConstraint.xz_scale_mode -> xz_scale_mode:    enum    Method used for determining the scaling of the X and Z axes of the bones
Constraint|StretchToConstraint.bulge -> bulge:    float    Factor between volume variation and stretching
Constraint|StretchToConstraint.head_tail -> head_tail:    float    Target along length of bone: Head=0, Tail=1
Constraint|StretchToConstraint.keep_axis -> keep_axis:    enum    Axis to maintain during stretch
Constraint|StretchToConstraint.rest_length -> rest_length:    float    Length at rest position
Constraint|StretchToConstraint.subtarget -> subtarget:    string    
Constraint|StretchToConstraint.target -> target:    pointer    Target Object
Constraint|StretchToConstraint.volume -> volume:    enum    Maintain the object's volume as it stretches
Constraint|TrackToConstraint.head_tail -> head_tail:    float    Target along length of bone: Head=0, Tail=1
Constraint|TrackToConstraint.subtarget -> subtarget:    string    
Constraint|TrackToConstraint.target -> target:    pointer    Target Object
Constraint|TrackToConstraint.track_axis -> track_axis:    enum    Axis that points to the target object
Constraint|TrackToConstraint.up_axis -> up_axis:    enum    Axis that points upward
Constraint|TrackToConstraint.use_target_z -> use_target_z:    boolean    Target's Z axis, not World Z axis, will constraint the Up direction
Constraint|TransformConstraint.from_max_x -> from_max_x:    float    Top range of X axis source motion
Constraint|TransformConstraint.from_max_y -> from_max_y:    float    Top range of Y axis source motion
Constraint|TransformConstraint.from_max_z -> from_max_z:    float    Top range of Z axis source motion
Constraint|TransformConstraint.from_min_x -> from_min_x:    float    Bottom range of X axis source motion
Constraint|TransformConstraint.from_min_y -> from_min_y:    float    Bottom range of Y axis source motion
Constraint|TransformConstraint.from_min_z -> from_min_z:    float    Bottom range of Z axis source motion
Constraint|TransformConstraint.map_from -> map_from:    enum    The transformation type to use from the target
Constraint|TransformConstraint.map_to -> map_to:    enum    The transformation type to affect of the constrained object
Constraint|TransformConstraint.map_to_x_from -> map_to_x_from:    enum    The source axis constrained object's X axis uses
Constraint|TransformConstraint.map_to_y_from -> map_to_y_from:    enum    The source axis constrained object's Y axis uses
Constraint|TransformConstraint.map_to_z_from -> map_to_z_from:    enum    The source axis constrained object's Z axis uses
Constraint|TransformConstraint.subtarget -> subtarget:    string    
Constraint|TransformConstraint.target -> target:    pointer    Target Object
Constraint|TransformConstraint.to_max_x -> to_max_x:    float    Top range of X axis destination motion
Constraint|TransformConstraint.to_max_y -> to_max_y:    float    Top range of Y axis destination motion
Constraint|TransformConstraint.to_max_z -> to_max_z:    float    Top range of Z axis destination motion
Constraint|TransformConstraint.to_min_x -> to_min_x:    float    Bottom range of X axis destination motion
Constraint|TransformConstraint.to_min_y -> to_min_y:    float    Bottom range of Y axis destination motion
Constraint|TransformConstraint.to_min_z -> to_min_z:    float    Bottom range of Z axis destination motion
Constraint|TransformConstraint.use_motion_extrapolate -> use_motion_extrapolate:    boolean    Extrapolate ranges
Context.area -> area:    pointer, (read-only)    
Context.blend_data -> blend_data:    pointer, (read-only)    
Context.mode -> mode:    enum, (read-only)    
Context.region -> region:    pointer, (read-only)    
Context.region_data -> region_data:    pointer, (read-only)    
Context.scene -> scene:    pointer, (read-only)    
Context.screen -> screen:    pointer, (read-only)    
Context.space_data -> space_data:    pointer, (read-only)    
Context.tool_settings -> tool_settings:    pointer, (read-only)    
Context.user_preferences -> user_preferences:    pointer, (read-only)    
Context.window -> window:    pointer, (read-only)    
Context.window_manager -> window_manager:    pointer, (read-only)    
Controller.actuators -> actuators:    collection, (read-only)    The list containing the actuators connected to the controller
Controller.name -> name:    string    
Controller.show_expanded -> show_expanded:    boolean    Set controller expanded in the user interface
Controller.states -> states:    int    Set Controller state index (1 to 30)
Controller.type -> type:    enum    
Controller.use_priority -> use_priority:    boolean    Mark controller for execution before all non-marked controllers (good for startup scripts)
Controller|ExpressionController.expression -> expression:    string    
Controller|PythonController.mode -> mode:    enum    Python script type (textblock or module - faster)
Controller|PythonController.module -> module:    string    Module name and function to run, e.g. "someModule.main" (internal texts and external python files can be used)
Controller|PythonController.text -> text:    pointer    Text datablock with the python script
Controller|PythonController.use_debug -> use_debug:    boolean    Continuously reload the module from disk for editing external modules without restarting
CurveMap.extend -> extend:    enum    Extrapolate the curve or extend it horizontally
CurveMap.points -> points:    collection, (read-only)    
CurveMapPoint.handle_type -> handle_type:    enum    Curve interpolation at this point: Bezier or vector
CurveMapPoint.location -> location:    float[2]    X/Y coordinates of the curve point
CurveMapPoint.select -> select:    boolean    Selection state of the curve point
CurveMapping.black_level -> black_level:    float[3]    For RGB curves, the color that black is mapped to
CurveMapping.clip_max_x -> clip_max_x:    float    
CurveMapping.clip_max_y -> clip_max_y:    float    
CurveMapping.clip_min_x -> clip_min_x:    float    
CurveMapping.clip_min_y -> clip_min_y:    float    
CurveMapping.curves -> curves:    collection, (read-only)    
CurveMapping.use_clip -> use_clip:    boolean    Force the curve view to fit a defined boundary
CurveMapping.white_level -> white_level:    float[3]    For RGB curves, the color that white is mapped to
CurveSplines.active -> active:    pointer    Active curve spline
DopeSheet.filter_fcurve_name -> filter_fcurve_name:    string    F-Curve live filtering string
DopeSheet.filter_group -> filter_group:    pointer    Group that included object should be a member of
DopeSheet.show_armatures -> show_armatures:    boolean    Include visualization of armature related animation data
DopeSheet.show_cameras -> show_cameras:    boolean    Include visualization of camera related animation data
DopeSheet.show_curves -> show_curves:    boolean    Include visualization of curve related animation data
DopeSheet.show_datablock_filters -> show_datablock_filters:    boolean    Show options for whether channels related to certain types of data are included
DopeSheet.show_expanded_summary -> show_expanded_summary:    boolean    Collapse summary when shown, so all other channels get hidden (Dope Sheet editors only)
DopeSheet.show_hidden -> show_hidden:    boolean    Include channels from objects/bone that are not visible
DopeSheet.show_lamps -> show_lamps:    boolean    Include visualization of lamp related animation data
DopeSheet.show_lattices -> show_lattices:    boolean    Include visualization of lattice related animation data
DopeSheet.show_linestyles -> show_linestyles:    boolean    Include visualization of Line Style related Animation data
DopeSheet.show_materials -> show_materials:    boolean    Include visualization of material related animation data
DopeSheet.show_meshes -> show_meshes:    boolean    Include visualization of mesh related animation data
DopeSheet.show_metaballs -> show_metaballs:    boolean    Include visualization of metaball related animation data
DopeSheet.show_missing_nla -> show_missing_nla:    boolean    Include animation data blocks with no NLA data (NLA editor only)
DopeSheet.show_modifiers -> show_modifiers:    boolean    Include visualization of animation data related to datablocks linked to modifiers
DopeSheet.show_nodes -> show_nodes:    boolean    Include visualization of node related animation data
DopeSheet.show_only_errors -> show_only_errors:    boolean    Only include F-Curves and drivers that are disabled or have errors
DopeSheet.show_only_group_objects -> show_only_group_objects:    boolean    Only include channels from objects in the specified group
DopeSheet.show_only_matching_fcurves -> show_only_matching_fcurves:    boolean    Only include F-Curves with names containing search text
DopeSheet.show_only_selected -> show_only_selected:    boolean    Only include channels relating to selected objects and data
DopeSheet.show_particles -> show_particles:    boolean    Include visualization of particle related animation data
DopeSheet.show_scenes -> show_scenes:    boolean    Include visualization of scene related animation data
DopeSheet.show_shapekeys -> show_shapekeys:    boolean    Include visualization of shape key related animation data
DopeSheet.show_speakers -> show_speakers:    boolean    Include visualization of speaker related animation data
DopeSheet.show_summary -> show_summary:    boolean    Display an additional 'summary' line (Dope Sheet editors only)
DopeSheet.show_textures -> show_textures:    boolean    Include visualization of texture related animation data
DopeSheet.show_transforms -> show_transforms:    boolean    Include visualization of object-level animation data (mostly transforms)
DopeSheet.show_worlds -> show_worlds:    boolean    Include visualization of world related animation data
DopeSheet.source -> source:    pointer, (read-only)    ID-Block representing source data, usually ID_SCE (i.e. Scene)
Driver.expression -> expression:    string    Expression to use for Scripted Expression
Driver.is_valid -> is_valid:    boolean    Driver could not be evaluated in past, so should be skipped
Driver.show_debug_info -> show_debug_info:    boolean    Show intermediate values for the driver calculations to allow debugging of drivers
Driver.type -> type:    enum    Driver type
Driver.variables -> variables:    collection, (read-only)    Properties acting as inputs for this driver
DriverTarget.bone_target -> bone_target:    string    Name of PoseBone to use as target
DriverTarget.data_path -> data_path:    string    RNA Path (from ID-block) to property used
DriverTarget.id -> id:    pointer    ID-block that the specific property used can be found from (id_type property must be set first)
DriverTarget.id_type -> id_type:    enum    Type of ID-block that can be used
DriverTarget.transform_space -> transform_space:    enum    Space in which transforms are used
DriverTarget.transform_type -> transform_type:    enum    Driver variable type
DriverVariable.name -> name:    string    Name to use in scripted expressions/functions (no spaces or dots are allowed, and must start with a letter)
DriverVariable.targets -> targets:    collection, (read-only)    Sources of input data for evaluating this variable
DriverVariable.type -> type:    enum    Driver variable type
DupliObject.hide -> hide:    boolean, (read-only)    Don't show dupli object in viewport or render
DupliObject.index -> index:    int, (read-only)    Index in the lowest-level dupli list
DupliObject.matrix -> matrix:    float[16], (read-only)    Object duplicate transformation matrix
DupliObject.matrix_original -> matrix_original:    float[16], (read-only)    The original matrix of this object before it was duplicated
DupliObject.object -> object:    pointer, (read-only)    Object being duplicated
DupliObject.orco -> orco:    float[3], (read-only)    Generated coordinates in parent object space
DupliObject.particle_system -> particle_system:    pointer, (read-only)    Particle system that this dupli object was instanced from
DupliObject.persistent_id -> persistent_id:    int[8], (read-only)    Persistent identifier for inter-frame matching of objects with motion blur
DupliObject.type -> type:    enum, (read-only)    Duplicator type that generated this dupli object
DupliObject.uv -> uv:    float[2], (read-only)    UV coordinates in parent object space
DynamicPaintBrushSettings.invert_proximity -> invert_proximity:    boolean    Proximity falloff is applied inside the volume
DynamicPaintBrushSettings.material -> material:    pointer    Material to use (if not defined, material linked to the mesh is used)
DynamicPaintBrushSettings.paint_alpha -> paint_alpha:    float    Paint alpha
DynamicPaintBrushSettings.paint_color -> paint_color:    float[3]    Color of the paint
DynamicPaintBrushSettings.paint_distance -> paint_distance:    float    Maximum distance from brush to mesh surface to affect paint
DynamicPaintBrushSettings.paint_ramp -> paint_ramp:    pointer, (read-only)    Color ramp used to define proximity falloff
DynamicPaintBrushSettings.paint_source -> paint_source:    enum    
DynamicPaintBrushSettings.paint_wetness -> paint_wetness:    float    Paint wetness, visible in wetmap (some effects only affect wet paint)
DynamicPaintBrushSettings.particle_system -> particle_system:    pointer    The particle system to paint with
DynamicPaintBrushSettings.proximity_falloff -> proximity_falloff:    enum    Proximity falloff type
DynamicPaintBrushSettings.ray_direction -> ray_direction:    enum    Ray direction to use for projection (if brush object is located in that direction it's painted)
DynamicPaintBrushSettings.smooth_radius -> smooth_radius:    float    Smooth falloff added after solid radius
DynamicPaintBrushSettings.smudge_strength -> smudge_strength:    float    Smudge effect strength
DynamicPaintBrushSettings.solid_radius -> solid_radius:    float    Radius that will be painted solid
DynamicPaintBrushSettings.use_absolute_alpha -> use_absolute_alpha:    boolean    Only increase alpha value if paint alpha is higher than existing
DynamicPaintBrushSettings.use_material -> use_material:    boolean    Use object material to define color and influence
DynamicPaintBrushSettings.use_negative_volume -> use_negative_volume:    boolean    Negate influence inside the volume
DynamicPaintBrushSettings.use_paint_erase -> use_paint_erase:    boolean    Erase / remove paint instead of adding it
DynamicPaintBrushSettings.use_particle_radius -> use_particle_radius:    boolean    Use radius from particle settings
DynamicPaintBrushSettings.use_proximity_project -> use_proximity_project:    boolean    Brush is projected to canvas from defined direction within brush proximity
DynamicPaintBrushSettings.use_proximity_ramp_alpha -> use_proximity_ramp_alpha:    boolean    Only read color ramp alpha
DynamicPaintBrushSettings.use_smudge -> use_smudge:    boolean    Make this brush to smudge existing paint as it moves
DynamicPaintBrushSettings.use_velocity_alpha -> use_velocity_alpha:    boolean    Multiply brush influence by velocity color ramp alpha
DynamicPaintBrushSettings.use_velocity_color -> use_velocity_color:    boolean    Replace brush color by velocity color ramp
DynamicPaintBrushSettings.use_velocity_depth -> use_velocity_depth:    boolean    Multiply brush intersection depth (displace, waves) by velocity ramp alpha
DynamicPaintBrushSettings.velocity_max -> velocity_max:    float    Velocity considered as maximum influence (Blender units per frame)
DynamicPaintBrushSettings.velocity_ramp -> velocity_ramp:    pointer, (read-only)    Color ramp used to define brush velocity effect
DynamicPaintBrushSettings.wave_clamp -> wave_clamp:    float    Maximum level of surface intersection used to influence waves (use 0.0 to disable)
DynamicPaintBrushSettings.wave_factor -> wave_factor:    float    Multiplier for wave influence of this brush
DynamicPaintBrushSettings.wave_type -> wave_type:    enum    
DynamicPaintCanvasSettings.canvas_surfaces -> canvas_surfaces:    collection, (read-only)    Paint surface list
DynamicPaintSurface.brush_group -> brush_group:    pointer    Only use brush objects from this group
DynamicPaintSurface.brush_influence_scale -> brush_influence_scale:    float    Adjust influence brush objects have on this surface
DynamicPaintSurface.brush_radius_scale -> brush_radius_scale:    float    Adjust radius of proximity brushes or particles for this surface
DynamicPaintSurface.color_dry_threshold -> color_dry_threshold:    float    The wetness level when colors start to shift to the background
DynamicPaintSurface.color_spread_speed -> color_spread_speed:    float    How fast colors get mixed within wet paint
DynamicPaintSurface.depth_clamp -> depth_clamp:    float    Maximum level of depth intersection in object space (use 0.0 to disable)
DynamicPaintSurface.displace_factor -> displace_factor:    float    Strength of displace when applied to the mesh
DynamicPaintSurface.displace_type -> displace_type:    enum    
DynamicPaintSurface.dissolve_speed -> dissolve_speed:    int    Approximately in how many frames should dissolve happen
DynamicPaintSurface.drip_acceleration -> drip_acceleration:    float    How much surface acceleration affects dripping
DynamicPaintSurface.drip_velocity -> drip_velocity:    float    How much surface velocity affects dripping
DynamicPaintSurface.dry_speed -> dry_speed:    int    Approximately in how many frames should drying happen
DynamicPaintSurface.effect_ui -> effect_ui:    enum    
DynamicPaintSurface.effector_weights -> effector_weights:    pointer, (read-only)    
DynamicPaintSurface.frame_end -> frame_end:    int    Simulation end frame
DynamicPaintSurface.frame_start -> frame_start:    int    Simulation start frame
DynamicPaintSurface.frame_substeps -> frame_substeps:    int    Do extra frames between scene frames to ensure smooth motion
DynamicPaintSurface.image_fileformat -> image_fileformat:    enum    
DynamicPaintSurface.image_output_path -> image_output_path:    string    Directory to save the textures
DynamicPaintSurface.image_resolution -> image_resolution:    int    Output image resolution
DynamicPaintSurface.init_color -> init_color:    float[4]    Initial color of the surface
DynamicPaintSurface.init_color_type -> init_color_type:    enum    
DynamicPaintSurface.init_layername -> init_layername:    string    
DynamicPaintSurface.init_texture -> init_texture:    pointer    
DynamicPaintSurface.is_active -> is_active:    boolean    Toggle whether surface is processed or ignored
DynamicPaintSurface.is_cache_user -> is_cache_user:    boolean, (read-only)    
DynamicPaintSurface.name -> name:    string    Surface name
DynamicPaintSurface.output_name_a -> output_name_a:    string    Name used to save output from this surface
DynamicPaintSurface.output_name_b -> output_name_b:    string    Name used to save output from this surface
DynamicPaintSurface.point_cache -> point_cache:    pointer, (read-only)    
DynamicPaintSurface.preview_id -> preview_id:    enum    
DynamicPaintSurface.show_preview -> show_preview:    boolean    Display surface preview in 3D-views
DynamicPaintSurface.shrink_speed -> shrink_speed:    float    How fast shrink effect moves on the canvas surface
DynamicPaintSurface.spread_speed -> spread_speed:    float    How fast spread effect moves on the canvas surface
DynamicPaintSurface.surface_format -> surface_format:    enum    Surface Format
DynamicPaintSurface.surface_type -> surface_type:    enum    Surface Type
DynamicPaintSurface.use_antialiasing -> use_antialiasing:    boolean    Use 5x multisampling to smooth paint edges
DynamicPaintSurface.use_color_preview -> use_color_preview:    boolean, (read-only)    Whether this surface has some color preview for 3D view
DynamicPaintSurface.use_dissolve -> use_dissolve:    boolean    Enable to make surface changes disappear over time
DynamicPaintSurface.use_dissolve_log -> use_dissolve_log:    boolean    Use logarithmic dissolve (makes high values to fade faster than low values)
DynamicPaintSurface.use_drip -> use_drip:    boolean    Process drip effect (drip wet paint to gravity direction)
DynamicPaintSurface.use_dry_log -> use_dry_log:    boolean    Use logarithmic drying (makes high values to dry faster than low values)
DynamicPaintSurface.use_drying -> use_drying:    boolean    Enable to make surface wetness dry over time
DynamicPaintSurface.use_incremental_displace -> use_incremental_displace:    boolean    New displace is added cumulatively on top of existing
DynamicPaintSurface.use_output_a -> use_output_a:    boolean    Save this output layer
DynamicPaintSurface.use_output_b -> use_output_b:    boolean    Save this output layer
DynamicPaintSurface.use_premultiply -> use_premultiply:    boolean    Multiply color by alpha (recommended for Blender input)
DynamicPaintSurface.use_shrink -> use_shrink:    boolean    Process shrink effect (shrink paint areas)
DynamicPaintSurface.use_spread -> use_spread:    boolean    Process spread effect (spread wet paint around surface)
DynamicPaintSurface.use_wave_open_border -> use_wave_open_border:    boolean    Pass waves through mesh edges
DynamicPaintSurface.uv_layer -> uv_layer:    string    UV map name
DynamicPaintSurface.wave_damping -> wave_damping:    float    Wave damping factor
DynamicPaintSurface.wave_smoothness -> wave_smoothness:    float    Limit maximum steepness of wave slope between simulation points (use higher values for smoother waves at expense of reduced detail)
DynamicPaintSurface.wave_speed -> wave_speed:    float    Wave propagation speed
DynamicPaintSurface.wave_spring -> wave_spring:    float    Spring force that pulls water level back to zero
DynamicPaintSurface.wave_timescale -> wave_timescale:    float    Wave time scaling factor
DynamicPaintSurfaces.active -> active:    pointer, (read-only)    Active Dynamic Paint surface being displayed
DynamicPaintSurfaces.active_index -> active_index:    int    
EditBone.bbone_in -> bbone_in:    float    Length of first Bezier Handle (for B-Bones only)
EditBone.bbone_out -> bbone_out:    float    Length of second Bezier Handle (for B-Bones only)
EditBone.bbone_segments -> bbone_segments:    int    Number of subdivisions of bone (for B-Bones only)
EditBone.bbone_x -> bbone_x:    float    B-Bone X size
EditBone.bbone_z -> bbone_z:    float    B-Bone Z size
EditBone.envelope_distance -> envelope_distance:    float    Bone deformation distance (for Envelope deform only)
EditBone.envelope_weight -> envelope_weight:    float    Bone deformation weight (for Envelope deform only)
EditBone.head -> head:    float[3]    Location of head end of the bone
EditBone.head_radius -> head_radius:    float    Radius of head of bone (for Envelope deform only)
EditBone.hide -> hide:    boolean    Bone is not visible when in Edit Mode
EditBone.hide_select -> hide_select:    boolean    Bone is able to be selected
EditBone.layers -> layers:    boolean[32]    Layers bone exists in
EditBone.lock -> lock:    boolean    Bone is not able to be transformed when in Edit Mode
EditBone.matrix -> matrix:    float[16], (read-only)    Read-only matrix calculated from the roll (armature space)
EditBone.name -> name:    string    
EditBone.parent -> parent:    pointer    Parent edit bone (in same Armature)
EditBone.roll -> roll:    float    Bone rotation around head-tail axis
EditBone.select -> select:    boolean    
EditBone.select_head -> select_head:    boolean    
EditBone.select_tail -> select_tail:    boolean    
EditBone.show_wire -> show_wire:    boolean    Bone is always drawn as Wireframe regardless of viewport draw mode (useful for non-obstructive custom bone shapes)
EditBone.tail -> tail:    float[3]    Location of tail end of the bone
EditBone.tail_radius -> tail_radius:    float    Radius of tail of bone (for Envelope deform only)
EditBone.use_connect -> use_connect:    boolean    When bone has a parent, bone's head is stuck to the parent's tail
EditBone.use_cyclic_offset -> use_cyclic_offset:    boolean    When bone doesn't have a parent, it receives cyclic offset effects (Deprecated)
EditBone.use_deform -> use_deform:    boolean    Enable Bone to deform geometry
EditBone.use_envelope_multiply -> use_envelope_multiply:    boolean    When deforming bone, multiply effects of Vertex Group weights with Envelope influence
EditBone.use_inherit_rotation -> use_inherit_rotation:    boolean    Bone inherits rotation or scale from parent bone
EditBone.use_inherit_scale -> use_inherit_scale:    boolean    Bone inherits scaling from parent bone
EditBone.use_local_location -> use_local_location:    boolean    Bone location is set in local space
EditBone.use_relative_parent -> use_relative_parent:    boolean    Object children will use relative transform, like deform
EffectorWeights.all -> all:    float    All effector's weight
EffectorWeights.apply_to_hair_growing -> apply_to_hair_growing:    boolean    Use force fields when growing hair
EffectorWeights.boid -> boid:    float    Boid effector weight
EffectorWeights.charge -> charge:    float    Charge effector weight
EffectorWeights.curve_guide -> curve_guide:    float    Curve guide effector weight
EffectorWeights.drag -> drag:    float    Drag effector weight
EffectorWeights.force -> force:    float    Force effector weight
EffectorWeights.gravity -> gravity:    float    Global gravity weight
EffectorWeights.group -> group:    pointer    Limit effectors to this Group
EffectorWeights.harmonic -> harmonic:    float    Harmonic effector weight
EffectorWeights.lennardjones -> lennardjones:    float    Lennard-Jones effector weight
EffectorWeights.magnetic -> magnetic:    float    Magnetic effector weight
EffectorWeights.smokeflow -> smokeflow:    float    Smoke Flow effector weight
EffectorWeights.texture -> texture:    float    Texture effector weight
EffectorWeights.turbulence -> turbulence:    float    Turbulence effector weight
EffectorWeights.vortex -> vortex:    float    Vortex effector weight
EffectorWeights.wind -> wind:    float    Wind effector weight
EnumPropertyItem.description -> description:    string, (read-only)    Description of the item's purpose
EnumPropertyItem.icon -> icon:    enum, (read-only)    Icon of the item
EnumPropertyItem.identifier -> identifier:    string, (read-only)    Unique name used in the code and scripting
EnumPropertyItem.name -> name:    string, (read-only)    Human readable name
EnumPropertyItem.value -> value:    int, (read-only)    Value of the item
EnvironmentMap.clip_end -> clip_end:    float    Objects further than this are not visible to map
EnvironmentMap.clip_start -> clip_start:    float    Objects nearer than this are not visible to map
EnvironmentMap.depth -> depth:    int    Number of times a map will be rendered recursively (mirror effects)
EnvironmentMap.is_valid -> is_valid:    boolean, (read-only)    True if this map is ready for use, False if it needs rendering
EnvironmentMap.layers_ignore -> layers_ignore:    boolean[20]    Hide objects on these layers when generating the Environment Map
EnvironmentMap.mapping -> mapping:    enum    
EnvironmentMap.resolution -> resolution:    int    Pixel resolution of the rendered environment map
EnvironmentMap.source -> source:    enum    
EnvironmentMap.viewpoint_object -> viewpoint_object:    pointer    Object to use as the environment map's viewpoint location
EnvironmentMap.zoom -> zoom:    float    
Event.alt -> alt:    boolean, (read-only)    True when the Alt/Option key is held
Event.ascii -> ascii:    string, (read-only)    Single ASCII character for this event
Event.ctrl -> ctrl:    boolean, (read-only)    True when the Ctrl key is held
Event.mouse_prev_x -> mouse_prev_x:    int, (read-only)    The window relative horizontal location of the mouse
Event.mouse_prev_y -> mouse_prev_y:    int, (read-only)    The window relative vertical location of the mouse
Event.mouse_region_x -> mouse_region_x:    int, (read-only)    The region relative horizontal location of the mouse
Event.mouse_region_y -> mouse_region_y:    int, (read-only)    The region relative vertical location of the mouse
Event.mouse_x -> mouse_x:    int, (read-only)    The window relative horizontal location of the mouse
Event.mouse_y -> mouse_y:    int, (read-only)    The window relative vertical location of the mouse
Event.oskey -> oskey:    boolean, (read-only)    True when the Cmd key is held
Event.shift -> shift:    boolean, (read-only)    True when the Shift key is held
Event.type -> type:    enum, (read-only)    
Event.unicode -> unicode:    string, (read-only)    Single unicode character for this event
Event.value -> value:    enum, (read-only)    The type of event, only applies to some
FCurve.array_index -> array_index:    int    Index to the specific property affected by F-Curve if applicable
FCurve.color -> color:    float[3]    Color of the F-Curve in the Graph Editor
FCurve.color_mode -> color_mode:    enum    Method used to determine color of F-Curve in Graph Editor
FCurve.data_path -> data_path:    string    RNA Path to property affected by F-Curve
FCurve.driver -> driver:    pointer, (read-only)    Channel Driver (only set for Driver F-Curves)
FCurve.extrapolation -> extrapolation:    enum    
FCurve.group -> group:    pointer    Action Group that this F-Curve belongs to
FCurve.hide -> hide:    boolean    F-Curve and its keyframes are hidden in the Graph Editor graphs
FCurve.is_valid -> is_valid:    boolean    False when F-Curve could not be evaluated in past, so should be skipped when evaluating
FCurve.keyframe_points -> keyframe_points:    collection, (read-only)    User-editable keyframes
FCurve.lock -> lock:    boolean    F-Curve's settings cannot be edited
FCurve.modifiers -> modifiers:    collection, (read-only)    Modifiers affecting the shape of the F-Curve
FCurve.mute -> mute:    boolean    F-Curve is not evaluated
FCurve.sampled_points -> sampled_points:    collection, (read-only)    Sampled animation data
FCurve.select -> select:    boolean    F-Curve is selected for editing
FCurveModifiers.active -> active:    pointer    Active F-Curve Modifier
FCurveSample.co -> co:    float[2]    Point coordinates
FCurveSample.select -> select:    boolean    Selection status
FFmpegSettings.audio_bitrate -> audio_bitrate:    int    Audio bitrate (kb/s)
FFmpegSettings.audio_channels -> audio_channels:    enum    Audio channel count
FFmpegSettings.audio_codec -> audio_codec:    enum    FFmpeg audio codec to use
FFmpegSettings.audio_mixrate -> audio_mixrate:    int    Audio samplerate(samples/s)
FFmpegSettings.audio_volume -> audio_volume:    float    Audio volume
FFmpegSettings.buffersize -> buffersize:    int    Rate control: buffer size (kb)
FFmpegSettings.codec -> codec:    enum    FFmpeg codec to use
FFmpegSettings.format -> format:    enum    Output file format
FFmpegSettings.gopsize -> gopsize:    int    Distance between key frames
FFmpegSettings.maxrate -> maxrate:    int    Rate control: max rate (kb/s)
FFmpegSettings.minrate -> minrate:    int    Rate control: min rate (kb/s)
FFmpegSettings.muxrate -> muxrate:    int    Mux rate (bits/s(!))
FFmpegSettings.packetsize -> packetsize:    int    Mux packet size (byte)
FFmpegSettings.use_autosplit -> use_autosplit:    boolean    Autosplit output at 2GB boundary
FFmpegSettings.use_lossless_output -> use_lossless_output:    boolean    Use lossless output for video streams
FFmpegSettings.video_bitrate -> video_bitrate:    int    Video bitrate (kb/s)
FModifier.active -> active:    boolean    F-Curve Modifier is the one being edited
FModifier.blend_in -> blend_in:    float    Number of frames from start frame for influence to take effect
FModifier.blend_out -> blend_out:    float    Number of frames from end frame for influence to fade out
FModifier.frame_end -> frame_end:    float    Frame that modifier's influence ends (if Restrict Frame Range is in use)
FModifier.frame_start -> frame_start:    float    Frame that modifier's influence starts (if Restrict Frame Range is in use)
FModifier.influence -> influence:    float    Amount of influence F-Curve Modifier will have when not fading in/out
FModifier.is_valid -> is_valid:    boolean, (read-only)    F-Curve Modifier has invalid settings and will not be evaluated
FModifier.mute -> mute:    boolean    F-Curve Modifier will not be evaluated
FModifier.show_expanded -> show_expanded:    boolean    F-Curve Modifier's panel is expanded in UI
FModifier.type -> type:    enum, (read-only)    F-Curve Modifier Type
FModifier.use_influence -> use_influence:    boolean    F-Curve Modifier's effects will be tempered by a default factor
FModifier.use_restricted_range -> use_restricted_range:    boolean    F-Curve Modifier is only applied for the specified frame range to help mask off effects in order to chain them
FModifierEnvelopeControlPoint.frame -> frame:    float    Frame this control-point occurs on
FModifierEnvelopeControlPoint.max -> max:    float    Upper bound of envelope at this control-point
FModifierEnvelopeControlPoint.min -> min:    float    Lower bound of envelope at this control-point
FModifier|FModifierCycles.cycles_after -> cycles_after:    int    Maximum number of cycles to allow after last keyframe (0 = infinite)
FModifier|FModifierCycles.cycles_before -> cycles_before:    int    Maximum number of cycles to allow before first keyframe (0 = infinite)
FModifier|FModifierCycles.mode_after -> mode_after:    enum    Cycling mode to use after last keyframe
FModifier|FModifierCycles.mode_before -> mode_before:    enum    Cycling mode to use before first keyframe
FModifier|FModifierEnvelope.control_points -> control_points:    collection, (read-only)    Control points defining the shape of the envelope
FModifier|FModifierEnvelope.default_max -> default_max:    float    Upper distance from Reference Value for 1:1 default influence
FModifier|FModifierEnvelope.default_min -> default_min:    float    Lower distance from Reference Value for 1:1 default influence
FModifier|FModifierEnvelope.reference_value -> reference_value:    float    Value that envelope's influence is centered around / based on
FModifier|FModifierFunctionGenerator.amplitude -> amplitude:    float    Scale factor determining the maximum/minimum values
FModifier|FModifierFunctionGenerator.function_type -> function_type:    enum    Type of built-in function to use
FModifier|FModifierFunctionGenerator.phase_multiplier -> phase_multiplier:    float    Scale factor determining the 'speed' of the function
FModifier|FModifierFunctionGenerator.phase_offset -> phase_offset:    float    Constant factor to offset time by for function
FModifier|FModifierFunctionGenerator.use_additive -> use_additive:    boolean    Values generated by this modifier are applied on top of the existing values instead of overwriting them
FModifier|FModifierFunctionGenerator.value_offset -> value_offset:    float    Constant factor to offset values by
FModifier|FModifierGenerator.coefficients -> coefficients:    float[32]    Coefficients for 'x' (starting from lowest power of x^0)
FModifier|FModifierGenerator.mode -> mode:    enum    Type of generator to use
FModifier|FModifierGenerator.poly_order -> poly_order:    int    The highest power of 'x' for this polynomial (number of coefficients - 1)
FModifier|FModifierGenerator.use_additive -> use_additive:    boolean    Values generated by this modifier are applied on top of the existing values instead of overwriting them
FModifier|FModifierLimits.max_x -> max_x:    float    Highest X value to allow
FModifier|FModifierLimits.max_y -> max_y:    float    Highest Y value to allow
FModifier|FModifierLimits.min_x -> min_x:    float    Lowest X value to allow
FModifier|FModifierLimits.min_y -> min_y:    float    Lowest Y value to allow
FModifier|FModifierLimits.use_max_x -> use_max_x:    boolean    Use the maximum X value
FModifier|FModifierLimits.use_max_y -> use_max_y:    boolean    Use the maximum Y value
FModifier|FModifierLimits.use_min_x -> use_min_x:    boolean    Use the minimum X value
FModifier|FModifierLimits.use_min_y -> use_min_y:    boolean    Use the minimum Y value
FModifier|FModifierNoise.blend_type -> blend_type:    enum    Method of modifying the existing F-Curve
FModifier|FModifierNoise.depth -> depth:    int    Amount of fine level detail present in the noise
FModifier|FModifierNoise.phase -> phase:    float    A random seed for the noise effect
FModifier|FModifierNoise.scale -> scale:    float    Scaling (in time) of the noise
FModifier|FModifierNoise.strength -> strength:    float    Amplitude of the noise - the amount that it modifies the underlying curve
FModifier|FModifierStepped.frame_end -> frame_end:    float    Frame that modifier's influence ends (if applicable)
FModifier|FModifierStepped.frame_offset -> frame_offset:    float    Reference number of frames before frames get held (use to get hold for '1-3' vs '5-7' holding patterns)
FModifier|FModifierStepped.frame_start -> frame_start:    float    Frame that modifier's influence starts (if applicable)
FModifier|FModifierStepped.frame_step -> frame_step:    float    Number of frames to hold each value
FModifier|FModifierStepped.use_frame_end -> use_frame_end:    boolean    Restrict modifier to only act before its 'end' frame
FModifier|FModifierStepped.use_frame_start -> use_frame_start:    boolean    Restrict modifier to only act after its 'start' frame
FieldSettings.apply_to_location -> apply_to_location:    boolean    Effect particles' location
FieldSettings.apply_to_rotation -> apply_to_rotation:    boolean    Effect particles' dynamic rotation
FieldSettings.distance_max -> distance_max:    float    Maximum distance for the field to work
FieldSettings.distance_min -> distance_min:    float    Minimum distance for the field's fall-off
FieldSettings.falloff_power -> falloff_power:    float    Falloff power (real gravitational falloff = 2)
FieldSettings.falloff_type -> falloff_type:    enum    
FieldSettings.flow -> flow:    float    Convert effector force into air flow velocity
FieldSettings.guide_clump_amount -> guide_clump_amount:    float    Amount of clumping
FieldSettings.guide_clump_shape -> guide_clump_shape:    float    Shape of clumping
FieldSettings.guide_free -> guide_free:    float    Guide-free time from particle life's end
FieldSettings.guide_kink_amplitude -> guide_kink_amplitude:    float    The amplitude of the offset
FieldSettings.guide_kink_axis -> guide_kink_axis:    enum    Which axis to use for offset
FieldSettings.guide_kink_frequency -> guide_kink_frequency:    float    The frequency of the offset (1/total length)
FieldSettings.guide_kink_shape -> guide_kink_shape:    float    Adjust the offset to the beginning/end
FieldSettings.guide_kink_type -> guide_kink_type:    enum    Type of periodic offset on the curve
FieldSettings.guide_minimum -> guide_minimum:    float    The distance from which particles are affected fully
FieldSettings.harmonic_damping -> harmonic_damping:    float    Damping of the harmonic force
FieldSettings.inflow -> inflow:    float    Inwards component of the vortex force
FieldSettings.linear_drag -> linear_drag:    float    Drag component proportional to velocity
FieldSettings.noise -> noise:    float    Amount of noise for the force strength
FieldSettings.quadratic_drag -> quadratic_drag:    float    Drag component proportional to the square of velocity
FieldSettings.radial_falloff -> radial_falloff:    float    Radial falloff power (real gravitational falloff = 2)
FieldSettings.radial_max -> radial_max:    float    Maximum radial distance for the field to work
FieldSettings.radial_min -> radial_min:    float    Minimum radial distance for the field's fall-off
FieldSettings.rest_length -> rest_length:    float    Rest length of the harmonic force
FieldSettings.seed -> seed:    int    Seed of the noise
FieldSettings.shape -> shape:    enum    Which direction is used to calculate the effector force
FieldSettings.size -> size:    float    Size of the turbulence
FieldSettings.source_object -> source_object:    pointer    Select domain object of the smoke simulation
FieldSettings.strength -> strength:    float    Strength of force field
FieldSettings.texture -> texture:    pointer    Texture to use as force
FieldSettings.texture_mode -> texture_mode:    enum    How the texture effect is calculated (RGB & Curl need a RGB texture, else Gradient will be used instead)
FieldSettings.texture_nabla -> texture_nabla:    float    Defines size of derivative offset used for calculating gradient and curl
FieldSettings.type -> type:    enum    Type of field
FieldSettings.use_2d_force -> use_2d_force:    boolean    Apply force only in 2D
FieldSettings.use_absorption -> use_absorption:    boolean    Force gets absorbed by collision objects
FieldSettings.use_global_coords -> use_global_coords:    boolean    Use effector/global coordinates for turbulence
FieldSettings.use_guide_path_add -> use_guide_path_add:    boolean    Based on distance/falloff it adds a portion of the entire path
FieldSettings.use_guide_path_weight -> use_guide_path_weight:    boolean    Use curve weights to influence the particle influence along the curve
FieldSettings.use_max_distance -> use_max_distance:    boolean    Use a maximum distance for the field to work
FieldSettings.use_min_distance -> use_min_distance:    boolean    Use a minimum distance for the field's fall-off
FieldSettings.use_multiple_springs -> use_multiple_springs:    boolean    Every point is effected by multiple springs
FieldSettings.use_object_coords -> use_object_coords:    boolean    Use object/global coordinates for texture
FieldSettings.use_radial_max -> use_radial_max:    boolean    Use a maximum radial distance for the field to work
FieldSettings.use_radial_min -> use_radial_min:    boolean    Use a minimum radial distance for the field's fall-off
FieldSettings.use_root_coords -> use_root_coords:    boolean    Texture coordinates from root particle locations
FieldSettings.use_smoke_density -> use_smoke_density:    boolean    Adjust force strength based on smoke density
FieldSettings.z_direction -> z_direction:    enum    Effect in full or only positive/negative Z direction
FileSelectParams.directory -> directory:    string    Directory displayed in the file browser
FileSelectParams.display_type -> display_type:    enum    Display mode for the file list
FileSelectParams.filename -> filename:    string    Active file in the file browser
FileSelectParams.filter_glob -> filter_glob:    string    
FileSelectParams.show_hidden -> show_hidden:    boolean    Show hidden dot files
FileSelectParams.sort_method -> sort_method:    enum    
FileSelectParams.title -> title:    string, (read-only)    Title for the file browser
FileSelectParams.use_filter -> use_filter:    boolean    Enable filtering of files
FileSelectParams.use_filter_backup -> use_filter_backup:    boolean    Show .blend1, .blend2, etc. files
FileSelectParams.use_filter_blender -> use_filter_blender:    boolean    Show .blend files
FileSelectParams.use_filter_folder -> use_filter_folder:    boolean    Show folders
FileSelectParams.use_filter_font -> use_filter_font:    boolean    Show font files
FileSelectParams.use_filter_image -> use_filter_image:    boolean    Show image files
FileSelectParams.use_filter_movie -> use_filter_movie:    boolean    Show movie files
FileSelectParams.use_filter_script -> use_filter_script:    boolean    Show script files
FileSelectParams.use_filter_sound -> use_filter_sound:    boolean    Show sound files
FileSelectParams.use_filter_text -> use_filter_text:    boolean    Show text files
FluidMeshVertex.velocity -> velocity:    float[3], (read-only)    
FluidSettings.type -> type:    enum    Type of participation in the fluid simulation
FluidSettings|ControlFluidSettings.attraction_radius -> attraction_radius:    float    Force field radius around the control object
FluidSettings|ControlFluidSettings.attraction_strength -> attraction_strength:    float    Force strength for directional attraction towards the control object
FluidSettings|ControlFluidSettings.end_time -> end_time:    float    Time when the control particles are deactivated
FluidSettings|ControlFluidSettings.quality -> quality:    float    Quality which is used for object sampling (higher = better but slower)
FluidSettings|ControlFluidSettings.start_time -> start_time:    float    Time when the control particles are activated
FluidSettings|ControlFluidSettings.use -> use:    boolean    Object contributes to the fluid simulation
FluidSettings|ControlFluidSettings.use_reverse_frames -> use_reverse_frames:    boolean    Reverse control object movement
FluidSettings|ControlFluidSettings.velocity_radius -> velocity_radius:    float    Force field radius around the control object
FluidSettings|ControlFluidSettings.velocity_strength -> velocity_strength:    float    Force strength of how much of the control object's velocity is influencing the fluid velocity
FluidSettings|DomainFluidSettings.compressibility -> compressibility:    float    Allowed compressibility due to gravitational force for standing fluid (directly affects simulation step size)
FluidSettings|DomainFluidSettings.end_time -> end_time:    float    Simulation time of the last blender frame (in seconds)
FluidSettings|DomainFluidSettings.filepath -> filepath:    string    Directory (and/or filename prefix) to store baked fluid simulation files in
FluidSettings|DomainFluidSettings.fluid_mesh_vertices -> fluid_mesh_vertices:    collection, (read-only)    Vertices of the fluid mesh generated by simulation
FluidSettings|DomainFluidSettings.frame_offset -> frame_offset:    int    Offset when reading baked cache
FluidSettings|DomainFluidSettings.generate_particles -> generate_particles:    float    Amount of particles to generate (0=off, 1=normal, >1=more)
FluidSettings|DomainFluidSettings.gravity -> gravity:    float[3]    Gravity in X, Y and Z direction
FluidSettings|DomainFluidSettings.grid_levels -> grid_levels:    int    Number of coarsened grids to use (-1 for automatic)
FluidSettings|DomainFluidSettings.memory_estimate -> memory_estimate:    string, (read-only)    Estimated amount of memory needed for baking the domain
FluidSettings|DomainFluidSettings.partial_slip_factor -> partial_slip_factor:    float    Amount of mixing between no- and free-slip, 0 is no slip and 1 is free slip
FluidSettings|DomainFluidSettings.preview_resolution -> preview_resolution:    int    Preview resolution in X,Y and Z direction
FluidSettings|DomainFluidSettings.render_display_mode -> render_display_mode:    enum    How to display the mesh for rendering
FluidSettings|DomainFluidSettings.resolution -> resolution:    int    Domain resolution in X,Y and Z direction
FluidSettings|DomainFluidSettings.simulation_rate -> simulation_rate:    float    Fluid motion rate (0 = stationary, 1 = normal speed)
FluidSettings|DomainFluidSettings.simulation_scale -> simulation_scale:    float    Size of the simulation domain in meters
FluidSettings|DomainFluidSettings.slip_type -> slip_type:    enum    
FluidSettings|DomainFluidSettings.start_time -> start_time:    float    Simulation time of the first blender frame (in seconds)
FluidSettings|DomainFluidSettings.surface_smooth -> surface_smooth:    float    Amount of surface smoothing (a value of 0 is off, 1 is normal smoothing and more than 1 is extra smoothing)
FluidSettings|DomainFluidSettings.surface_subdivisions -> surface_subdivisions:    int    Number of isosurface subdivisions (this is necessary for the inclusion of particles into the surface generation - WARNING: can lead to longer
computation times !)
FluidSettings|DomainFluidSettings.threads -> threads:    int    Override number of threads for the simulation, 0 is automatic
FluidSettings|DomainFluidSettings.tracer_particles -> tracer_particles:    int    Number of tracer particles to generate
FluidSettings|DomainFluidSettings.use_reverse_frames -> use_reverse_frames:    boolean    Reverse fluid frames
FluidSettings|DomainFluidSettings.use_speed_vectors -> use_speed_vectors:    boolean    Generate speed vectors for vector blur
FluidSettings|DomainFluidSettings.use_surface_noobs -> use_surface_noobs:    boolean    Removes the air gap between fluid surface and obstacles - WARNING: Can result in a dissolving surface in other areas
FluidSettings|DomainFluidSettings.use_time_override -> use_time_override:    boolean    Use a custom start and end time (in seconds) instead of the scene's timeline
FluidSettings|DomainFluidSettings.viewport_display_mode -> viewport_display_mode:    enum    How to display the mesh in the viewport
FluidSettings|DomainFluidSettings.viscosity_base -> viscosity_base:    float    Viscosity setting: value that is multiplied by 10 to the power of (exponent*-1)
FluidSettings|DomainFluidSettings.viscosity_exponent -> viscosity_exponent:    int    Negative exponent for the viscosity value (to simplify entering small values e.g. 5*10^-6)
FluidSettings|FluidFluidSettings.initial_velocity -> initial_velocity:    float[3]    Initial velocity of fluid
FluidSettings|FluidFluidSettings.use -> use:    boolean    Object contributes to the fluid simulation
FluidSettings|FluidFluidSettings.use_animated_mesh -> use_animated_mesh:    boolean    Export this mesh as an animated one (slower and enforces No Slip, only use if really necessary [e.g. armatures or parented objects], animated
pos/rot/scale F-Curves do not require it)
FluidSettings|FluidFluidSettings.volume_initialization -> volume_initialization:    enum    Volume initialization type
FluidSettings|InflowFluidSettings.inflow_velocity -> inflow_velocity:    float[3]    Initial velocity of fluid
FluidSettings|InflowFluidSettings.use -> use:    boolean    Object contributes to the fluid simulation
FluidSettings|InflowFluidSettings.use_animated_mesh -> use_animated_mesh:    boolean    Export this mesh as an animated one (slower and enforces No Slip, only use if really necessary [e.g. armatures or parented objects], animated
pos/rot/scale F-Curves do not require it)
FluidSettings|InflowFluidSettings.use_local_coords -> use_local_coords:    boolean    Use local coordinates for inflow (e.g. for rotating objects)
FluidSettings|InflowFluidSettings.volume_initialization -> volume_initialization:    enum    Volume initialization type
FluidSettings|ObstacleFluidSettings.impact_factor -> impact_factor:    float    This is an unphysical value for moving objects - it controls the impact an obstacle has on the fluid, =0 behaves a bit like outflow (deleting fluid), =1 is
default, while >1 results in high forces (can be used to tweak total mass)
FluidSettings|ObstacleFluidSettings.partial_slip_factor -> partial_slip_factor:    float    Amount of mixing between no- and free-slip, 0 is no slip and 1 is free slip
FluidSettings|ObstacleFluidSettings.slip_type -> slip_type:    enum    
FluidSettings|ObstacleFluidSettings.use -> use:    boolean    Object contributes to the fluid simulation
FluidSettings|ObstacleFluidSettings.use_animated_mesh -> use_animated_mesh:    boolean    Export this mesh as an animated one (slower and enforces No Slip, only use if really necessary [e.g. armatures or parented objects], animated
pos/rot/scale F-Curves do not require it)
FluidSettings|ObstacleFluidSettings.volume_initialization -> volume_initialization:    enum    Volume initialization type
FluidSettings|OutflowFluidSettings.use -> use:    boolean    Object contributes to the fluid simulation
FluidSettings|OutflowFluidSettings.use_animated_mesh -> use_animated_mesh:    boolean    Export this mesh as an animated one (slower and enforces No Slip, only use if really necessary [e.g. armatures or parented objects], animated
pos/rot/scale F-Curves do not require it)
FluidSettings|OutflowFluidSettings.volume_initialization -> volume_initialization:    enum    Volume initialization type
FluidSettings|ParticleFluidSettings.alpha_influence -> alpha_influence:    float    Amount of particle alpha change, inverse of size influence: 0=off (all same alpha), 1=full (larger particles get lower alphas, smaller ones higher
values)
FluidSettings|ParticleFluidSettings.filepath -> filepath:    string    Directory (and/or filename prefix) to store and load particles from
FluidSettings|ParticleFluidSettings.particle_influence -> particle_influence:    float    Amount of particle size scaling: 0=off (all same size), 1=full (range 0.2-2.0), >1=stronger
FluidSettings|ParticleFluidSettings.show_tracer -> show_tracer:    boolean    Show tracer particles
FluidSettings|ParticleFluidSettings.use_drops -> use_drops:    boolean    Show drop particles
FluidSettings|ParticleFluidSettings.use_floats -> use_floats:    boolean    Show floating foam particles
FreestyleLineSet.edge_type_combination -> edge_type_combination:    enum    Set the combination operation for conditions on feature edge types
FreestyleLineSet.edge_type_negation -> edge_type_negation:    enum    Set the negation operation for conditions on feature edge types
FreestyleLineSet.exclude_border -> exclude_border:    boolean    Exclude border edges
FreestyleLineSet.exclude_contour -> exclude_contour:    boolean    Exclude contours
FreestyleLineSet.exclude_crease -> exclude_crease:    boolean    Exclude crease edges
FreestyleLineSet.exclude_edge_mark -> exclude_edge_mark:    boolean    Exclude edge marks
FreestyleLineSet.exclude_external_contour -> exclude_external_contour:    boolean    Exclude external contours
FreestyleLineSet.exclude_material_boundary -> exclude_material_boundary:    boolean    Exclude edges at material boundaries
FreestyleLineSet.exclude_ridge_valley -> exclude_ridge_valley:    boolean    Exclude ridges and valleys
FreestyleLineSet.exclude_silhouette -> exclude_silhouette:    boolean    Exclude silhouette edges
FreestyleLineSet.exclude_suggestive_contour -> exclude_suggestive_contour:    boolean    Exclude suggestive contours
FreestyleLineSet.face_mark_condition -> face_mark_condition:    enum    Set a feature edge selection condition on face marks
FreestyleLineSet.face_mark_negation -> face_mark_negation:    enum    Set the negation operation for the condition on face marks
FreestyleLineSet.group -> group:    pointer    A group of objects based on which feature edges are selected
FreestyleLineSet.group_negation -> group_negation:    enum    Set the negation operation for conditions on feature edge types
FreestyleLineSet.linestyle -> linestyle:    pointer    Line style settings
FreestyleLineSet.name -> name:    string    Line set name
FreestyleLineSet.qi_end -> qi_end:    int    Last QI value of the QI range
FreestyleLineSet.qi_start -> qi_start:    int    First QI value of the QI range
FreestyleLineSet.select_border -> select_border:    boolean    Select border edges
FreestyleLineSet.select_by_edge_types -> select_by_edge_types:    boolean    Select feature edges based on edge types
FreestyleLineSet.select_by_face_marks -> select_by_face_marks:    boolean    Select feature edges by face marks
FreestyleLineSet.select_by_group -> select_by_group:    boolean    Select feature edges based on a group of objects
FreestyleLineSet.select_by_image_border -> select_by_image_border:    boolean    Select feature edges by image border (less memory consumption)
FreestyleLineSet.select_by_visibility -> select_by_visibility:    boolean    Select feature edges based on visibility
FreestyleLineSet.select_contour -> select_contour:    boolean    Select contours
FreestyleLineSet.select_crease -> select_crease:    boolean    Select crease edges
FreestyleLineSet.select_edge_mark -> select_edge_mark:    boolean    Select edge marks
FreestyleLineSet.select_external_contour -> select_external_contour:    boolean    Select external contours
FreestyleLineSet.select_material_boundary -> select_material_boundary:    boolean    Select edges at material boundaries
FreestyleLineSet.select_ridge_valley -> select_ridge_valley:    boolean    Select ridges and valleys
FreestyleLineSet.select_silhouette -> select_silhouette:    boolean    Select silhouette edges
FreestyleLineSet.select_suggestive_contour -> select_suggestive_contour:    boolean    Select suggestive contours
FreestyleLineSet.show_render -> show_render:    boolean    Enable or disable this line set during stroke rendering
FreestyleLineSet.visibility -> visibility:    enum    Determine how to use visibility for feature edge selection
FreestyleModuleSettings.script -> script:    pointer    Python script to define a style module
FreestyleModuleSettings.use -> use:    boolean    Enable or disable this style module during stroke rendering
FreestyleSettings.crease_angle -> crease_angle:    float    Angular threshold for detecting crease edges
FreestyleSettings.kr_derivative_epsilon -> kr_derivative_epsilon:    float    Kr derivative epsilon for computing suggestive contours
FreestyleSettings.linesets -> linesets:    collection, (read-only)    
FreestyleSettings.mode -> mode:    enum    Select the Freestyle control mode
FreestyleSettings.modules -> modules:    collection, (read-only)    A list of style modules (to be applied from top to bottom)
FreestyleSettings.sphere_radius -> sphere_radius:    float    Sphere radius for computing curvatures
FreestyleSettings.use_advanced_options -> use_advanced_options:    boolean    Enable advanced edge detection options (sphere radius and Kr derivative epsilon)
FreestyleSettings.use_culling -> use_culling:    boolean    If enabled, out-of-view edges are ignored
FreestyleSettings.use_material_boundaries -> use_material_boundaries:    boolean    Enable material boundaries
FreestyleSettings.use_ridges_and_valleys -> use_ridges_and_valleys:    boolean    Enable ridges and valleys
FreestyleSettings.use_smoothness -> use_smoothness:    boolean    Take face smoothness into account in view map calculation
FreestyleSettings.use_suggestive_contours -> use_suggestive_contours:    boolean    Enable suggestive contours
Function.description -> description:    string, (read-only)    Description of the Function's purpose
Function.identifier -> identifier:    string, (read-only)    Unique name used in the code and scripting
Function.is_registered -> is_registered:    boolean, (read-only)    Function is registered as callback as part of type registration
Function.is_registered_optional -> is_registered_optional:    boolean, (read-only)    Function is optionally registered as callback part of type registration
Function.parameters -> parameters:    collection, (read-only)    Parameters for the function
Function.use_self -> use_self:    boolean, (read-only)    Function does not pass its self as an argument (becomes a static method in python)
Function.use_self_type -> use_self_type:    boolean, (read-only)    Function passes its self type as an argument (becomes a class method in python if use_self is false)
GPencilFrame.frame_number -> frame_number:    int    The frame on which this sketch appears
GPencilFrame.is_edited -> is_edited:    boolean    Frame is being edited (painted on)
GPencilFrame.select -> select:    boolean    Frame is selected for editing in the Dope Sheet
GPencilFrame.strokes -> strokes:    collection, (read-only)    Freehand curves defining the sketch on this frame
GPencilLayer.active_frame -> active_frame:    pointer, (read-only)    Frame currently being displayed for this layer
GPencilLayer.alpha -> alpha:    float    Layer Opacity
GPencilLayer.color -> color:    float[3]    Color for all strokes in this layer
GPencilLayer.frames -> frames:    collection, (read-only)    Sketches for this layer on different frames
GPencilLayer.ghost_range_max -> ghost_range_max:    int    Maximum number of frames on either side of the active frame to show (0 = show the 'first' available sketch on either side)
GPencilLayer.hide -> hide:    boolean    Set layer Visibility
GPencilLayer.info -> info:    string    Layer name
GPencilLayer.line_width -> line_width:    int    Thickness of strokes (in pixels)
GPencilLayer.lock -> lock:    boolean    Protect layer from further editing and/or frame changes
GPencilLayer.lock_frame -> lock_frame:    boolean    Lock current frame displayed by layer
GPencilLayer.select -> select:    boolean    Layer is selected for editing in the Dope Sheet
GPencilLayer.show_points -> show_points:    boolean    Draw the points which make up the strokes (for debugging purposes)
GPencilLayer.show_x_ray -> show_x_ray:    boolean    Make the layer draw in front of objects
GPencilLayer.use_onion_skinning -> use_onion_skinning:    boolean    Ghost frames on either side of frame
GPencilStroke.draw_mode -> draw_mode:    enum    
GPencilStroke.points -> points:    collection, (read-only)    Stroke data points
GPencilStrokePoint.co -> co:    float[3]    
GPencilStrokePoint.pressure -> pressure:    float    Pressure of tablet at point when drawing it
GameObjectSettings.actuators -> actuators:    collection, (read-only)    Game engine actuators to act on events
GameObjectSettings.collision_bounds_type -> collision_bounds_type:    enum    Select the collision type
GameObjectSettings.collision_group -> collision_group:    boolean[8]    The collision group of the object
GameObjectSettings.collision_margin -> collision_margin:    float    Extra margin around object for collision detection, small amount required for stability
GameObjectSettings.collision_mask -> collision_mask:    boolean[8]    The groups this object can collide with
GameObjectSettings.controllers -> controllers:    collection, (read-only)    Game engine controllers to process events, connecting sensors to actuators
GameObjectSettings.damping -> damping:    float    General movement damping
GameObjectSettings.fall_speed -> fall_speed:    float    Maximum speed at which the character will fall
GameObjectSettings.form_factor -> form_factor:    float    Form factor scales the inertia tensor
GameObjectSettings.friction_coefficients -> friction_coefficients:    float[3]    Relative friction coefficients in the in the X, Y and Z directions, when anisotropic friction is enabled
GameObjectSettings.jump_speed -> jump_speed:    float    Upward velocity applied to the character when jumping
GameObjectSettings.lock_location_x -> lock_location_x:    boolean    Disable simulation of linear motion along the X axis
GameObjectSettings.lock_location_y -> lock_location_y:    boolean    Disable simulation of linear motion along the Y axis
GameObjectSettings.lock_location_z -> lock_location_z:    boolean    Disable simulation of linear motion along the Z axis
GameObjectSettings.lock_rotation_x -> lock_rotation_x:    boolean    Disable simulation of angular motion along the X axis
GameObjectSettings.lock_rotation_y -> lock_rotation_y:    boolean    Disable simulation of angular motion along the Y axis
GameObjectSettings.lock_rotation_z -> lock_rotation_z:    boolean    Disable simulation of angular motion along the Z axis
GameObjectSettings.mass -> mass:    float    Mass of the object
GameObjectSettings.obstacle_radius -> obstacle_radius:    float    Radius of object representation in obstacle simulation
GameObjectSettings.physics_type -> physics_type:    enum    Select the type of physical representation
GameObjectSettings.properties -> properties:    collection, (read-only)    Game engine properties
GameObjectSettings.radius -> radius:    float    Radius of bounding sphere and material physics
GameObjectSettings.rotation_damping -> rotation_damping:    float    General rotation damping
GameObjectSettings.sensors -> sensors:    collection, (read-only)    Game engine sensor to detect events
GameObjectSettings.show_actuators -> show_actuators:    boolean    Shows actuators for this object in the user interface
GameObjectSettings.show_controllers -> show_controllers:    boolean    Shows controllers for this object in the user interface
GameObjectSettings.show_debug_state -> show_debug_state:    boolean    Print state debug info in the game engine
GameObjectSettings.show_sensors -> show_sensors:    boolean    Shows sensors for this object in the user interface
GameObjectSettings.show_state_panel -> show_state_panel:    boolean    Show state panel
GameObjectSettings.soft_body -> soft_body:    pointer, (read-only)    Settings for Bullet soft body simulation
GameObjectSettings.states_initial -> states_initial:    boolean[30]    Initial state when the game starts
GameObjectSettings.states_visible -> states_visible:    boolean[30]    State determining which controllers are displayed
GameObjectSettings.step_height -> step_height:    float    Maximum height of steps the character can run over
GameObjectSettings.use_activity_culling -> use_activity_culling:    boolean    Disable simulation of angular motion along the Z axis
GameObjectSettings.use_actor -> use_actor:    boolean    Object is detected by the Near and Radar sensor
GameObjectSettings.use_all_states -> use_all_states:    boolean    Set all state bits
GameObjectSettings.use_anisotropic_friction -> use_anisotropic_friction:    boolean    Enable anisotropic friction
GameObjectSettings.use_collision_bounds -> use_collision_bounds:    boolean    Specify a collision bounds type other than the default
GameObjectSettings.use_collision_compound -> use_collision_compound:    boolean    Add children to form a compound collision object
GameObjectSettings.use_ghost -> use_ghost:    boolean    Object does not react to collisions, like a ghost
GameObjectSettings.use_material_physics_fh -> use_material_physics_fh:    boolean    React to force field physics settings in materials
GameObjectSettings.use_obstacle_create -> use_obstacle_create:    boolean    Create representation for obstacle simulation
GameObjectSettings.use_record_animation -> use_record_animation:    boolean    Record animation objects without physics
GameObjectSettings.use_rotate_from_normal -> use_rotate_from_normal:    boolean    Use face normal to rotate object, so that it points away from the surface
GameObjectSettings.use_sleep -> use_sleep:    boolean    Disable auto (de)activation in physics simulation
GameObjectSettings.used_states -> used_states:    boolean[30], (read-only)    States which are being used by controllers
GameObjectSettings.velocity_max -> velocity_max:    float    Clamp velocity to this maximum speed
GameObjectSettings.velocity_min -> velocity_min:    float    Clamp velocity to this minimum speed (except when totally still)
GameProperty.name -> name:    string    Available as GameObject attributes in the game engine's python API
GameProperty.show_debug -> show_debug:    boolean    Print debug information for this property
GameProperty.type -> type:    enum    
GameProperty|GameBooleanProperty.value -> value:    boolean    Property value
GameProperty|GameFloatProperty.value -> value:    float    Property value
GameProperty|GameIntProperty.value -> value:    int    Property value
GameProperty|GameStringProperty.value -> value:    string    Property value
GameProperty|GameTimerProperty.value -> value:    float    Property value
GameSoftBodySettings.cluster_iterations -> cluster_iterations:    int    Number of cluster iterations
GameSoftBodySettings.collision_margin -> collision_margin:    float    Collision margin for soft body. Small value makes the algorithm unstable
GameSoftBodySettings.dynamic_friction -> dynamic_friction:    float    Dynamic Friction
GameSoftBodySettings.linear_stiffness -> linear_stiffness:    float    Linear stiffness of the soft body links
GameSoftBodySettings.location_iterations -> location_iterations:    int    Position solver iterations
GameSoftBodySettings.shape_threshold -> shape_threshold:    float    Shape matching threshold
GameSoftBodySettings.use_bending_constraints -> use_bending_constraints:    boolean    Enable bending constraints
GameSoftBodySettings.use_cluster_rigid_to_softbody -> use_cluster_rigid_to_softbody:    boolean    Enable cluster collision between soft and rigid body
GameSoftBodySettings.use_cluster_soft_to_softbody -> use_cluster_soft_to_softbody:    boolean    Enable cluster collision between soft and soft body
GameSoftBodySettings.use_shape_match -> use_shape_match:    boolean    Enable soft body shape matching goal
GameSoftBodySettings.weld_threshold -> weld_threshold:    float    Welding threshold: distance between nearby vertices to be considered equal => set to 0.0 to disable welding test and speed up scene loading (ok if the mesh has no
duplicates)
GreasePencilLayers.active -> active:    pointer    Active grease pencil layer
Header.bl_idname -> bl_idname:    string    If this is set, the header gets a custom ID, otherwise it takes the name of the class used to define the panel; for example, if the class name is "OBJECT_HT_hello", and bl_idname is not set
by the script, then bl_idname = "OBJECT_HT_hello"
Header.bl_space_type -> bl_space_type:    enum    The space where the header is going to be used in
Header.layout -> layout:    pointer, (read-only)    Structure of the header in the UI
Histogram.mode -> mode:    enum    Channels to display when drawing the histogram
Histogram.show_line -> show_line:    boolean    Display lines rather than filled shapes
ID.is_library_indirect -> is_library_indirect:    boolean, (read-only)    Is this ID block linked indirectly
ID.is_updated -> is_updated:    boolean, (read-only)    Datablock is tagged for recalculation
ID.is_updated_data -> is_updated_data:    boolean, (read-only)    Datablock data is tagged for recalculation
ID.library -> library:    pointer, (read-only)    Library file the datablock is linked from
ID.name -> name:    string    Unique datablock ID name
ID.tag -> tag:    boolean    Tools can use this to tag data (initial state is undefined)
ID.use_fake_user -> use_fake_user:    boolean    Save this datablock even if it has no users
ID.users -> users:    int, (read-only)    Number of times this datablock is referenced
ID|Action.fcurves -> fcurves:    collection, (read-only)    The individual F-Curves that make up the action
ID|Action.frame_range -> frame_range:    float[2], (read-only)    The final frame range of all F-Curves within this action
ID|Action.groups -> groups:    collection, (read-only)    Convenient groupings of F-Curves
ID|Action.id_root -> id_root:    enum    Type of ID block that action can be used on - DO NOT CHANGE UNLESS YOU KNOW WHAT YOU ARE DOING
ID|Action.pose_markers -> pose_markers:    collection, (read-only)    Markers specific to this action, for labeling poses
ID|Armature.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|Armature.bones -> bones:    collection, (read-only)    
ID|Armature.deform_method -> deform_method:    enum    Vertex Deformer Method (Game Engine only)
ID|Armature.draw_type -> draw_type:    enum    
ID|Armature.edit_bones -> edit_bones:    collection, (read-only)    
ID|Armature.ghost_frame_end -> ghost_frame_end:    int    End frame of range of Ghosts to display (not for 'Around Current Frame' Onion-skinning method)
ID|Armature.ghost_frame_start -> ghost_frame_start:    int    Starting frame of range of Ghosts to display (not for 'Around Current Frame' Onion-skinning method)
ID|Armature.ghost_size -> ghost_size:    int    Frame step for Ghosts (not for 'On Keyframes' Onion-skinning method)
ID|Armature.ghost_step -> ghost_step:    int    Number of frame steps on either side of current frame to show as ghosts (only for 'Around Current Frame' Onion-skinning method)
ID|Armature.ghost_type -> ghost_type:    enum    Method of Onion-skinning for active Action
ID|Armature.is_editmode -> is_editmode:    boolean, (read-only)    True when used in editmode
ID|Armature.layers -> layers:    boolean[32]    Armature layer visibility
ID|Armature.layers_protected -> layers_protected:    boolean[32]    Protected layers in Proxy Instances are restored to Proxy settings on file reload and undo
ID|Armature.pose_position -> pose_position:    enum    Show armature in binding pose or final posed state
ID|Armature.show_axes -> show_axes:    boolean    Draw bone axes
ID|Armature.show_bone_custom_shapes -> show_bone_custom_shapes:    boolean    Draw bones with their custom shapes
ID|Armature.show_group_colors -> show_group_colors:    boolean    Draw bone group colors
ID|Armature.show_names -> show_names:    boolean    Draw bone names
ID|Armature.show_only_ghost_selected -> show_only_ghost_selected:    boolean    
ID|Armature.use_auto_ik -> use_auto_ik:    boolean    Add temporary IK constraints while grabbing bones in Pose Mode
ID|Armature.use_deform_delay -> use_deform_delay:    boolean    Don't deform children when manipulating bones in Pose Mode
ID|Armature.use_mirror_x -> use_mirror_x:    boolean    Apply changes to matching bone on opposite side of X-Axis
ID|Brush.auto_smooth_factor -> auto_smooth_factor:    float    Amount of smoothing to automatically apply to each stroke
ID|Brush.blend -> blend:    enum    Brush blending mode
ID|Brush.brush_capabilities -> brush_capabilities:    pointer, (read-only)    Brush's capabilities
ID|Brush.clone_alpha -> clone_alpha:    float    Opacity of clone image display
ID|Brush.clone_image -> clone_image:    pointer    Image for clone tool
ID|Brush.clone_offset -> clone_offset:    float[2]    
ID|Brush.color -> color:    float[3]    
ID|Brush.crease_pinch_factor -> crease_pinch_factor:    float    How much the crease brush pinches
ID|Brush.cursor_color_add -> cursor_color_add:    float[3]    Color of cursor when adding
ID|Brush.cursor_color_subtract -> cursor_color_subtract:    float[3]    Color of cursor when subtracting
ID|Brush.cursor_overlay_alpha -> cursor_overlay_alpha:    int    
ID|Brush.curve -> curve:    pointer, (read-only)    Editable falloff curve
ID|Brush.direction -> direction:    enum    
ID|Brush.height -> height:    float    Affectable height of brush (layer height for layer tool, i.e.)
ID|Brush.icon_filepath -> icon_filepath:    string    File path to brush icon
ID|Brush.image_tool -> image_tool:    enum    
ID|Brush.jitter -> jitter:    float    Jitter the position of the brush while painting
ID|Brush.jitter_absolute -> jitter_absolute:    int    Jitter the position of the brush in pixels while painting
ID|Brush.mask_overlay_alpha -> mask_overlay_alpha:    int    
ID|Brush.mask_stencil_dimension -> mask_stencil_dimension:    float[2]    Dimensions of mask stencil in viewport
ID|Brush.mask_stencil_pos -> mask_stencil_pos:    float[2]    Position of mask stencil in viewport
ID|Brush.mask_texture -> mask_texture:    pointer    
ID|Brush.mask_texture_slot -> mask_texture_slot:    pointer, (read-only)    
ID|Brush.mask_tool -> mask_tool:    enum    
ID|Brush.normal_weight -> normal_weight:    float    How much grab will pull vertexes out of surface during a grab
ID|Brush.plane_offset -> plane_offset:    float    Adjust plane on which the brush acts towards or away from the object surface
ID|Brush.plane_trim -> plane_trim:    float    If a vertex is further away from offset plane than this, then it is not affected
ID|Brush.rate -> rate:    float    Interval between paints for Airbrush
ID|Brush.sculpt_capabilities -> sculpt_capabilities:    pointer, (read-only)    Brush's capabilities in sculpt mode
ID|Brush.sculpt_plane -> sculpt_plane:    enum    
ID|Brush.sculpt_stroke_method -> sculpt_stroke_method:    enum    
ID|Brush.sculpt_tool -> sculpt_tool:    enum    
ID|Brush.size -> size:    int    Radius of the brush in pixels
ID|Brush.smooth_stroke_factor -> smooth_stroke_factor:    float    Higher values give a smoother stroke
ID|Brush.smooth_stroke_radius -> smooth_stroke_radius:    int    Minimum distance from last point before stroke continues
ID|Brush.spacing -> spacing:    int    Spacing between brush daubs as a percentage of brush diameter
ID|Brush.stencil_dimension -> stencil_dimension:    float[2]    Dimensions of stencil in viewport
ID|Brush.stencil_pos -> stencil_pos:    float[2]    Position of stencil in viewport
ID|Brush.strength -> strength:    float    How powerful the effect of the brush is when applied
ID|Brush.stroke_method -> stroke_method:    enum    
ID|Brush.texture -> texture:    pointer    
ID|Brush.texture_angle_source_no_random -> texture_angle_source_no_random:    enum    
ID|Brush.texture_angle_source_random -> texture_angle_source_random:    enum    
ID|Brush.texture_overlay_alpha -> texture_overlay_alpha:    int    
ID|Brush.texture_sample_bias -> texture_sample_bias:    float    Value added to texture samples
ID|Brush.texture_slot -> texture_slot:    pointer, (read-only)    
ID|Brush.unprojected_radius -> unprojected_radius:    float    Radius of brush in Blender units
ID|Brush.use_accumulate -> use_accumulate:    boolean    Accumulate stroke daubs on top of each other
ID|Brush.use_adaptive_space -> use_adaptive_space:    boolean    Space daubs according to surface orientation instead of screen space
ID|Brush.use_airbrush -> use_airbrush:    boolean    Keep applying paint effect while holding mouse (spray)
ID|Brush.use_alpha -> use_alpha:    boolean    When this is disabled, lock alpha while painting
ID|Brush.use_anchor -> use_anchor:    boolean    Keep the brush anchored to the initial location
ID|Brush.use_cursor_overlay -> use_cursor_overlay:    boolean    Show cursor in viewport
ID|Brush.use_cursor_overlay_override -> use_cursor_overlay_override:    boolean    Don't show overlay during a stroke
ID|Brush.use_custom_icon -> use_custom_icon:    boolean    Set the brush icon from an image file
ID|Brush.use_drag_dot -> use_drag_dot:    boolean    Allow a single dot to be carefully positioned
ID|Brush.use_edge_to_edge -> use_edge_to_edge:    boolean    Drag anchor brush from edge-to-edge
ID|Brush.use_frontface -> use_frontface:    boolean    Brush only affects vertexes that face the viewer
ID|Brush.use_inverse_smooth_pressure -> use_inverse_smooth_pressure:    boolean    Lighter pressure causes more smoothing to be applied
ID|Brush.use_locked_size -> use_locked_size:    boolean    When locked brush stays same size relative to object; when unlocked brush size is given in pixels
ID|Brush.use_offset_pressure -> use_offset_pressure:    boolean    Enable tablet pressure sensitivity for offset
ID|Brush.use_original_normal -> use_original_normal:    boolean    When locked keep using normal of surface where stroke was initiated
ID|Brush.use_paint_image -> use_paint_image:    boolean    Use this brush in texture paint mode
ID|Brush.use_paint_sculpt -> use_paint_sculpt:    boolean    Use this brush in sculpt mode
ID|Brush.use_paint_vertex -> use_paint_vertex:    boolean    Use this brush in vertex paint mode
ID|Brush.use_paint_weight -> use_paint_weight:    boolean    Use this brush in weight paint mode
ID|Brush.use_persistent -> use_persistent:    boolean    Sculpt on a persistent layer of the mesh
ID|Brush.use_plane_trim -> use_plane_trim:    boolean    Enable Plane Trim
ID|Brush.use_pressure_jitter -> use_pressure_jitter:    boolean    Enable tablet pressure sensitivity for jitter
ID|Brush.use_pressure_size -> use_pressure_size:    boolean    Enable tablet pressure sensitivity for size
ID|Brush.use_pressure_spacing -> use_pressure_spacing:    boolean    Enable tablet pressure sensitivity for spacing
ID|Brush.use_pressure_strength -> use_pressure_strength:    boolean    Enable tablet pressure sensitivity for strength
ID|Brush.use_primary_overlay -> use_primary_overlay:    boolean    Show texture in viewport
ID|Brush.use_primary_overlay_override -> use_primary_overlay_override:    boolean    Don't show overlay during a stroke
ID|Brush.use_rake -> use_rake:    boolean    Rotate the brush texture to match the stroke direction
ID|Brush.use_random_rotation -> use_random_rotation:    boolean    Rotate the brush texture at random
ID|Brush.use_relative_jitter -> use_relative_jitter:    boolean    Jittering happens in screen space, not relative to brush size
ID|Brush.use_secondary_overlay -> use_secondary_overlay:    boolean    Show texture in viewport
ID|Brush.use_secondary_overlay_override -> use_secondary_overlay_override:    boolean    Don't show overlay during a stroke
ID|Brush.use_smooth_stroke -> use_smooth_stroke:    boolean    Brush lags behind mouse and follows a smoother path
ID|Brush.use_space -> use_space:    boolean    Limit brush application to the distance specified by spacing
ID|Brush.use_space_attenuation -> use_space_attenuation:    boolean    Automatically adjust strength to give consistent results for different spacings
ID|Brush.use_wrap -> use_wrap:    boolean    Enable torus wrapping while painting
ID|Brush.vertex_tool -> vertex_tool:    enum    Brush blending mode
ID|Brush.weight -> weight:    float    Vertex weight when brush is applied
ID|Camera.angle -> angle:    float    Camera lens field of view
ID|Camera.angle_x -> angle_x:    float    Camera lens horizontal field of view
ID|Camera.angle_y -> angle_y:    float    Camera lens vertical field of view
ID|Camera.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|Camera.clip_end -> clip_end:    float    Camera far clipping distance
ID|Camera.clip_start -> clip_start:    float    Camera near clipping distance
ID|Camera.cycles -> cycles:    pointer, (read-only)    Cycles camera settings
ID|Camera.dof_distance -> dof_distance:    float    Distance to the focus point for depth of field
ID|Camera.dof_object -> dof_object:    pointer    Use this object to define the depth of field focal point
ID|Camera.draw_size -> draw_size:    float    Apparent size of the Camera object in the 3D View
ID|Camera.lens -> lens:    float    Perspective Camera lens value in millimeters
ID|Camera.lens_unit -> lens_unit:    enum    Unit to edit lens in for the user interface
ID|Camera.ortho_scale -> ortho_scale:    float    Orthographic Camera scale (similar to zoom)
ID|Camera.passepartout_alpha -> passepartout_alpha:    float    Opacity (alpha) of the darkened overlay in Camera view
ID|Camera.sensor_fit -> sensor_fit:    enum    Method to fit image and field of view angle inside the sensor
ID|Camera.sensor_height -> sensor_height:    float    Vertical size of the image sensor area in millimeters
ID|Camera.sensor_width -> sensor_width:    float    Horizontal size of the image sensor area in millimeters
ID|Camera.shift_x -> shift_x:    float    Perspective Camera horizontal shift
ID|Camera.shift_y -> shift_y:    float    Perspective Camera vertical shift
ID|Camera.show_guide -> show_guide:    enum    Draw overlay
ID|Camera.show_limits -> show_limits:    boolean    Draw the clipping range and focus point on the camera
ID|Camera.show_mist -> show_mist:    boolean    Draw a line from the Camera to indicate the mist area
ID|Camera.show_name -> show_name:    boolean    Show the active Camera's name in Camera view
ID|Camera.show_passepartout -> show_passepartout:    boolean    Show a darkened overlay outside the image area in Camera view
ID|Camera.show_sensor -> show_sensor:    boolean    Show sensor size (film gate) in Camera view
ID|Camera.show_title_safe -> show_title_safe:    boolean    Show TV title safe and action safe zones in Camera view
ID|Camera.type -> type:    enum    Camera types
ID|Curve.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|Curve.bevel_depth -> bevel_depth:    float    Bevel depth when not using a bevel object
ID|Curve.bevel_factor_end -> bevel_factor_end:    float    Factor that defines to where beveling of spline happens (0=to the very beginning, 1=to the very end)
ID|Curve.bevel_factor_start -> bevel_factor_start:    float    Factor that defines from where beveling of spline happens (0=from the very beginning, 1=from the very end)
ID|Curve.bevel_object -> bevel_object:    pointer    Curve object name that defines the bevel shape
ID|Curve.bevel_resolution -> bevel_resolution:    int    Bevel resolution when depth is non-zero and no specific bevel object has been defined
ID|Curve.cycles -> cycles:    pointer, (read-only)    Cycles mesh settings
ID|Curve.dimensions -> dimensions:    enum    Select 2D or 3D curve type
ID|Curve.eval_time -> eval_time:    float    Parametric position along the length of the curve that Objects 'following' it should be at (position is evaluated by dividing by the 'Path Length' value)
ID|Curve.extrude -> extrude:    float    Amount of curve extrusion when not using a bevel object
ID|Curve.fill_mode -> fill_mode:    enum    Mode of filling curve
ID|Curve.is_editmode -> is_editmode:    boolean, (read-only)    True when used in editmode
ID|Curve.materials -> materials:    collection, (read-only)    
ID|Curve.offset -> offset:    float    Offset the curve to adjust the width of a text
ID|Curve.path_duration -> path_duration:    int    The number of frames that are needed to traverse the path, defining the maximum value for the 'Evaluation Time' setting
ID|Curve.render_resolution_u -> render_resolution_u:    int    Surface resolution in U direction used while rendering (zero skips this property)
ID|Curve.render_resolution_v -> render_resolution_v:    int    Surface resolution in V direction used while rendering (zero skips this property)
ID|Curve.resolution_u -> resolution_u:    int    Surface resolution in U direction
ID|Curve.resolution_v -> resolution_v:    int    Surface resolution in V direction
ID|Curve.shape_keys -> shape_keys:    pointer, (read-only)    
ID|Curve.show_handles -> show_handles:    boolean    Display Bezier handles in editmode
ID|Curve.show_normal_face -> show_normal_face:    boolean    Display 3D curve normals in editmode
ID|Curve.splines -> splines:    collection, (read-only)    Collection of splines in this curve data object
ID|Curve.taper_object -> taper_object:    pointer    Curve object name that defines the taper (width)
ID|Curve.texspace_location -> texspace_location:    float[3]    Texture space location
ID|Curve.texspace_size -> texspace_size:    float[3]    Texture space size
ID|Curve.twist_mode -> twist_mode:    enum    The type of tilt calculation for 3D Curves
ID|Curve.twist_smooth -> twist_smooth:    float    Smoothing iteration for tangents
ID|Curve.use_auto_texspace -> use_auto_texspace:    boolean    Adjust active object's texture space automatically when transforming object
ID|Curve.use_deform_bounds -> use_deform_bounds:    boolean    Option for curve-deform: Use the mesh bounds to clamp the deformation
ID|Curve.use_fill_caps -> use_fill_caps:    boolean    Fill caps for beveled curves
ID|Curve.use_fill_deform -> use_fill_deform:    boolean    Fill curve after applying shape keys and all modifiers
ID|Curve.use_map_taper -> use_map_taper:    boolean    Map effect of taper object on actually beveled curve
ID|Curve.use_path -> use_path:    boolean    Enable the curve to become a translation path
ID|Curve.use_path_follow -> use_path_follow:    boolean    Make curve path children to rotate along the path
ID|Curve.use_radius -> use_radius:    boolean    Option for paths and curve-deform: apply the curve radius with path following it and deforming
ID|Curve.use_stretch -> use_stretch:    boolean    Option for curve-deform: make deformed child to stretch along entire path
ID|Curve.use_time_offset -> use_time_offset:    boolean    Children will use TimeOffs value as path distance offset
ID|Curve.use_uv_as_generated -> use_uv_as_generated:    boolean    Uses the UV values as Generated textured coordinates
ID|Curve|SurfaceCurve.use_uv_as_generated -> use_uv_as_generated:    boolean    Uses the UV values as Generated textured coordinates
ID|Curve|TextCurve.active_textbox -> active_textbox:    int    
ID|Curve|TextCurve.align -> align:    enum    Text align from the object center
ID|Curve|TextCurve.body -> body:    string    Content of this text object
ID|Curve|TextCurve.body_format -> body_format:    collection, (read-only)    Stores the style of each character
ID|Curve|TextCurve.edit_format -> edit_format:    pointer, (read-only)    Editing settings character formatting
ID|Curve|TextCurve.family -> family:    string    Use Objects as font characters (give font objects a common name followed by the character they represent, eg. 'family_a', 'family_b', etc, and set this to 'family_', turn on Vertex
Duplication)
ID|Curve|TextCurve.follow_curve -> follow_curve:    pointer    Curve deforming text object
ID|Curve|TextCurve.font -> font:    pointer    
ID|Curve|TextCurve.font_bold -> font_bold:    pointer    
ID|Curve|TextCurve.font_bold_italic -> font_bold_italic:    pointer    
ID|Curve|TextCurve.font_italic -> font_italic:    pointer    
ID|Curve|TextCurve.offset_x -> offset_x:    float    Horizontal offset from the object origin
ID|Curve|TextCurve.offset_y -> offset_y:    float    Vertical offset from the object origin
ID|Curve|TextCurve.shear -> shear:    float    Italic angle of the characters
ID|Curve|TextCurve.size -> size:    float    
ID|Curve|TextCurve.small_caps_scale -> small_caps_scale:    float    Scale of small capitals
ID|Curve|TextCurve.space_character -> space_character:    float    
ID|Curve|TextCurve.space_line -> space_line:    float    
ID|Curve|TextCurve.space_word -> space_word:    float    
ID|Curve|TextCurve.text_boxes -> text_boxes:    collection, (read-only)    
ID|Curve|TextCurve.underline_height -> underline_height:    float    
ID|Curve|TextCurve.underline_position -> underline_position:    float    Vertical position of underline
ID|Curve|TextCurve.use_fast_edit -> use_fast_edit:    boolean    Don't fill polygons while editing
ID|Curve|TextCurve.use_uv_as_generated -> use_uv_as_generated:    boolean    Uses the UV values as Generated textured coordinates
ID|FreestyleLineStyle.alpha -> alpha:    float    Base alpha transparency, possibly modified by alpha transparency modifiers
ID|FreestyleLineStyle.alpha_modifiers -> alpha_modifiers:    collection, (read-only)    List of alpha transparency modifiers
ID|FreestyleLineStyle.angle_max -> angle_max:    float    Maximum 2D angle for splitting chains
ID|FreestyleLineStyle.angle_min -> angle_min:    float    Minimum 2D angle for splitting chains
ID|FreestyleLineStyle.caps -> caps:    enum    Select the shape of both ends of strokes
ID|FreestyleLineStyle.chaining -> chaining:    enum    Select the way how feature edges are jointed to form chains
ID|FreestyleLineStyle.color -> color:    float[3]    Base line color, possibly modified by line color modifiers
ID|FreestyleLineStyle.color_modifiers -> color_modifiers:    collection, (read-only)    List of line color modifiers
ID|FreestyleLineStyle.dash1 -> dash1:    int    Length of the 1st dash for dashed lines
ID|FreestyleLineStyle.dash2 -> dash2:    int    Length of the 2nd dash for dashed lines
ID|FreestyleLineStyle.dash3 -> dash3:    int    Length of the 3rd dash for dashed lines
ID|FreestyleLineStyle.gap1 -> gap1:    int    Length of the 1st gap for dashed lines
ID|FreestyleLineStyle.gap2 -> gap2:    int    Length of the 2nd gap for dashed lines
ID|FreestyleLineStyle.gap3 -> gap3:    int    Length of the 3rd gap for dashed lines
ID|FreestyleLineStyle.geometry_modifiers -> geometry_modifiers:    collection, (read-only)    List of stroke geometry modifiers
ID|FreestyleLineStyle.length_max -> length_max:    float    Maximum curvilinear 2D length for the selection of chains
ID|FreestyleLineStyle.length_min -> length_min:    float    Minimum curvilinear 2D length for the selection of chains
ID|FreestyleLineStyle.material_boundary -> material_boundary:    boolean    If true, chains of feature edges are split at material boundaries
ID|FreestyleLineStyle.panel -> panel:    enum    Select the property panel to be shown
ID|FreestyleLineStyle.rounds -> rounds:    int    Number of rounds in a sketchy multiple touch
ID|FreestyleLineStyle.split_dash1 -> split_dash1:    int    Length of the 1st dash for splitting
ID|FreestyleLineStyle.split_dash2 -> split_dash2:    int    Length of the 2nd dash for splitting
ID|FreestyleLineStyle.split_dash3 -> split_dash3:    int    Length of the 3rd dash for splitting
ID|FreestyleLineStyle.split_gap1 -> split_gap1:    int    Length of the 1st gap for splitting
ID|FreestyleLineStyle.split_gap2 -> split_gap2:    int    Length of the 2nd gap for splitting
ID|FreestyleLineStyle.split_gap3 -> split_gap3:    int    Length of the 3rd gap for splitting
ID|FreestyleLineStyle.split_length -> split_length:    float    Curvilinear 2D length for chain splitting
ID|FreestyleLineStyle.thickness -> thickness:    float    Base line thickness, possibly modified by line thickness modifiers
ID|FreestyleLineStyle.thickness_modifiers -> thickness_modifiers:    collection, (read-only)    List of line thickness modifiers
ID|FreestyleLineStyle.thickness_position -> thickness_position:    enum    Select the position of stroke thickness
ID|FreestyleLineStyle.thickness_ratio -> thickness_ratio:    float    A number between 0 (inside) and 1 (outside) specifying the relative position of stroke thickness
ID|FreestyleLineStyle.use_angle_max -> use_angle_max:    boolean    Split chains at points with angles larger than the maximum 2D angle
ID|FreestyleLineStyle.use_angle_min -> use_angle_min:    boolean    Split chains at points with angles smaller than the minimum 2D angle
ID|FreestyleLineStyle.use_chaining -> use_chaining:    boolean    Enable chaining of feature edges
ID|FreestyleLineStyle.use_dashed_line -> use_dashed_line:    boolean    Enable or disable dashed line
ID|FreestyleLineStyle.use_length_max -> use_length_max:    boolean    Enable the selection of chains by a maximum 2D length
ID|FreestyleLineStyle.use_length_min -> use_length_min:    boolean    Enable the selection of chains by a minimum 2D length
ID|FreestyleLineStyle.use_same_object -> use_same_object:    boolean    If true, only feature edges of the same object are joined
ID|FreestyleLineStyle.use_split_length -> use_split_length:    boolean    Enable chain splitting by curvilinear 2D length
ID|FreestyleLineStyle.use_split_pattern -> use_split_pattern:    boolean    Enable chain splitting by dashed line patterns
ID|GreasePencil.draw_mode -> draw_mode:    enum    
ID|GreasePencil.layers -> layers:    collection, (read-only)    
ID|GreasePencil.use_stroke_endpoints -> use_stroke_endpoints:    boolean    Only use the first and last parts of the stroke for snapping
ID|Group.dupli_offset -> dupli_offset:    float[3]    Offset from the origin to use when instancing as DupliGroup
ID|Group.layers -> layers:    boolean[20]    Layers visible when this group is instanced as a dupli
ID|Group.objects -> objects:    collection, (read-only)    A collection of this groups objects
ID|Image.alpha_mode -> alpha_mode:    enum    Representation of alpha information in the RGBA pixels
ID|Image.bindcode -> bindcode:    int, (read-only)    OpenGL bindcode
ID|Image.channels -> channels:    int, (read-only)    Number of channels in pixels buffer
ID|Image.colorspace_settings -> colorspace_settings:    pointer, (read-only)    Input color space settings
ID|Image.depth -> depth:    int, (read-only)    Image bit depth
ID|Image.display_aspect -> display_aspect:    float[2]    Display Aspect for this image, does not affect rendering
ID|Image.field_order -> field_order:    enum    Order of video fields (select which lines are displayed first)
ID|Image.file_format -> file_format:    enum    Format used for re-saving this file
ID|Image.filepath -> filepath:    string    Image/Movie file name
ID|Image.filepath_raw -> filepath_raw:    string    Image/Movie file name (without data refreshing)
ID|Image.fps -> fps:    int    Speed of the animation in frames per second
ID|Image.frame_duration -> frame_duration:    int, (read-only)    Duration (in frames) of the image (1 when not a video/sequence)
ID|Image.frame_end -> frame_end:    int    End frame of an animated texture
ID|Image.frame_start -> frame_start:    int    Start frame of an animated texture
ID|Image.generated_height -> generated_height:    int    Generated image height
ID|Image.generated_type -> generated_type:    enum    Generated image type
ID|Image.generated_width -> generated_width:    int    Generated image width
ID|Image.has_data -> has_data:    boolean, (read-only)    True if this image has data
ID|Image.is_dirty -> is_dirty:    boolean, (read-only)    Image has changed and is not saved
ID|Image.is_float -> is_float:    boolean, (read-only)    True if this image is stored in float buffer
ID|Image.mapping -> mapping:    enum    Mapping type to use for this image in the game engine
ID|Image.packed_file -> packed_file:    pointer, (read-only)    
ID|Image.pixels -> pixels:    float    Image pixels in floating point values
ID|Image.render_slot -> render_slot:    int    The current render slot displayed, only for viewer type images
ID|Image.resolution -> resolution:    float[2]    X/Y pixels per meter
ID|Image.size -> size:    int[2], (read-only)    Width and height in pixels, zero when image data cant be loaded
ID|Image.source -> source:    enum    Where the image comes from
ID|Image.tiles_x -> tiles_x:    int    Degree of repetition in the X direction
ID|Image.tiles_y -> tiles_y:    int    Degree of repetition in the Y direction
ID|Image.type -> type:    enum, (read-only)    How to generate the image
ID|Image.use_alpha -> use_alpha:    boolean    Use the alpha channel information from the image or make image fully opaque
ID|Image.use_animation -> use_animation:    boolean    Use as animated texture in the game engine
ID|Image.use_clamp_x -> use_clamp_x:    boolean    Disable texture repeating horizontally
ID|Image.use_clamp_y -> use_clamp_y:    boolean    Disable texture repeating vertically
ID|Image.use_fields -> use_fields:    boolean    Use fields of the image
ID|Image.use_generated_float -> use_generated_float:    boolean    Generate floating point buffer
ID|Image.use_tiles -> use_tiles:    boolean    Use of tilemode for faces (default shift-LMB to pick the tile for selected faces)
ID|Image.use_view_as_render -> use_view_as_render:    boolean    Apply render part of display transformation when displaying this image on the screen
ID|Key.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|Key.eval_time -> eval_time:    float    Evaluation time for absolute shape keys
ID|Key.key_blocks -> key_blocks:    collection, (read-only)    Shape keys
ID|Key.reference_key -> reference_key:    pointer, (read-only)    
ID|Key.slurph -> slurph:    int    Create a delay (in frames) in applying key positions, first vertex goes first
ID|Key.use_relative -> use_relative:    boolean    Make shape keys relative, otherwise play through shapes as a sequence using the evaluation time
ID|Key.user -> user:    pointer, (read-only)    Datablock using these shape keys
ID|Lamp.active_texture -> active_texture:    pointer    Active texture slot being displayed
ID|Lamp.active_texture_index -> active_texture_index:    int    Index of active texture slot
ID|Lamp.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|Lamp.color -> color:    float[3]    Light color
ID|Lamp.cycles -> cycles:    pointer, (read-only)    Cycles lamp settings
ID|Lamp.distance -> distance:    float    Falloff distance - the light is at half the original intensity at this point
ID|Lamp.energy -> energy:    float    Amount of light that the lamp emits
ID|Lamp.node_tree -> node_tree:    pointer, (read-only)    Node tree for node based lamps
ID|Lamp.texture_slots -> texture_slots:    collection, (read-only)    Texture slots defining the mapping and influence of textures
ID|Lamp.type -> type:    enum    Type of Lamp
ID|Lamp.use_diffuse -> use_diffuse:    boolean    Do diffuse shading
ID|Lamp.use_negative -> use_negative:    boolean    Cast negative light
ID|Lamp.use_nodes -> use_nodes:    boolean    Use shader nodes to render the lamp
ID|Lamp.use_own_layer -> use_own_layer:    boolean    Illuminate objects only on the same layers the lamp is on
ID|Lamp.use_specular -> use_specular:    boolean    Create specular highlights
ID|Lamp|AreaLamp.compression_threshold -> compression_threshold:    float    Deep shadow map compression threshold
ID|Lamp|AreaLamp.gamma -> gamma:    float    Light gamma correction value
ID|Lamp|AreaLamp.ge_shadow_buffer_type -> ge_shadow_buffer_type:    enum    The shadow mapping algorithm used
ID|Lamp|AreaLamp.shadow_adaptive_threshold -> shadow_adaptive_threshold:    float    Threshold for Adaptive Sampling (Raytraced shadows)
ID|Lamp|AreaLamp.shadow_buffer_bias -> shadow_buffer_bias:    float    Shadow buffer sampling bias
ID|Lamp|AreaLamp.shadow_buffer_bleed_bias -> shadow_buffer_bleed_bias:    float    Bias for reducing light-bleed on variance shadow maps
ID|Lamp|AreaLamp.shadow_buffer_clip_end -> shadow_buffer_clip_end:    float    Shadow map clip end, beyond which objects will not generate shadows
ID|Lamp|AreaLamp.shadow_buffer_clip_start -> shadow_buffer_clip_start:    float    Shadow map clip start, below which objects will not generate shadows
ID|Lamp|AreaLamp.shadow_buffer_samples -> shadow_buffer_samples:    int    Number of shadow buffer samples
ID|Lamp|AreaLamp.shadow_buffer_size -> shadow_buffer_size:    int    Resolution of the shadow buffer, higher values give crisper shadows but use more memory
ID|Lamp|AreaLamp.shadow_buffer_soft -> shadow_buffer_soft:    float    Size of shadow buffer sampling area
ID|Lamp|AreaLamp.shadow_buffer_type -> shadow_buffer_type:    enum    Type of shadow buffer
ID|Lamp|AreaLamp.shadow_color -> shadow_color:    float[3]    Color of shadows cast by the lamp
ID|Lamp|AreaLamp.shadow_filter_type -> shadow_filter_type:    enum    Type of shadow filter (Buffer Shadows)
ID|Lamp|AreaLamp.shadow_method -> shadow_method:    enum    
ID|Lamp|AreaLamp.shadow_ray_sample_method -> shadow_ray_sample_method:    enum    Method for generating shadow samples: Adaptive QMC is fastest, Constant QMC is less noisy but slower
ID|Lamp|AreaLamp.shadow_ray_samples_x -> shadow_ray_samples_x:    int    Number of samples taken extra (samples x samples)
ID|Lamp|AreaLamp.shadow_ray_samples_y -> shadow_ray_samples_y:    int    Number of samples taken extra (samples x samples)
ID|Lamp|AreaLamp.shadow_sample_buffers -> shadow_sample_buffers:    enum    Number of shadow buffers to render for better AA, this increases memory usage
ID|Lamp|AreaLamp.shadow_soft_size -> shadow_soft_size:    float    Light size for ray shadow sampling (Raytraced shadows)
ID|Lamp|AreaLamp.shape -> shape:    enum    Shape of the area lamp
ID|Lamp|AreaLamp.size -> size:    float    Size of the area of the area Lamp, X direction size for Rectangle shapes
ID|Lamp|AreaLamp.size_y -> size_y:    float    Size of the area of the area Lamp in the Y direction for Rectangle shapes
ID|Lamp|AreaLamp.use_auto_clip_end -> use_auto_clip_end:    boolean    Automatic calculation of clipping-end, based on visible vertices
ID|Lamp|AreaLamp.use_auto_clip_start -> use_auto_clip_start:    boolean    Automatic calculation of clipping-start, based on visible vertices
ID|Lamp|AreaLamp.use_dither -> use_dither:    boolean    Use 2x2 dithering for sampling  (Constant Jittered sampling)
ID|Lamp|AreaLamp.use_jitter -> use_jitter:    boolean    Use noise for sampling  (Constant Jittered sampling)
ID|Lamp|AreaLamp.use_only_shadow -> use_only_shadow:    boolean    Cast shadows only, without illuminating objects
ID|Lamp|AreaLamp.use_shadow -> use_shadow:    boolean    
ID|Lamp|AreaLamp.use_shadow_layer -> use_shadow_layer:    boolean    Objects on the same layers only cast shadows
ID|Lamp|AreaLamp.use_umbra -> use_umbra:    boolean    Emphasize parts that are fully shadowed (Constant Jittered sampling)
ID|Lamp|PointLamp.compression_threshold -> compression_threshold:    float    Deep shadow map compression threshold
ID|Lamp|PointLamp.falloff_curve -> falloff_curve:    pointer, (read-only)    Custom Lamp Falloff Curve
ID|Lamp|PointLamp.falloff_type -> falloff_type:    enum    Intensity Decay with distance
ID|Lamp|PointLamp.ge_shadow_buffer_type -> ge_shadow_buffer_type:    enum    The shadow mapping algorithm used
ID|Lamp|PointLamp.linear_attenuation -> linear_attenuation:    float    Linear distance attenuation
ID|Lamp|PointLamp.quadratic_attenuation -> quadratic_attenuation:    float    Quadratic distance attenuation
ID|Lamp|PointLamp.shadow_adaptive_threshold -> shadow_adaptive_threshold:    float    Threshold for Adaptive Sampling (Raytraced shadows)
ID|Lamp|PointLamp.shadow_buffer_bias -> shadow_buffer_bias:    float    Shadow buffer sampling bias
ID|Lamp|PointLamp.shadow_buffer_bleed_bias -> shadow_buffer_bleed_bias:    float    Bias for reducing light-bleed on variance shadow maps
ID|Lamp|PointLamp.shadow_buffer_clip_end -> shadow_buffer_clip_end:    float    Shadow map clip end, beyond which objects will not generate shadows
ID|Lamp|PointLamp.shadow_buffer_clip_start -> shadow_buffer_clip_start:    float    Shadow map clip start, below which objects will not generate shadows
ID|Lamp|PointLamp.shadow_buffer_samples -> shadow_buffer_samples:    int    Number of shadow buffer samples
ID|Lamp|PointLamp.shadow_buffer_size -> shadow_buffer_size:    int    Resolution of the shadow buffer, higher values give crisper shadows but use more memory
ID|Lamp|PointLamp.shadow_buffer_soft -> shadow_buffer_soft:    float    Size of shadow buffer sampling area
ID|Lamp|PointLamp.shadow_buffer_type -> shadow_buffer_type:    enum    Type of shadow buffer
ID|Lamp|PointLamp.shadow_color -> shadow_color:    float[3]    Color of shadows cast by the lamp
ID|Lamp|PointLamp.shadow_filter_type -> shadow_filter_type:    enum    Type of shadow filter (Buffer Shadows)
ID|Lamp|PointLamp.shadow_method -> shadow_method:    enum    
ID|Lamp|PointLamp.shadow_ray_sample_method -> shadow_ray_sample_method:    enum    Method for generating shadow samples: Adaptive QMC is fastest, Constant QMC is less noisy but slower
ID|Lamp|PointLamp.shadow_ray_samples -> shadow_ray_samples:    int    Number of samples taken extra (samples x samples)
ID|Lamp|PointLamp.shadow_sample_buffers -> shadow_sample_buffers:    enum    Number of shadow buffers to render for better AA, this increases memory usage
ID|Lamp|PointLamp.shadow_soft_size -> shadow_soft_size:    float    Light size for ray shadow sampling (Raytraced shadows)
ID|Lamp|PointLamp.use_auto_clip_end -> use_auto_clip_end:    boolean    Automatic calculation of clipping-end, based on visible vertices
ID|Lamp|PointLamp.use_auto_clip_start -> use_auto_clip_start:    boolean    Automatic calculation of clipping-start, based on visible vertices
ID|Lamp|PointLamp.use_only_shadow -> use_only_shadow:    boolean    Cast shadows only, without illuminating objects
ID|Lamp|PointLamp.use_shadow -> use_shadow:    boolean    
ID|Lamp|PointLamp.use_shadow_layer -> use_shadow_layer:    boolean    Objects on the same layers only cast shadows
ID|Lamp|PointLamp.use_sphere -> use_sphere:    boolean    Set light intensity to zero beyond lamp distance
ID|Lamp|SpotLamp.compression_threshold -> compression_threshold:    float    Deep shadow map compression threshold
ID|Lamp|SpotLamp.falloff_curve -> falloff_curve:    pointer, (read-only)    Custom Lamp Falloff Curve
ID|Lamp|SpotLamp.falloff_type -> falloff_type:    enum    Intensity Decay with distance
ID|Lamp|SpotLamp.ge_shadow_buffer_type -> ge_shadow_buffer_type:    enum    The shadow mapping algorithm used
ID|Lamp|SpotLamp.halo_intensity -> halo_intensity:    float    Brightness of the spotlight's halo cone
ID|Lamp|SpotLamp.halo_step -> halo_step:    int    Volumetric halo sampling frequency
ID|Lamp|SpotLamp.linear_attenuation -> linear_attenuation:    float    Linear distance attenuation
ID|Lamp|SpotLamp.quadratic_attenuation -> quadratic_attenuation:    float    Quadratic distance attenuation
ID|Lamp|SpotLamp.shadow_adaptive_threshold -> shadow_adaptive_threshold:    float    Threshold for Adaptive Sampling (Raytraced shadows)
ID|Lamp|SpotLamp.shadow_buffer_bias -> shadow_buffer_bias:    float    Shadow buffer sampling bias
ID|Lamp|SpotLamp.shadow_buffer_bleed_bias -> shadow_buffer_bleed_bias:    float    Bias for reducing light-bleed on variance shadow maps
ID|Lamp|SpotLamp.shadow_buffer_clip_end -> shadow_buffer_clip_end:    float    Shadow map clip end, beyond which objects will not generate shadows
ID|Lamp|SpotLamp.shadow_buffer_clip_start -> shadow_buffer_clip_start:    float    Shadow map clip start, below which objects will not generate shadows
ID|Lamp|SpotLamp.shadow_buffer_samples -> shadow_buffer_samples:    int    Number of shadow buffer samples
ID|Lamp|SpotLamp.shadow_buffer_size -> shadow_buffer_size:    int    Resolution of the shadow buffer, higher values give crisper shadows but use more memory
ID|Lamp|SpotLamp.shadow_buffer_soft -> shadow_buffer_soft:    float    Size of shadow buffer sampling area
ID|Lamp|SpotLamp.shadow_buffer_type -> shadow_buffer_type:    enum    Type of shadow buffer
ID|Lamp|SpotLamp.shadow_color -> shadow_color:    float[3]    Color of shadows cast by the lamp
ID|Lamp|SpotLamp.shadow_filter_type -> shadow_filter_type:    enum    Type of shadow filter (Buffer Shadows)
ID|Lamp|SpotLamp.shadow_method -> shadow_method:    enum    
ID|Lamp|SpotLamp.shadow_ray_sample_method -> shadow_ray_sample_method:    enum    Method for generating shadow samples: Adaptive QMC is fastest, Constant QMC is less noisy but slower
ID|Lamp|SpotLamp.shadow_ray_samples -> shadow_ray_samples:    int    Number of samples taken extra (samples x samples)
ID|Lamp|SpotLamp.shadow_sample_buffers -> shadow_sample_buffers:    enum    Number of shadow buffers to render for better AA, this increases memory usage
ID|Lamp|SpotLamp.shadow_soft_size -> shadow_soft_size:    float    Light size for ray shadow sampling (Raytraced shadows)
ID|Lamp|SpotLamp.show_cone -> show_cone:    boolean    Draw transparent cone in 3D view to visualize which objects are contained in it
ID|Lamp|SpotLamp.spot_blend -> spot_blend:    float    The softness of the spotlight edge
ID|Lamp|SpotLamp.spot_size -> spot_size:    float    Angle of the spotlight beam
ID|Lamp|SpotLamp.use_auto_clip_end -> use_auto_clip_end:    boolean    Automatic calculation of clipping-end, based on visible vertices
ID|Lamp|SpotLamp.use_auto_clip_start -> use_auto_clip_start:    boolean    Automatic calculation of clipping-start, based on visible vertices
ID|Lamp|SpotLamp.use_halo -> use_halo:    boolean    Render spotlight with a volumetric halo
ID|Lamp|SpotLamp.use_only_shadow -> use_only_shadow:    boolean    Cast shadows only, without illuminating objects
ID|Lamp|SpotLamp.use_shadow -> use_shadow:    boolean    
ID|Lamp|SpotLamp.use_shadow_layer -> use_shadow_layer:    boolean    Objects on the same layers only cast shadows
ID|Lamp|SpotLamp.use_sphere -> use_sphere:    boolean    Set light intensity to zero beyond lamp distance
ID|Lamp|SpotLamp.use_square -> use_square:    boolean    Cast a square spot light shape
ID|Lamp|SunLamp.compression_threshold -> compression_threshold:    float    Deep shadow map compression threshold
ID|Lamp|SunLamp.ge_shadow_buffer_type -> ge_shadow_buffer_type:    enum    The shadow mapping algorithm used
ID|Lamp|SunLamp.shadow_adaptive_threshold -> shadow_adaptive_threshold:    float    Threshold for Adaptive Sampling (Raytraced shadows)
ID|Lamp|SunLamp.shadow_buffer_bias -> shadow_buffer_bias:    float    Shadow buffer sampling bias
ID|Lamp|SunLamp.shadow_buffer_bleed_bias -> shadow_buffer_bleed_bias:    float    Bias for reducing light-bleed on variance shadow maps
ID|Lamp|SunLamp.shadow_buffer_clip_end -> shadow_buffer_clip_end:    float    Shadow map clip end, beyond which objects will not generate shadows
ID|Lamp|SunLamp.shadow_buffer_clip_start -> shadow_buffer_clip_start:    float    Shadow map clip start, below which objects will not generate shadows
ID|Lamp|SunLamp.shadow_buffer_samples -> shadow_buffer_samples:    int    Number of shadow buffer samples
ID|Lamp|SunLamp.shadow_buffer_size -> shadow_buffer_size:    int    Resolution of the shadow buffer, higher values give crisper shadows but use more memory
ID|Lamp|SunLamp.shadow_buffer_soft -> shadow_buffer_soft:    float    Size of shadow buffer sampling area
ID|Lamp|SunLamp.shadow_buffer_type -> shadow_buffer_type:    enum    Type of shadow buffer
ID|Lamp|SunLamp.shadow_color -> shadow_color:    float[3]    Color of shadows cast by the lamp
ID|Lamp|SunLamp.shadow_filter_type -> shadow_filter_type:    enum    Type of shadow filter (Buffer Shadows)
ID|Lamp|SunLamp.shadow_frustum_size -> shadow_frustum_size:    float    Size of the frustum used for creating the shadow map
ID|Lamp|SunLamp.shadow_method -> shadow_method:    enum    
ID|Lamp|SunLamp.shadow_ray_sample_method -> shadow_ray_sample_method:    enum    Method for generating shadow samples: Adaptive QMC is fastest, Constant QMC is less noisy but slower
ID|Lamp|SunLamp.shadow_ray_samples -> shadow_ray_samples:    int    Number of samples taken extra (samples x samples)
ID|Lamp|SunLamp.shadow_sample_buffers -> shadow_sample_buffers:    enum    Number of shadow buffers to render for better AA, this increases memory usage
ID|Lamp|SunLamp.shadow_soft_size -> shadow_soft_size:    float    Light size for ray shadow sampling (Raytraced shadows)
ID|Lamp|SunLamp.sky -> sky:    pointer, (read-only)    Sky related settings for sun lamps
ID|Lamp|SunLamp.use_auto_clip_end -> use_auto_clip_end:    boolean    Automatic calculation of clipping-end, based on visible vertices
ID|Lamp|SunLamp.use_auto_clip_start -> use_auto_clip_start:    boolean    Automatic calculation of clipping-start, based on visible vertices
ID|Lamp|SunLamp.use_only_shadow -> use_only_shadow:    boolean    Cast shadows only, without illuminating objects
ID|Lamp|SunLamp.use_shadow -> use_shadow:    boolean    
ID|Lamp|SunLamp.use_shadow_layer -> use_shadow_layer:    boolean    Objects on the same layers only cast shadows
ID|Lattice.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|Lattice.interpolation_type_u -> interpolation_type_u:    enum    
ID|Lattice.interpolation_type_v -> interpolation_type_v:    enum    
ID|Lattice.interpolation_type_w -> interpolation_type_w:    enum    
ID|Lattice.is_editmode -> is_editmode:    boolean, (read-only)    True when used in editmode
ID|Lattice.points -> points:    collection, (read-only)    Points of the lattice
ID|Lattice.points_u -> points_u:    int    Point in U direction (can't be changed when there are shape keys)
ID|Lattice.points_v -> points_v:    int    Point in V direction (can't be changed when there are shape keys)
ID|Lattice.points_w -> points_w:    int    Point in W direction (can't be changed when there are shape keys)
ID|Lattice.shape_keys -> shape_keys:    pointer, (read-only)    
ID|Lattice.use_outside -> use_outside:    boolean    Only draw, and take into account, the outer vertices
ID|Lattice.vertex_group -> vertex_group:    string    Vertex group to apply the influence of the lattice
ID|Library.filepath -> filepath:    string    Path to the library .blend file
ID|Library.parent -> parent:    pointer, (read-only)    
ID|Mask.active_layer_index -> active_layer_index:    int    Index of active layer in list of all mask's layers
ID|Mask.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|Mask.frame_end -> frame_end:    int    Final frame of the mask (used for sequencer)
ID|Mask.frame_start -> frame_start:    int    First frame of the mask (used for sequencer)
ID|Mask.layers -> layers:    collection, (read-only)    Collection of layers which defines this mask
ID|Material.active_node_material -> active_node_material:    pointer    Active node material
ID|Material.active_texture -> active_texture:    pointer    Active texture slot being displayed
ID|Material.active_texture_index -> active_texture_index:    int    Index of active texture slot
ID|Material.alpha -> alpha:    float    Alpha transparency of the material
ID|Material.ambient -> ambient:    float    Amount of global ambient color the material receives
ID|Material.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|Material.cycles -> cycles:    pointer, (read-only)    Cycles material settings
ID|Material.darkness -> darkness:    float    Minnaert darkness
ID|Material.diffuse_color -> diffuse_color:    float[3]    Diffuse color of the material
ID|Material.diffuse_fresnel -> diffuse_fresnel:    float    Power of Fresnel
ID|Material.diffuse_fresnel_factor -> diffuse_fresnel_factor:    float    Blending factor of Fresnel
ID|Material.diffuse_intensity -> diffuse_intensity:    float    Amount of diffuse reflection
ID|Material.diffuse_ramp -> diffuse_ramp:    pointer, (read-only)    Color ramp used to affect diffuse shading
ID|Material.diffuse_ramp_blend -> diffuse_ramp_blend:    enum    Blending method of the ramp and the diffuse color
ID|Material.diffuse_ramp_factor -> diffuse_ramp_factor:    float    Blending factor (also uses alpha in Colorband)
ID|Material.diffuse_ramp_input -> diffuse_ramp_input:    enum    How the ramp maps on the surface
ID|Material.diffuse_shader -> diffuse_shader:    enum    
ID|Material.diffuse_toon_size -> diffuse_toon_size:    float    Size of diffuse toon area
ID|Material.diffuse_toon_smooth -> diffuse_toon_smooth:    float    Smoothness of diffuse toon area
ID|Material.emit -> emit:    float    Amount of light to emit
ID|Material.game_settings -> game_settings:    pointer, (read-only)    Game material settings
ID|Material.halo -> halo:    pointer, (read-only)    Halo settings for the material
ID|Material.invert_z -> invert_z:    boolean    Render material's faces with an inverted Z buffer (scanline only)
ID|Material.light_group -> light_group:    pointer    Limit lighting to lamps in this Group
ID|Material.mirror_color -> mirror_color:    float[3]    Mirror color of the material
ID|Material.node_tree -> node_tree:    pointer, (read-only)    Node tree for node based materials
ID|Material.offset_z -> offset_z:    float    Give faces an artificial offset in the Z buffer for Z transparency
ID|Material.pass_index -> pass_index:    int    Index number for the IndexMA render pass
ID|Material.physics -> physics:    pointer, (read-only)    Game physics settings
ID|Material.preview_render_type -> preview_render_type:    enum    Type of preview render
ID|Material.raytrace_mirror -> raytrace_mirror:    pointer, (read-only)    Raytraced reflection settings for the material
ID|Material.raytrace_transparency -> raytrace_transparency:    pointer, (read-only)    Raytraced transparency settings for the material
ID|Material.roughness -> roughness:    float    Oren-Nayar Roughness
ID|Material.shadow_buffer_bias -> shadow_buffer_bias:    float    Factor to multiply shadow buffer bias with (0 is ignore)
ID|Material.shadow_cast_alpha -> shadow_cast_alpha:    float    Shadow casting alpha, in use for Irregular and Deep shadow buffer
ID|Material.shadow_only_type -> shadow_only_type:    enum    How to draw shadows
ID|Material.shadow_ray_bias -> shadow_ray_bias:    float    Shadow raytracing bias to prevent terminator problems on shadow boundary
ID|Material.specular_alpha -> specular_alpha:    float    Alpha transparency for specular areas
ID|Material.specular_color -> specular_color:    float[3]    Specular color of the material
ID|Material.specular_hardness -> specular_hardness:    int    How hard (sharp) the specular reflection is
ID|Material.specular_intensity -> specular_intensity:    float    How intense (bright) the specular reflection is
ID|Material.specular_ior -> specular_ior:    float    Specular index of refraction
ID|Material.specular_ramp -> specular_ramp:    pointer, (read-only)    Color ramp used to affect specular shading
ID|Material.specular_ramp_blend -> specular_ramp_blend:    enum    Blending method of the ramp and the specular color
ID|Material.specular_ramp_factor -> specular_ramp_factor:    float    Blending factor (also uses alpha in Colorband)
ID|Material.specular_ramp_input -> specular_ramp_input:    enum    How the ramp maps on the surface
ID|Material.specular_shader -> specular_shader:    enum    
ID|Material.specular_slope -> specular_slope:    float    The standard deviation of surface slope
ID|Material.specular_toon_size -> specular_toon_size:    float    Size of specular toon area
ID|Material.specular_toon_smooth -> specular_toon_smooth:    float    Smoothness of specular toon area
ID|Material.strand -> strand:    pointer, (read-only)    Strand settings for the material
ID|Material.subsurface_scattering -> subsurface_scattering:    pointer, (read-only)    Subsurface scattering settings for the material
ID|Material.texture_slots -> texture_slots:    collection, (read-only)    Texture slots defining the mapping and influence of textures
ID|Material.translucency -> translucency:    float    Amount of diffuse shading on the back side
ID|Material.transparency_method -> transparency_method:    enum    Method to use for rendering transparency
ID|Material.type -> type:    enum    Material type defining how the object is rendered
ID|Material.use_cast_approximate -> use_cast_approximate:    boolean    Allow this material to cast shadows when using approximate ambient occlusion
ID|Material.use_cast_buffer_shadows -> use_cast_buffer_shadows:    boolean    Allow this material to cast shadows from shadow buffer lamps
ID|Material.use_cast_shadows_only -> use_cast_shadows_only:    boolean    Make objects with this material appear invisible (not rendered), only casting shadows
ID|Material.use_cubic -> use_cubic:    boolean    Use cubic interpolation for diffuse values, for smoother transitions
ID|Material.use_diffuse_ramp -> use_diffuse_ramp:    boolean    Toggle diffuse ramp operations
ID|Material.use_face_texture -> use_face_texture:    boolean    Replace the object's base color with color from UV map image textures
ID|Material.use_face_texture_alpha -> use_face_texture_alpha:    boolean    Replace the object's base alpha value with alpha from UV map image textures
ID|Material.use_full_oversampling -> use_full_oversampling:    boolean    Force this material to render full shading/textures for all anti-aliasing samples
ID|Material.use_light_group_exclusive -> use_light_group_exclusive:    boolean    Material uses the light group exclusively - these lamps are excluded from other scene lighting
ID|Material.use_light_group_local -> use_light_group_local:    boolean    When linked in, material uses local light group with the same name
ID|Material.use_mist -> use_mist:    boolean    Use mist with this material (in world settings)
ID|Material.use_nodes -> use_nodes:    boolean    Use shader nodes to render the material
ID|Material.use_object_color -> use_object_color:    boolean    Modulate the result with a per-object color
ID|Material.use_only_shadow -> use_only_shadow:    boolean    Render shadows as the material's alpha value, making the material transparent except for shadowed areas
ID|Material.use_ray_shadow_bias -> use_ray_shadow_bias:    boolean    Prevent raytraced shadow errors on surfaces with smooth shaded normals (terminator problem)
ID|Material.use_raytrace -> use_raytrace:    boolean    Include this material and geometry that uses it in raytracing calculations
ID|Material.use_shadeless -> use_shadeless:    boolean    Make this material insensitive to light or shadow
ID|Material.use_shadows -> use_shadows:    boolean    Allow this material to receive shadows
ID|Material.use_sky -> use_sky:    boolean    Render this material with zero alpha, with sky background in place (scanline only)
ID|Material.use_specular_ramp -> use_specular_ramp:    boolean    Toggle specular ramp operations
ID|Material.use_tangent_shading -> use_tangent_shading:    boolean    Use the material's tangent vector instead of the normal for shading - for anisotropic shading effects
ID|Material.use_textures -> use_textures:    boolean[18]    Enable/Disable each texture
ID|Material.use_transparency -> use_transparency:    boolean    Render material as transparent
ID|Material.use_transparent_shadows -> use_transparent_shadows:    boolean    Allow this object to receive transparent shadows cast through other objects
ID|Material.use_uv_project -> use_uv_project:    boolean    Use to ensure UV interpolation is correct for camera projections (use with UV project modifier)
ID|Material.use_vertex_color_light -> use_vertex_color_light:    boolean    Add vertex colors as additional lighting
ID|Material.use_vertex_color_paint -> use_vertex_color_paint:    boolean    Replace object base color with vertex colors (multiply with 'texture face' face assigned textures)
ID|Material.volume -> volume:    pointer, (read-only)    Volume settings for the material
ID|Mesh.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|Mesh.auto_smooth_angle -> auto_smooth_angle:    float    Maximum angle between face normals that 'Auto Smooth' will operate on
ID|Mesh.auto_texspace -> auto_texspace:    boolean    Adjust active object's texture space automatically when transforming object
ID|Mesh.cycles -> cycles:    pointer, (read-only)    Cycles mesh settings
ID|Mesh.edges -> edges:    collection, (read-only)    Edges of the mesh
ID|Mesh.is_editmode -> is_editmode:    boolean, (read-only)    True when used in editmode
ID|Mesh.loops -> loops:    collection, (read-only)    Loops of the mesh (polygon corners)
ID|Mesh.materials -> materials:    collection, (read-only)    
ID|Mesh.polygon_layers_float -> polygon_layers_float:    collection, (read-only)    
ID|Mesh.polygon_layers_int -> polygon_layers_int:    collection, (read-only)    
ID|Mesh.polygon_layers_string -> polygon_layers_string:    collection, (read-only)    
ID|Mesh.polygons -> polygons:    collection, (read-only)    Polygons of the mesh
ID|Mesh.shape_keys -> shape_keys:    pointer, (read-only)    
ID|Mesh.show_double_sided -> show_double_sided:    boolean    Render/display the mesh with double or single sided lighting
ID|Mesh.show_edge_bevel_weight -> show_edge_bevel_weight:    boolean    Display weights created for the Bevel modifier
ID|Mesh.show_edge_crease -> show_edge_crease:    boolean    Display creases created for subsurf weighting
ID|Mesh.show_edge_seams -> show_edge_seams:    boolean    Display UV unwrapping seams
ID|Mesh.show_edge_sharp -> show_edge_sharp:    boolean    Display sharp edges, used with the EdgeSplit modifier
ID|Mesh.show_edges -> show_edges:    boolean    Display selected edges using highlights in the 3D view and UV editor
ID|Mesh.show_extra_edge_angle -> show_extra_edge_angle:    boolean    Display selected edge angle, using global values when set in the transform panel
ID|Mesh.show_extra_edge_length -> show_extra_edge_length:    boolean    Display selected edge lengths, using global values when set in the transform panel
ID|Mesh.show_extra_face_angle -> show_extra_face_angle:    boolean    Display the angles in the selected edges, using global values when set in the transform panel
ID|Mesh.show_extra_face_area -> show_extra_face_area:    boolean    Display the area of selected faces, using global values when set in the transform panel
ID|Mesh.show_extra_indices -> show_extra_indices:    boolean    Display the index numbers of selected vertices, edges, and faces
ID|Mesh.show_faces -> show_faces:    boolean    Display all faces as shades in the 3D view and UV editor
ID|Mesh.show_freestyle_edge_marks -> show_freestyle_edge_marks:    boolean    Display Freestyle edge marks, used with the Freestyle renderer
ID|Mesh.show_freestyle_face_marks -> show_freestyle_face_marks:    boolean    Display Freestyle face marks, used with the Freestyle renderer
ID|Mesh.show_normal_face -> show_normal_face:    boolean    Display face normals as lines
ID|Mesh.show_normal_vertex -> show_normal_vertex:    boolean    Display vertex normals as lines
ID|Mesh.show_statvis -> show_statvis:    boolean    Display statistical information about the mesh
ID|Mesh.show_weight -> show_weight:    boolean    Draw weights in editmode
ID|Mesh.skin_vertices -> skin_vertices:    collection, (read-only)    All skin vertices
ID|Mesh.tessface_uv_textures -> tessface_uv_textures:    collection, (read-only)    All UV maps for tessellated faces (read-only, for use by renderers)
ID|Mesh.tessface_vertex_colors -> tessface_vertex_colors:    collection, (read-only)    All tessellated face colors (read-only, for use by renderers)
ID|Mesh.tessfaces -> tessfaces:    collection, (read-only)    Tessellated faces of the mesh (derived from polygons)
ID|Mesh.texco_mesh -> texco_mesh:    pointer    Derive texture coordinates from another mesh
ID|Mesh.texspace_location -> texspace_location:    float[3]    Texture space location
ID|Mesh.texspace_size -> texspace_size:    float[3]    Texture space size
ID|Mesh.texture_mesh -> texture_mesh:    pointer    Use another mesh for texture indices (vertex indices must be aligned)
ID|Mesh.total_edge_sel -> total_edge_sel:    int, (read-only)    Selected edge count in editmode
ID|Mesh.total_face_sel -> total_face_sel:    int, (read-only)    Selected face count in editmode
ID|Mesh.total_vert_sel -> total_vert_sel:    int, (read-only)    Selected vertex count in editmode
ID|Mesh.use_auto_smooth -> use_auto_smooth:    boolean    Treat all set-smoothed faces with angles less than the specified angle as 'smooth' during render
ID|Mesh.use_auto_texspace -> use_auto_texspace:    boolean    Adjust active object's texture space automatically when transforming object
ID|Mesh.use_customdata_edge_bevel -> use_customdata_edge_bevel:    boolean    
ID|Mesh.use_customdata_edge_crease -> use_customdata_edge_crease:    boolean    
ID|Mesh.use_customdata_vertex_bevel -> use_customdata_vertex_bevel:    boolean    
ID|Mesh.use_mirror_topology -> use_mirror_topology:    boolean    Use topology based mirroring (for when both sides of mesh have matching, unique topology)
ID|Mesh.use_mirror_x -> use_mirror_x:    boolean    X Axis mirror editing
ID|Mesh.use_paint_mask -> use_paint_mask:    boolean    Face selection masking for painting
ID|Mesh.use_paint_mask_vertex -> use_paint_mask_vertex:    boolean    Vertex selection masking for painting (weight paint only)
ID|Mesh.uv_layer_clone -> uv_layer_clone:    pointer    UV loop layer to be used as cloning source
ID|Mesh.uv_layer_clone_index -> uv_layer_clone_index:    int    Clone UV loop layer index
ID|Mesh.uv_layer_stencil -> uv_layer_stencil:    pointer    UV loop layer to mask the painted area
ID|Mesh.uv_layer_stencil_index -> uv_layer_stencil_index:    int    Mask UV loop layer index
ID|Mesh.uv_layers -> uv_layers:    collection, (read-only)    All UV loop layers
ID|Mesh.uv_texture_clone -> uv_texture_clone:    pointer    UV map to be used as cloning source
ID|Mesh.uv_texture_clone_index -> uv_texture_clone_index:    int    Clone UV map index
ID|Mesh.uv_texture_stencil -> uv_texture_stencil:    pointer    UV map to mask the painted area
ID|Mesh.uv_texture_stencil_index -> uv_texture_stencil_index:    int    Mask UV map index
ID|Mesh.uv_textures -> uv_textures:    collection, (read-only)    All UV maps
ID|Mesh.vertex_colors -> vertex_colors:    collection, (read-only)    All vertex colors
ID|Mesh.vertices -> vertices:    collection, (read-only)    Vertices of the mesh
ID|MetaBall.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|MetaBall.cycles -> cycles:    pointer, (read-only)    Cycles mesh settings
ID|MetaBall.elements -> elements:    collection, (read-only)    Meta elements
ID|MetaBall.is_editmode -> is_editmode:    boolean, (read-only)    True when used in editmode
ID|MetaBall.materials -> materials:    collection, (read-only)    
ID|MetaBall.render_resolution -> render_resolution:    float    Polygonization resolution in rendering
ID|MetaBall.resolution -> resolution:    float    Polygonization resolution in the 3D viewport
ID|MetaBall.texspace_location -> texspace_location:    float[3]    Texture space location
ID|MetaBall.texspace_size -> texspace_size:    float[3]    Texture space size
ID|MetaBall.threshold -> threshold:    float    Influence of meta elements
ID|MetaBall.update_method -> update_method:    enum    Metaball edit update behavior
ID|MetaBall.use_auto_texspace -> use_auto_texspace:    boolean    Adjust active object's texture space automatically when transforming object
ID|MovieClip.colorspace_settings -> colorspace_settings:    pointer, (read-only)    Input color space settings
ID|MovieClip.display_aspect -> display_aspect:    float[2]    Display Aspect for this clip, does not affect rendering
ID|MovieClip.filepath -> filepath:    string    Filename of the movie or sequence file
ID|MovieClip.frame_duration -> frame_duration:    int, (read-only)    Detected duration of movie clip in frames
ID|MovieClip.frame_offset -> frame_offset:    int    Offset of footage first frame relative to it's file name (affects only how footage is loading, does not change data associated with a clip)
ID|MovieClip.frame_start -> frame_start:    int    Global scene frame number at which this movie starts playing (affects all data associated with a clip)
ID|MovieClip.grease_pencil -> grease_pencil:    pointer    Grease pencil data for this movie clip
ID|MovieClip.proxy -> proxy:    pointer, (read-only)    
ID|MovieClip.size -> size:    int[2], (read-only)    Width and height in pixels, zero when image data cant be loaded
ID|MovieClip.source -> source:    enum, (read-only)    Where the clip comes from
ID|MovieClip.tracking -> tracking:    pointer, (read-only)    
ID|MovieClip.use_proxy -> use_proxy:    boolean    Use a preview proxy and/or timecode index for this clip
ID|MovieClip.use_proxy_custom_directory -> use_proxy_custom_directory:    boolean    Create proxy images in a custom directory (default is movie location)
ID|NodeTree.active_input -> active_input:    int    Index of the active input
ID|NodeTree.active_output -> active_output:    int    Index of the active output
ID|NodeTree.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|NodeTree.bl_description -> bl_description:    string    
ID|NodeTree.bl_icon -> bl_icon:    enum    The node tree icon
ID|NodeTree.bl_idname -> bl_idname:    string    
ID|NodeTree.bl_label -> bl_label:    string    The node tree label
ID|NodeTree.grease_pencil -> grease_pencil:    pointer    Grease Pencil datablock
ID|NodeTree.inputs -> inputs:    collection, (read-only)    Node tree inputs
ID|NodeTree.links -> links:    collection, (read-only)    
ID|NodeTree.nodes -> nodes:    collection, (read-only)    
ID|NodeTree.outputs -> outputs:    collection, (read-only)    Node tree outputs
ID|NodeTree.type -> type:    enum, (read-only)    Node Tree type (deprecated, bl_idname is the actual node tree type identifier)
ID|NodeTree.view_center -> view_center:    float[2], (read-only)    
ID|NodeTree|CompositorNodeTree.chunk_size -> chunk_size:    enum    Max size of a tile (smaller values gives better distribution of multiple threads, but more overhead)
ID|NodeTree|CompositorNodeTree.edit_quality -> edit_quality:    enum    Quality when editing
ID|NodeTree|CompositorNodeTree.render_quality -> render_quality:    enum    Quality when rendering
ID|NodeTree|CompositorNodeTree.use_groupnode_buffer -> use_groupnode_buffer:    boolean    Enable buffering of group nodes
ID|NodeTree|CompositorNodeTree.use_opencl -> use_opencl:    boolean    Enable GPU calculations
ID|NodeTree|CompositorNodeTree.use_two_pass -> use_two_pass:    boolean    Use two pass execution during editing: first calculate fast nodes, second pass calculate all nodes
ID|NodeTree|CompositorNodeTree.use_viewer_border -> use_viewer_border:    boolean    Use boundaries for viewer nodes and composite backdrop
ID|Object.active_material -> active_material:    pointer    Active material being displayed
ID|Object.active_material_index -> active_material_index:    int    Index of active material slot
ID|Object.active_shape_key -> active_shape_key:    pointer, (read-only)    Current shape key
ID|Object.active_shape_key_index -> active_shape_key_index:    int    Current shape key index
ID|Object.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|Object.animation_visualization -> animation_visualization:    pointer, (read-only)    Animation data for this datablock
ID|Object.bound_box -> bound_box:    float[24], (read-only)    Object's bounding box in object-space coordinates, all values are -1.0 when not available
ID|Object.collision -> collision:    pointer, (read-only)    Settings for using the object as a collider in physics simulation
ID|Object.color -> color:    float[4]    Object color and alpha, used when faces have the ObColor mode enabled
ID|Object.constraints -> constraints:    collection, (read-only)    Constraints affecting the transformation of the object
ID|Object.cycles_visibility -> cycles_visibility:    pointer, (read-only)    Cycles visibility settings
ID|Object.data -> data:    pointer    Object data
ID|Object.delta_location -> delta_location:    float[3]    Extra translation added to the location of the object
ID|Object.delta_rotation_euler -> delta_rotation_euler:    float[3]    Extra rotation added to the rotation of the object (when using Euler rotations)
ID|Object.delta_rotation_quaternion -> delta_rotation_quaternion:    float[4]    Extra rotation added to the rotation of the object (when using Quaternion rotations)
ID|Object.delta_scale -> delta_scale:    float[3]    Extra scaling added to the scale of the object
ID|Object.dimensions -> dimensions:    float[3]    Absolute bounding box dimensions of the object
ID|Object.draw_bounds_type -> draw_bounds_type:    enum    Object boundary display type
ID|Object.draw_type -> draw_type:    enum    Maximum draw type to display object with in viewport
ID|Object.dupli_faces_scale -> dupli_faces_scale:    float    Scale the DupliFace objects
ID|Object.dupli_frames_end -> dupli_frames_end:    int    End frame for DupliFrames
ID|Object.dupli_frames_off -> dupli_frames_off:    int    Recurring frames to exclude from the Dupliframes
ID|Object.dupli_frames_on -> dupli_frames_on:    int    Number of frames to use between DupOff frames
ID|Object.dupli_frames_start -> dupli_frames_start:    int    Start frame for DupliFrames
ID|Object.dupli_group -> dupli_group:    pointer    Instance an existing group
ID|Object.dupli_list -> dupli_list:    collection, (read-only)    Object duplis
ID|Object.dupli_type -> dupli_type:    enum    If not None, object duplication method to use
ID|Object.empty_draw_size -> empty_draw_size:    float    Size of display for empties in the viewport
ID|Object.empty_draw_type -> empty_draw_type:    enum    Viewport display style for empties
ID|Object.empty_image_offset -> empty_image_offset:    float[2]    Origin offset distance
ID|Object.field -> field:    pointer, (read-only)    Settings for using the object as a field in physics simulation
ID|Object.game -> game:    pointer, (read-only)    Game engine related settings for the object
ID|Object.grease_pencil -> grease_pencil:    pointer    Grease Pencil datablock
ID|Object.hide -> hide:    boolean    Restrict visibility in the viewport
ID|Object.hide_render -> hide_render:    boolean    Restrict renderability
ID|Object.hide_select -> hide_select:    boolean    Restrict selection in the viewport
ID|Object.is_duplicator -> is_duplicator:    boolean, (read-only)    
ID|Object.layers -> layers:    boolean[20]    Layers the object is on
ID|Object.layers_local_view -> layers_local_view:    boolean[8], (read-only)    3D local view layers the object is on
ID|Object.location -> location:    float[3]    Location of the object
ID|Object.lock_location -> lock_location:    boolean[3]    Lock editing of location in the interface
ID|Object.lock_rotation -> lock_rotation:    boolean[3]    Lock editing of rotation in the interface
ID|Object.lock_rotation_w -> lock_rotation_w:    boolean    Lock editing of 'angle' component of four-component rotations in the interface
ID|Object.lock_rotations_4d -> lock_rotations_4d:    boolean    Lock editing of four component rotations by components (instead of as Eulers)
ID|Object.lock_scale -> lock_scale:    boolean[3]    Lock editing of scale in the interface
ID|Object.lod_levels -> lod_levels:    collection, (read-only)    A collection of detail levels to automatically switch between
ID|Object.material_slots -> material_slots:    collection, (read-only)    Material slots in the object
ID|Object.matrix_basis -> matrix_basis:    float[16]    Matrix access to location, rotation and scale (including deltas), before constraints and parenting are applied
ID|Object.matrix_local -> matrix_local:    float[16]    Parent relative transformation matrix
ID|Object.matrix_parent_inverse -> matrix_parent_inverse:    float[16]    Inverse of object's parent matrix at time of parenting
ID|Object.matrix_world -> matrix_world:    float[16]    Worldspace transformation matrix
ID|Object.mode -> mode:    enum, (read-only)    Object interaction mode
ID|Object.modifiers -> modifiers:    collection, (read-only)    Modifiers affecting the geometric data of the object
ID|Object.motion_path -> motion_path:    pointer, (read-only)    Motion Path for this element
ID|Object.parent -> parent:    pointer    Parent Object
ID|Object.parent_bone -> parent_bone:    string    Name of parent bone in case of a bone parenting relation
ID|Object.parent_type -> parent_type:    enum    Type of parent relation
ID|Object.parent_vertices -> parent_vertices:    int[3]    Indices of vertices in case of a vertex parenting relation
ID|Object.particle_systems -> particle_systems:    collection, (read-only)    Particle systems emitted from the object
ID|Object.pass_index -> pass_index:    int    Index number for the IndexOB render pass
ID|Object.pose -> pose:    pointer, (read-only)    Current pose for armatures
ID|Object.pose_library -> pose_library:    pointer    Action used as a pose library for armatures
ID|Object.proxy -> proxy:    pointer, (read-only)    Library object this proxy object controls
ID|Object.proxy_group -> proxy_group:    pointer, (read-only)    Library group duplicator object this proxy object controls
ID|Object.rigid_body -> rigid_body:    pointer, (read-only)    Settings for rigid body simulation
ID|Object.rigid_body_constraint -> rigid_body_constraint:    pointer, (read-only)    Constraint constraining rigid bodies
ID|Object.rotation_axis_angle -> rotation_axis_angle:    float[4]    Angle of Rotation for Axis-Angle rotation representation
ID|Object.rotation_euler -> rotation_euler:    float[3]    Rotation in Eulers
ID|Object.rotation_mode -> rotation_mode:    enum    
ID|Object.rotation_quaternion -> rotation_quaternion:    float[4]    Rotation in Quaternions
ID|Object.scale -> scale:    float[3]    Scaling of the object
ID|Object.select -> select:    boolean    Object selection state
ID|Object.show_all_edges -> show_all_edges:    boolean    Display all edges for mesh objects
ID|Object.show_axis -> show_axis:    boolean    Display the object's origin and axes
ID|Object.show_bounds -> show_bounds:    boolean    Display the object's bounds
ID|Object.show_name -> show_name:    boolean    Display the object's name
ID|Object.show_only_shape_key -> show_only_shape_key:    boolean    Always show the current Shape for this Object
ID|Object.show_texture_space -> show_texture_space:    boolean    Display the object's texture space
ID|Object.show_transparent -> show_transparent:    boolean    Display material transparency in the object (unsupported for duplicator drawing)
ID|Object.show_wire -> show_wire:    boolean    Add the object's wireframe over solid drawing
ID|Object.show_x_ray -> show_x_ray:    boolean    Make the object draw in front of others (unsupported for duplicator drawing)
ID|Object.slow_parent_offset -> slow_parent_offset:    float    Delay in the parent relationship
ID|Object.soft_body -> soft_body:    pointer, (read-only)    Settings for soft body simulation
ID|Object.track_axis -> track_axis:    enum    Axis that points in 'forward' direction (applies to DupliFrame when parent 'Follow' is enabled)
ID|Object.type -> type:    enum, (read-only)    Type of Object
ID|Object.up_axis -> up_axis:    enum    Axis that points in the upward direction (applies to DupliFrame when parent 'Follow' is enabled)
ID|Object.use_dupli_faces_scale -> use_dupli_faces_scale:    boolean    Scale dupli based on face size
ID|Object.use_dupli_frames_speed -> use_dupli_frames_speed:    boolean    Set dupliframes to use the current frame instead of parent curve's evaluation time
ID|Object.use_dupli_vertices_rotation -> use_dupli_vertices_rotation:    boolean    Rotate dupli according to vertex normal
ID|Object.use_dynamic_topology_sculpting -> use_dynamic_topology_sculpting:    boolean, (read-only)    
ID|Object.use_extra_recalc_data -> use_extra_recalc_data:    boolean    Refresh this object's data again on frame changes, dependency graph hack
ID|Object.use_extra_recalc_object -> use_extra_recalc_object:    boolean    Refresh this object again on frame changes, dependency graph hack
ID|Object.use_shape_key_edit_mode -> use_shape_key_edit_mode:    boolean    Apply shape keys in edit mode (for Meshes only)
ID|Object.use_slow_parent -> use_slow_parent:    boolean    Create a delay in the parent relationship (beware: this isn't renderfarm safe and may be invalid after jumping around the timeline)
ID|Object.vertex_groups -> vertex_groups:    collection, (read-only)    Vertex groups of the object
ID|ParticleSettings.active_dupliweight -> active_dupliweight:    pointer, (read-only)    
ID|ParticleSettings.active_dupliweight_index -> active_dupliweight_index:    int    
ID|ParticleSettings.active_texture -> active_texture:    pointer    Active texture slot being displayed
ID|ParticleSettings.active_texture_index -> active_texture_index:    int    Index of active texture slot
ID|ParticleSettings.adaptive_angle -> adaptive_angle:    int    How many degrees path has to curve to make another render segment
ID|ParticleSettings.adaptive_pixel -> adaptive_pixel:    int    How many pixels path has to cover to make another render segment
ID|ParticleSettings.angular_velocity_factor -> angular_velocity_factor:    float    Angular velocity amount (in radians per second)
ID|ParticleSettings.angular_velocity_mode -> angular_velocity_mode:    enum    What axis is used to change particle rotation with time
ID|ParticleSettings.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|ParticleSettings.apply_effector_to_children -> apply_effector_to_children:    boolean    Apply effectors to children
ID|ParticleSettings.apply_guide_to_children -> apply_guide_to_children:    boolean    
ID|ParticleSettings.billboard_align -> billboard_align:    enum    In respect to what the billboards are aligned
ID|ParticleSettings.billboard_animation -> billboard_animation:    enum    How to animate billboard textures
ID|ParticleSettings.billboard_object -> billboard_object:    pointer    Billboards face this object (default is active camera)
ID|ParticleSettings.billboard_offset -> billboard_offset:    float[2]    
ID|ParticleSettings.billboard_offset_split -> billboard_offset_split:    enum    How to offset billboard textures
ID|ParticleSettings.billboard_size -> billboard_size:    float[2]    Scale billboards relative to particle size
ID|ParticleSettings.billboard_tilt -> billboard_tilt:    float    Tilt of the billboards
ID|ParticleSettings.billboard_tilt_random -> billboard_tilt_random:    float    Random tilt of the billboards
ID|ParticleSettings.billboard_uv_split -> billboard_uv_split:    int    Number of rows/columns to split UV coordinates for billboards
ID|ParticleSettings.billboard_velocity_head -> billboard_velocity_head:    float    Scale billboards by velocity
ID|ParticleSettings.billboard_velocity_tail -> billboard_velocity_tail:    float    Scale billboards by velocity
ID|ParticleSettings.boids -> boids:    pointer, (read-only)    
ID|ParticleSettings.branch_threshold -> branch_threshold:    float    Threshold of branching
ID|ParticleSettings.brownian_factor -> brownian_factor:    float    Amount of random, erratic particle movement
ID|ParticleSettings.child_length -> child_length:    float    Length of child paths
ID|ParticleSettings.child_length_threshold -> child_length_threshold:    float    Amount of particles left untouched by child path length
ID|ParticleSettings.child_nbr -> child_nbr:    int    Number of children/parent
ID|ParticleSettings.child_parting_factor -> child_parting_factor:    float    Create parting in the children based on parent strands
ID|ParticleSettings.child_parting_max -> child_parting_max:    float    Maximum root to tip angle (tip distance/root distance for long hair)
ID|ParticleSettings.child_parting_min -> child_parting_min:    float    Minimum root to tip angle (tip distance/root distance for long hair)
ID|ParticleSettings.child_radius -> child_radius:    float    Radius of children around parent
ID|ParticleSettings.child_roundness -> child_roundness:    float    Roundness of children around parent
ID|ParticleSettings.child_size -> child_size:    float    A multiplier for the child particle size
ID|ParticleSettings.child_size_random -> child_size_random:    float    Random variation to the size of the child particles
ID|ParticleSettings.child_type -> child_type:    enum    Create child particles
ID|ParticleSettings.clump_factor -> clump_factor:    float    Amount of clumping
ID|ParticleSettings.clump_shape -> clump_shape:    float    Shape of clumping
ID|ParticleSettings.color_maximum -> color_maximum:    float    Maximum length of the particle color vector
ID|ParticleSettings.count -> count:    int    Total number of particles
ID|ParticleSettings.courant_target -> courant_target:    float    The relative distance a particle can move before requiring more subframes (target Courant number); 0.01-0.3 is the recommended range
ID|ParticleSettings.create_long_hair_children -> create_long_hair_children:    boolean    Calculate children that suit long hair well
ID|ParticleSettings.cycles -> cycles:    pointer, (read-only)    Cycles hair settings
ID|ParticleSettings.damping -> damping:    float    Amount of damping
ID|ParticleSettings.distribution -> distribution:    enum    How to distribute particles on selected element
ID|ParticleSettings.drag_factor -> drag_factor:    float    Amount of air-drag
ID|ParticleSettings.draw_color -> draw_color:    enum    Draw additional particle data as a color
ID|ParticleSettings.draw_method -> draw_method:    enum    How particles are drawn in viewport
ID|ParticleSettings.draw_percentage -> draw_percentage:    int    Percentage of particles to display in 3D view
ID|ParticleSettings.draw_size -> draw_size:    int    Size of particles on viewport in pixels (0=default)
ID|ParticleSettings.draw_step -> draw_step:    int    How many steps paths are drawn with (power of 2)
ID|ParticleSettings.dupli_group -> dupli_group:    pointer    Show Objects in this Group in place of particles
ID|ParticleSettings.dupli_object -> dupli_object:    pointer    Show this Object in place of particles
ID|ParticleSettings.dupli_weights -> dupli_weights:    collection, (read-only)    Weights for all of the objects in the dupli group
ID|ParticleSettings.effect_hair -> effect_hair:    float    Hair stiffness for effectors
ID|ParticleSettings.effector_amount -> effector_amount:    int    How many particles are effectors (0 is all particles)
ID|ParticleSettings.effector_weights -> effector_weights:    pointer, (read-only)    
ID|ParticleSettings.emit_from -> emit_from:    enum    Where to emit particles from
ID|ParticleSettings.factor_random -> factor_random:    float    Give the starting speed a random variation
ID|ParticleSettings.fluid -> fluid:    pointer, (read-only)    
ID|ParticleSettings.force_field_1 -> force_field_1:    pointer, (read-only)    
ID|ParticleSettings.force_field_2 -> force_field_2:    pointer, (read-only)    
ID|ParticleSettings.frame_end -> frame_end:    float    Frame number to stop emitting particles
ID|ParticleSettings.frame_start -> frame_start:    float    Frame number to start emitting particles
ID|ParticleSettings.grid_random -> grid_random:    float    Add random offset to the grid locations
ID|ParticleSettings.grid_resolution -> grid_resolution:    int    The resolution of the particle grid
ID|ParticleSettings.hair_length -> hair_length:    float    Length of the hair
ID|ParticleSettings.hair_step -> hair_step:    int    Number of hair segments
ID|ParticleSettings.hexagonal_grid -> hexagonal_grid:    boolean    Create the grid in a hexagonal pattern
ID|ParticleSettings.integrator -> integrator:    enum    Algorithm used to calculate physics, from the fastest to the most stable/accurate: Midpoint, Euler, Verlet, RK4 (Old)
ID|ParticleSettings.invert_grid -> invert_grid:    boolean    Invert what is considered object and what is not
ID|ParticleSettings.is_fluid -> is_fluid:    boolean, (read-only)    Particles were created by a fluid simulation
ID|ParticleSettings.jitter_factor -> jitter_factor:    float    Amount of jitter applied to the sampling
ID|ParticleSettings.keyed_loops -> keyed_loops:    int    Number of times the keys are looped
ID|ParticleSettings.keys_step -> keys_step:    int    
ID|ParticleSettings.kink -> kink:    enum    Type of periodic offset on the path
ID|ParticleSettings.kink_amplitude -> kink_amplitude:    float    The amplitude of the offset
ID|ParticleSettings.kink_amplitude_clump -> kink_amplitude_clump:    float    How much clump affects kink amplitude
ID|ParticleSettings.kink_axis -> kink_axis:    enum    Which axis to use for offset
ID|ParticleSettings.kink_flat -> kink_flat:    float    How flat the hairs are
ID|ParticleSettings.kink_frequency -> kink_frequency:    float    The frequency of the offset (1/total length)
ID|ParticleSettings.kink_shape -> kink_shape:    float    Adjust the offset to the beginning/end
ID|ParticleSettings.length_random -> length_random:    float    Give path length a random variation
ID|ParticleSettings.lifetime -> lifetime:    float    Life span of the particles
ID|ParticleSettings.lifetime_random -> lifetime_random:    float    Give the particle life a random variation
ID|ParticleSettings.line_length_head -> line_length_head:    float    Length of the line's head
ID|ParticleSettings.line_length_tail -> line_length_tail:    float    Length of the line's tail
ID|ParticleSettings.lock_billboard -> lock_billboard:    boolean    Lock the billboards align axis
ID|ParticleSettings.lock_boids_to_surface -> lock_boids_to_surface:    boolean    Constrain boids to a surface
ID|ParticleSettings.mass -> mass:    float    Mass of the particles
ID|ParticleSettings.material -> material:    int    Index of material slot used for rendering particles
ID|ParticleSettings.material_slot -> material_slot:    enum    Material slot used for rendering particles
ID|ParticleSettings.normal_factor -> normal_factor:    float    Let the surface normal give the particle a starting speed
ID|ParticleSettings.object_align_factor -> object_align_factor:    float[3]    Let the emitter object orientation give the particle a starting speed
ID|ParticleSettings.object_factor -> object_factor:    float    Let the object give the particle a starting speed
ID|ParticleSettings.particle_factor -> particle_factor:    float    Let the target particle give the particle a starting speed
ID|ParticleSettings.particle_size -> particle_size:    float    The size of the particles
ID|ParticleSettings.path_end -> path_end:    float    End time of drawn path
ID|ParticleSettings.path_start -> path_start:    float    Starting time of drawn path
ID|ParticleSettings.phase_factor -> phase_factor:    float    Rotation around the chosen orientation axis
ID|ParticleSettings.phase_factor_random -> phase_factor_random:    float    Randomize rotation around the chosen orientation axis
ID|ParticleSettings.physics_type -> physics_type:    enum    Particle physics type
ID|ParticleSettings.react_event -> react_event:    enum    The event of target particles to react on
ID|ParticleSettings.reactor_factor -> reactor_factor:    float    Let the vector away from the target particle's location give the particle a starting speed
ID|ParticleSettings.regrow_hair -> regrow_hair:    boolean    Regrow hair for each frame
ID|ParticleSettings.render_step -> render_step:    int    How many steps paths are rendered with (power of 2)
ID|ParticleSettings.render_type -> render_type:    enum    How particles are rendered
ID|ParticleSettings.rendered_child_count -> rendered_child_count:    int    Number of children/parent for rendering
ID|ParticleSettings.rotation_factor_random -> rotation_factor_random:    float    Randomize particle orientation
ID|ParticleSettings.rotation_mode -> rotation_mode:    enum    Particle orientation axis (does not affect Explode modifier's results)
ID|ParticleSettings.roughness_1 -> roughness_1:    float    Amount of location dependent rough
ID|ParticleSettings.roughness_1_size -> roughness_1_size:    float    Size of location dependent rough
ID|ParticleSettings.roughness_2 -> roughness_2:    float    Amount of random rough
ID|ParticleSettings.roughness_2_size -> roughness_2_size:    float    Size of random rough
ID|ParticleSettings.roughness_2_threshold -> roughness_2_threshold:    float    Amount of particles left untouched by random rough
ID|ParticleSettings.roughness_end_shape -> roughness_end_shape:    float    Shape of end point rough
ID|ParticleSettings.roughness_endpoint -> roughness_endpoint:    float    Amount of end point rough
ID|ParticleSettings.show_health -> show_health:    boolean    Draw boid health
ID|ParticleSettings.show_number -> show_number:    boolean    Show particle number
ID|ParticleSettings.show_size -> show_size:    boolean    Show particle size
ID|ParticleSettings.show_unborn -> show_unborn:    boolean    Show particles before they are emitted
ID|ParticleSettings.show_velocity -> show_velocity:    boolean    Show particle velocity
ID|ParticleSettings.simplify_rate -> simplify_rate:    float    Speed of simplification
ID|ParticleSettings.simplify_refsize -> simplify_refsize:    int    Reference size in pixels, after which simplification begins
ID|ParticleSettings.simplify_transition -> simplify_transition:    float    Transition period for fading out strands
ID|ParticleSettings.simplify_viewport -> simplify_viewport:    float    Speed of Simplification
ID|ParticleSettings.size_random -> size_random:    float    Give the particle size a random variation
ID|ParticleSettings.subframes -> subframes:    int    Subframes to simulate for improved stability and finer granularity simulations (dt = timestep / (subframes + 1))
ID|ParticleSettings.tangent_factor -> tangent_factor:    float    Let the surface tangent give the particle a starting speed
ID|ParticleSettings.tangent_phase -> tangent_phase:    float    Rotate the surface tangent
ID|ParticleSettings.texture_slots -> texture_slots:    collection, (read-only)    Texture slots defining the mapping and influence of textures
ID|ParticleSettings.time_tweak -> time_tweak:    float    A multiplier for physics timestep (1.0 means one frame = 1/25 seconds)
ID|ParticleSettings.timestep -> timestep:    float    The simulation timestep per frame (seconds per frame)
ID|ParticleSettings.trail_count -> trail_count:    int    Number of trail particles
ID|ParticleSettings.type -> type:    enum    Particle Type
ID|ParticleSettings.use_absolute_path_time -> use_absolute_path_time:    boolean    Path timing is in absolute frames
ID|ParticleSettings.use_adaptive_subframes -> use_adaptive_subframes:    boolean    Automatically set the number of subframes
ID|ParticleSettings.use_advanced_hair -> use_advanced_hair:    boolean    Use full physics calculations for growing hair
ID|ParticleSettings.use_dead -> use_dead:    boolean    Show particles after they have died
ID|ParticleSettings.use_die_on_collision -> use_die_on_collision:    boolean    Particles die when they collide with a deflector object
ID|ParticleSettings.use_dynamic_rotation -> use_dynamic_rotation:    boolean    Particle rotations are effected by collisions and effectors
ID|ParticleSettings.use_emit_random -> use_emit_random:    boolean    Emit in random order of elements
ID|ParticleSettings.use_even_distribution -> use_even_distribution:    boolean    Use even distribution from faces based on face areas or edge lengths
ID|ParticleSettings.use_global_dupli -> use_global_dupli:    boolean    Use object's global coordinates for duplication
ID|ParticleSettings.use_group_count -> use_group_count:    boolean    Use object multiple times in the same group
ID|ParticleSettings.use_group_pick_random -> use_group_pick_random:    boolean    Pick objects from group randomly
ID|ParticleSettings.use_hair_bspline -> use_hair_bspline:    boolean    Interpolate hair using B-Splines
ID|ParticleSettings.use_modifier_stack -> use_modifier_stack:    boolean    Emit particles from mesh with modifiers applied (must use same subsurf level for viewport and render for correct results)
ID|ParticleSettings.use_multiply_size_mass -> use_multiply_size_mass:    boolean    Multiply mass by particle size
ID|ParticleSettings.use_parent_particles -> use_parent_particles:    boolean    Render parent particles
ID|ParticleSettings.use_react_multiple -> use_react_multiple:    boolean    React multiple times
ID|ParticleSettings.use_react_start_end -> use_react_start_end:    boolean    Give birth to unreacted particles eventually
ID|ParticleSettings.use_render_adaptive -> use_render_adaptive:    boolean    Draw steps of the particle path
ID|ParticleSettings.use_render_emitter -> use_render_emitter:    boolean    Render emitter Object also
ID|ParticleSettings.use_rotation_dupli -> use_rotation_dupli:    boolean    Use object's rotation for duplication (global x-axis is aligned particle rotation axis)
ID|ParticleSettings.use_rotations -> use_rotations:    boolean    Calculate particle rotations
ID|ParticleSettings.use_scale_dupli -> use_scale_dupli:    boolean    Use object's scale for duplication
ID|ParticleSettings.use_self_effect -> use_self_effect:    boolean    Particle effectors effect themselves
ID|ParticleSettings.use_simplify -> use_simplify:    boolean    Remove child strands as the object becomes smaller on the screen
ID|ParticleSettings.use_simplify_viewport -> use_simplify_viewport:    boolean    
ID|ParticleSettings.use_size_deflect -> use_size_deflect:    boolean    Use particle's size in deflection
ID|ParticleSettings.use_strand_primitive -> use_strand_primitive:    boolean    Use the strand primitive for rendering
ID|ParticleSettings.use_velocity_length -> use_velocity_length:    boolean    Multiply line length by particle speed
ID|ParticleSettings.use_whole_group -> use_whole_group:    boolean    Use whole group at once
ID|ParticleSettings.userjit -> userjit:    int    Emission locations / face (0 = automatic)
ID|ParticleSettings.virtual_parents -> virtual_parents:    float    Relative amount of virtual parents
ID|Scene.active_clip -> active_clip:    pointer    Active movie clip used for constraints and viewport drawing
ID|Scene.active_layer -> active_layer:    int, (read-only)    Active scene layer index
ID|Scene.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|Scene.audio_distance_model -> audio_distance_model:    enum    Distance model for distance attenuation calculation
ID|Scene.audio_doppler_factor -> audio_doppler_factor:    float    Pitch factor for Doppler effect calculation
ID|Scene.audio_doppler_speed -> audio_doppler_speed:    float    Speed of sound for Doppler effect calculation
ID|Scene.audio_volume -> audio_volume:    float    Audio volume
ID|Scene.background_set -> background_set:    pointer    Background set scene
ID|Scene.camera -> camera:    pointer    Active camera, used for rendering the scene
ID|Scene.cursor_location -> cursor_location:    float[3]    3D cursor location
ID|Scene.cycles -> cycles:    pointer, (read-only)    Cycles render settings
ID|Scene.cycles_curves -> cycles_curves:    pointer, (read-only)    Cycles hair rendering settings
ID|Scene.display_settings -> display_settings:    pointer, (read-only)    Settings of device saved image would be displayed on
ID|Scene.frame_current -> frame_current:    int    Current Frame, to update animation data from python frame_set() instead
ID|Scene.frame_current_final -> frame_current_final:    float, (read-only)    Current frame with subframe and time remapping applied
ID|Scene.frame_end -> frame_end:    int    Final frame of the playback/rendering range
ID|Scene.frame_preview_end -> frame_preview_end:    int    Alternative end frame for UI playback
ID|Scene.frame_preview_start -> frame_preview_start:    int    Alternative start frame for UI playback
ID|Scene.frame_start -> frame_start:    int    First frame of the playback/rendering range
ID|Scene.frame_step -> frame_step:    int    Number of frames to skip forward while rendering/playing back each frame
ID|Scene.frame_subframe -> frame_subframe:    float, (read-only)    
ID|Scene.game_settings -> game_settings:    pointer, (read-only)    
ID|Scene.gravity -> gravity:    float[3]    Constant acceleration in a given direction
ID|Scene.grease_pencil -> grease_pencil:    pointer    Grease Pencil datablock
ID|Scene.is_nla_tweakmode -> is_nla_tweakmode:    boolean, (read-only)    Whether there is any action referenced by NLA being edited (strictly read-only)
ID|Scene.keying_sets -> keying_sets:    collection, (read-only)    Absolute Keying Sets for this Scene
ID|Scene.keying_sets_all -> keying_sets_all:    collection, (read-only)    All Keying Sets available for use (Builtins and Absolute Keying Sets for this Scene)
ID|Scene.layers -> layers:    boolean[20]    Visible layers - Shift-Click to select multiple layers
ID|Scene.lock_frame_selection_to_range -> lock_frame_selection_to_range:    boolean    Don't allow frame to be selected with mouse outside of frame range
ID|Scene.node_tree -> node_tree:    pointer, (read-only)    Compositing node tree
ID|Scene.object_bases -> object_bases:    collection, (read-only)    
ID|Scene.objects -> objects:    collection, (read-only)    
ID|Scene.orientations -> orientations:    collection, (read-only)    
ID|Scene.render -> render:    pointer, (read-only)    
ID|Scene.rigidbody_world -> rigidbody_world:    pointer, (read-only)    
ID|Scene.sequence_editor -> sequence_editor:    pointer, (read-only)    
ID|Scene.sequencer_colorspace_settings -> sequencer_colorspace_settings:    pointer, (read-only)    Settings of color space sequencer is working in
ID|Scene.sync_mode -> sync_mode:    enum    How to sync playback
ID|Scene.timeline_markers -> timeline_markers:    collection, (read-only)    Markers used in all timelines for the current scene
ID|Scene.tool_settings -> tool_settings:    pointer, (read-only)    
ID|Scene.unit_settings -> unit_settings:    pointer, (read-only)    Unit editing settings
ID|Scene.use_audio -> use_audio:    boolean    Play back of audio from Sequence Editor will be muted
ID|Scene.use_audio_scrub -> use_audio_scrub:    boolean    Play audio from Sequence Editor while scrubbing
ID|Scene.use_audio_sync -> use_audio_sync:    boolean    Play back and sync with audio clock, dropping frames if frame display is too slow
ID|Scene.use_frame_drop -> use_frame_drop:    boolean    Play back dropping frames if frame display is too slow
ID|Scene.use_gravity -> use_gravity:    boolean    Use global gravity for all dynamics
ID|Scene.use_nodes -> use_nodes:    boolean    Enable the compositing node tree
ID|Scene.use_preview_range -> use_preview_range:    boolean    Use an alternative start/end frame range for animation playback and OpenGL renders instead of the Render properties start/end frame range
ID|Scene.use_stamp_note -> use_stamp_note:    string    User defined note for the render stamping
ID|Scene.view_settings -> view_settings:    pointer, (read-only)    Color management settings applied on image before saving
ID|Scene.world -> world:    pointer    World used for rendering the scene
ID|Screen.areas -> areas:    collection, (read-only)    Areas the screen is subdivided into
ID|Screen.is_animation_playing -> is_animation_playing:    boolean, (read-only)    Animation playback is active
ID|Screen.scene -> scene:    pointer    Active scene to be edited in the screen
ID|Screen.show_fullscreen -> show_fullscreen:    boolean, (read-only)    An area is maximized, filling this screen
ID|Screen.use_play_3d_editors -> use_play_3d_editors:    boolean    
ID|Screen.use_play_animation_editors -> use_play_animation_editors:    boolean    
ID|Screen.use_play_clip_editors -> use_play_clip_editors:    boolean    
ID|Screen.use_play_image_editors -> use_play_image_editors:    boolean    
ID|Screen.use_play_node_editors -> use_play_node_editors:    boolean    
ID|Screen.use_play_properties_editors -> use_play_properties_editors:    boolean    
ID|Screen.use_play_sequence_editors -> use_play_sequence_editors:    boolean    
ID|Screen.use_play_top_left_3d_editor -> use_play_top_left_3d_editor:    boolean    
ID|Sound.filepath -> filepath:    string    Sound sample file used by this Sound datablock
ID|Sound.packed_file -> packed_file:    pointer, (read-only)    
ID|Sound.use_memory_cache -> use_memory_cache:    boolean    The sound file is decoded and loaded into RAM
ID|Sound.use_mono -> use_mono:    boolean    If the file contains multiple audio channels they are rendered to a single one
ID|Speaker.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|Speaker.attenuation -> attenuation:    float    How strong the distance affects volume, depending on distance model
ID|Speaker.cone_angle_inner -> cone_angle_inner:    float    Angle of the inner cone, in degrees, inside the cone the volume is 100 %
ID|Speaker.cone_angle_outer -> cone_angle_outer:    float    Angle of the outer cone, in degrees, outside this cone the volume is the outer cone volume, between inner and outer cone the volume is interpolated
ID|Speaker.cone_volume_outer -> cone_volume_outer:    float    Volume outside the outer cone
ID|Speaker.distance_max -> distance_max:    float    Maximum distance for volume calculation, no matter how far away the object is
ID|Speaker.distance_reference -> distance_reference:    float    Reference distance at which volume is 100 %
ID|Speaker.muted -> muted:    boolean    Mute the speaker
ID|Speaker.pitch -> pitch:    float    Playback pitch of the sound
ID|Speaker.sound -> sound:    pointer    Sound datablock used by this speaker
ID|Speaker.volume -> volume:    float    How loud the sound is
ID|Speaker.volume_max -> volume_max:    float    Maximum volume, no matter how near the object is
ID|Speaker.volume_min -> volume_min:    float    Minimum volume, no matter how far away the object is
ID|Text.current_character -> current_character:    int, (read-only)    Index of current character in current line, and also start index of character in selection if one exists
ID|Text.current_line -> current_line:    pointer, (read-only)    Current line, and start line of selection if one exists
ID|Text.current_line_index -> current_line_index:    int    Index of current TextLine in TextLine collection
ID|Text.filepath -> filepath:    string    Filename of the text file
ID|Text.is_dirty -> is_dirty:    boolean, (read-only)    Text file has been edited since last save
ID|Text.is_in_memory -> is_in_memory:    boolean, (read-only)    Text file is in memory, without a corresponding file on disk
ID|Text.is_modified -> is_modified:    boolean, (read-only)    Text file on disk is different than the one in memory
ID|Text.lines -> lines:    collection, (read-only)    Lines of text
ID|Text.select_end_character -> select_end_character:    int, (read-only)    Index of character after end of selection in the selection end line
ID|Text.select_end_line -> select_end_line:    pointer, (read-only)    End line of selection
ID|Text.use_module -> use_module:    boolean    Register this text as a module on loading, Text name must end with ".py"
ID|Text.use_tabs_as_spaces -> use_tabs_as_spaces:    boolean    Automatically converts all new tabs into spaces
ID|Texture.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|Texture.color_ramp -> color_ramp:    pointer, (read-only)    
ID|Texture.contrast -> contrast:    float    Adjust the contrast of the texture
ID|Texture.factor_blue -> factor_blue:    float    
ID|Texture.factor_green -> factor_green:    float    
ID|Texture.factor_red -> factor_red:    float    
ID|Texture.intensity -> intensity:    float    Adjust the brightness of the texture
ID|Texture.node_tree -> node_tree:    pointer, (read-only)    Node tree for node-based textures
ID|Texture.saturation -> saturation:    float    Adjust the saturation of colors in the texture
ID|Texture.type -> type:    enum    
ID|Texture.use_color_ramp -> use_color_ramp:    boolean    Toggle color ramp operations
ID|Texture.use_nodes -> use_nodes:    boolean    Make this a node-based texture
ID|Texture.use_preview_alpha -> use_preview_alpha:    boolean    Show Alpha in Preview Render
ID|Texture|BlendTexture.progression -> progression:    enum    Style of the color blending
ID|Texture|BlendTexture.use_flip_axis -> use_flip_axis:    enum    Flip the texture's X and Y axis
ID|Texture|CloudsTexture.cloud_type -> cloud_type:    enum    Determine whether Noise returns grayscale or RGB values
ID|Texture|CloudsTexture.nabla -> nabla:    float    Size of derivative offset used for calculating normal
ID|Texture|CloudsTexture.noise_basis -> noise_basis:    enum    Noise basis used for turbulence
ID|Texture|CloudsTexture.noise_depth -> noise_depth:    int    Depth of the cloud calculation
ID|Texture|CloudsTexture.noise_scale -> noise_scale:    float    Scaling for noise input
ID|Texture|CloudsTexture.noise_type -> noise_type:    enum    
ID|Texture|DistortedNoiseTexture.distortion -> distortion:    float    Amount of distortion
ID|Texture|DistortedNoiseTexture.nabla -> nabla:    float    Size of derivative offset used for calculating normal
ID|Texture|DistortedNoiseTexture.noise_basis -> noise_basis:    enum    Noise basis used for turbulence
ID|Texture|DistortedNoiseTexture.noise_distortion -> noise_distortion:    enum    Noise basis for the distortion
ID|Texture|DistortedNoiseTexture.noise_scale -> noise_scale:    float    Scaling for noise input
ID|Texture|EnvironmentMapTexture.environment_map -> environment_map:    pointer, (read-only)    Get the environment map associated with this texture
ID|Texture|EnvironmentMapTexture.filter_eccentricity -> filter_eccentricity:    int    Maximum eccentricity (higher gives less blur at distant/oblique angles, but is also slower)
ID|Texture|EnvironmentMapTexture.filter_probes -> filter_probes:    int    Maximum number of samples (higher gives less blur at distant/oblique angles, but is also slower)
ID|Texture|EnvironmentMapTexture.filter_size -> filter_size:    float    Multiply the filter size used by MIP Map and Interpolation
ID|Texture|EnvironmentMapTexture.filter_type -> filter_type:    enum    Texture filter to use for sampling image
ID|Texture|EnvironmentMapTexture.image -> image:    pointer    Source image file to read the environment map from
ID|Texture|EnvironmentMapTexture.image_user -> image_user:    pointer, (read-only)    Parameters defining which layer, pass and frame of the image is displayed
ID|Texture|EnvironmentMapTexture.use_filter_size_min -> use_filter_size_min:    boolean    Use Filter Size as a minimal filter value in pixels
ID|Texture|EnvironmentMapTexture.use_mipmap -> use_mipmap:    boolean    Use auto-generated MIP maps for the image
ID|Texture|EnvironmentMapTexture.use_mipmap_gauss -> use_mipmap_gauss:    boolean    Use Gauss filter to sample down MIP maps
ID|Texture|ImageTexture.checker_distance -> checker_distance:    float    Distance between checker tiles
ID|Texture|ImageTexture.crop_max_x -> crop_max_x:    float    Maximum X value to crop the image
ID|Texture|ImageTexture.crop_max_y -> crop_max_y:    float    Maximum Y value to crop the image
ID|Texture|ImageTexture.crop_min_x -> crop_min_x:    float    Minimum X value to crop the image
ID|Texture|ImageTexture.crop_min_y -> crop_min_y:    float    Minimum Y value to crop the image
ID|Texture|ImageTexture.extension -> extension:    enum    How the image is extrapolated past its original bounds
ID|Texture|ImageTexture.filter_eccentricity -> filter_eccentricity:    int    Maximum eccentricity (higher gives less blur at distant/oblique angles, but is also slower)
ID|Texture|ImageTexture.filter_probes -> filter_probes:    int    Maximum number of samples (higher gives less blur at distant/oblique angles, but is also slower)
ID|Texture|ImageTexture.filter_size -> filter_size:    float    Multiply the filter size used by MIP Map and Interpolation
ID|Texture|ImageTexture.filter_type -> filter_type:    enum    Texture filter to use for sampling image
ID|Texture|ImageTexture.image -> image:    pointer    
ID|Texture|ImageTexture.image_user -> image_user:    pointer, (read-only)    Parameters defining which layer, pass and frame of the image is displayed
ID|Texture|ImageTexture.invert_alpha -> invert_alpha:    boolean    Invert all the alpha values in the image
ID|Texture|ImageTexture.repeat_x -> repeat_x:    int    Repetition multiplier in the X direction
ID|Texture|ImageTexture.repeat_y -> repeat_y:    int    Repetition multiplier in the Y direction
ID|Texture|ImageTexture.use_alpha -> use_alpha:    boolean    Use the alpha channel information in the image
ID|Texture|ImageTexture.use_calculate_alpha -> use_calculate_alpha:    boolean    Calculate an alpha channel based on RGB values in the image
ID|Texture|ImageTexture.use_checker_even -> use_checker_even:    boolean    Even checker tiles
ID|Texture|ImageTexture.use_checker_odd -> use_checker_odd:    boolean    Odd checker tiles
ID|Texture|ImageTexture.use_derivative_map -> use_derivative_map:    boolean    Use red and green as derivative values
ID|Texture|ImageTexture.use_filter_size_min -> use_filter_size_min:    boolean    Use Filter Size as a minimal filter value in pixels
ID|Texture|ImageTexture.use_flip_axis -> use_flip_axis:    boolean    Flip the texture's X and Y axis
ID|Texture|ImageTexture.use_interpolation -> use_interpolation:    boolean    Interpolate pixels using selected filter
ID|Texture|ImageTexture.use_mipmap -> use_mipmap:    boolean    Use auto-generated MIP maps for the image
ID|Texture|ImageTexture.use_mipmap_gauss -> use_mipmap_gauss:    boolean    Use Gauss filter to sample down MIP maps
ID|Texture|ImageTexture.use_mirror_x -> use_mirror_x:    boolean    Mirror the image repetition on the X direction
ID|Texture|ImageTexture.use_mirror_y -> use_mirror_y:    boolean    Mirror the image repetition on the Y direction
ID|Texture|ImageTexture.use_normal_map -> use_normal_map:    boolean    Use image RGB values for normal mapping
ID|Texture|MagicTexture.noise_depth -> noise_depth:    int    Depth of the noise
ID|Texture|MagicTexture.turbulence -> turbulence:    float    Turbulence of the noise
ID|Texture|MarbleTexture.marble_type -> marble_type:    enum    
ID|Texture|MarbleTexture.nabla -> nabla:    float    Size of derivative offset used for calculating normal
ID|Texture|MarbleTexture.noise_basis -> noise_basis:    enum    Noise basis used for turbulence
ID|Texture|MarbleTexture.noise_basis_2 -> noise_basis_2:    enum    
ID|Texture|MarbleTexture.noise_depth -> noise_depth:    int    Depth of the cloud calculation
ID|Texture|MarbleTexture.noise_scale -> noise_scale:    float    Scaling for noise input
ID|Texture|MarbleTexture.noise_type -> noise_type:    enum    
ID|Texture|MarbleTexture.turbulence -> turbulence:    float    Turbulence of the bandnoise and ringnoise types
ID|Texture|MusgraveTexture.dimension_max -> dimension_max:    float    Highest fractal dimension
ID|Texture|MusgraveTexture.gain -> gain:    float    The gain multiplier
ID|Texture|MusgraveTexture.lacunarity -> lacunarity:    float    Gap between successive frequencies
ID|Texture|MusgraveTexture.musgrave_type -> musgrave_type:    enum    Fractal noise algorithm
ID|Texture|MusgraveTexture.nabla -> nabla:    float    Size of derivative offset used for calculating normal
ID|Texture|MusgraveTexture.noise_basis -> noise_basis:    enum    Noise basis used for turbulence
ID|Texture|MusgraveTexture.noise_intensity -> noise_intensity:    float    Intensity of the noise
ID|Texture|MusgraveTexture.noise_scale -> noise_scale:    float    Scaling for noise input
ID|Texture|MusgraveTexture.octaves -> octaves:    float    Number of frequencies used
ID|Texture|MusgraveTexture.offset -> offset:    float    The fractal offset
ID|Texture|OceanTexture.ocean -> ocean:    pointer, (read-only)    The ocean data associated with this texture
ID|Texture|PointDensityTexture.point_density -> point_density:    pointer, (read-only)    The point density settings associated with this texture
ID|Texture|StucciTexture.noise_basis -> noise_basis:    enum    Noise basis used for turbulence
ID|Texture|StucciTexture.noise_scale -> noise_scale:    float    Scaling for noise input
ID|Texture|StucciTexture.noise_type -> noise_type:    enum    
ID|Texture|StucciTexture.stucci_type -> stucci_type:    enum    
ID|Texture|StucciTexture.turbulence -> turbulence:    float    Turbulence of the noise
ID|Texture|VoronoiTexture.color_mode -> color_mode:    enum    
ID|Texture|VoronoiTexture.distance_metric -> distance_metric:    enum    Algorithm used to calculate distance of sample points to feature points
ID|Texture|VoronoiTexture.minkovsky_exponent -> minkovsky_exponent:    float    Minkowski exponent
ID|Texture|VoronoiTexture.nabla -> nabla:    float    Size of derivative offset used for calculating normal
ID|Texture|VoronoiTexture.noise_intensity -> noise_intensity:    float    Scales the intensity of the noise
ID|Texture|VoronoiTexture.noise_scale -> noise_scale:    float    Scaling for noise input
ID|Texture|VoronoiTexture.weight_1 -> weight_1:    float    Voronoi feature weight 1
ID|Texture|VoronoiTexture.weight_2 -> weight_2:    float    Voronoi feature weight 2
ID|Texture|VoronoiTexture.weight_3 -> weight_3:    float    Voronoi feature weight 3
ID|Texture|VoronoiTexture.weight_4 -> weight_4:    float    Voronoi feature weight 4
ID|Texture|VoxelDataTexture.image -> image:    pointer    
ID|Texture|VoxelDataTexture.image_user -> image_user:    pointer, (read-only)    Parameters defining which layer, pass and frame of the image is displayed
ID|Texture|VoxelDataTexture.voxel_data -> voxel_data:    pointer, (read-only)    The voxel data associated with this texture
ID|Texture|WoodTexture.nabla -> nabla:    float    Size of derivative offset used for calculating normal
ID|Texture|WoodTexture.noise_basis -> noise_basis:    enum    Noise basis used for turbulence
ID|Texture|WoodTexture.noise_basis_2 -> noise_basis_2:    enum    
ID|Texture|WoodTexture.noise_scale -> noise_scale:    float    Scaling for noise input
ID|Texture|WoodTexture.noise_type -> noise_type:    enum    
ID|Texture|WoodTexture.turbulence -> turbulence:    float    Turbulence of the bandnoise and ringnoise types
ID|Texture|WoodTexture.wood_type -> wood_type:    enum    
ID|VectorFont.filepath -> filepath:    string    
ID|VectorFont.packed_file -> packed_file:    pointer, (read-only)    
ID|WindowManager.addon_filter -> addon_filter:    enum    Filter addons by category
ID|WindowManager.addon_search -> addon_search:    string    Search within the selected filter
ID|WindowManager.addon_support -> addon_support:    enum    Display support level
ID|WindowManager.clipboard -> clipboard:    string    
ID|WindowManager.keyconfigs -> keyconfigs:    collection, (read-only)    Registered key configurations
ID|WindowManager.operators -> operators:    collection, (read-only)    Operator registry
ID|WindowManager.windows -> windows:    collection, (read-only)    Open windows
ID|World.active_texture -> active_texture:    pointer    Active texture slot being displayed
ID|World.active_texture_index -> active_texture_index:    int    Index of active texture slot
ID|World.ambient_color -> ambient_color:    float[3]    Ambient color of the world
ID|World.animation_data -> animation_data:    pointer, (read-only)    Animation data for this datablock
ID|World.color_range -> color_range:    float    The color range that will be mapped to 0-1
ID|World.cycles -> cycles:    pointer, (read-only)    Cycles world settings
ID|World.cycles_visibility -> cycles_visibility:    pointer, (read-only)    Cycles visibility settings
ID|World.exposure -> exposure:    float    Amount of exponential color correction for light
ID|World.horizon_color -> horizon_color:    float[3]    Color at the horizon
ID|World.light_settings -> light_settings:    pointer, (read-only)    World lighting settings
ID|World.mist_settings -> mist_settings:    pointer, (read-only)    World mist settings
ID|World.node_tree -> node_tree:    pointer, (read-only)    Node tree for node based worlds
ID|World.texture_slots -> texture_slots:    collection, (read-only)    Texture slots defining the mapping and influence of textures
ID|World.use_nodes -> use_nodes:    boolean    Use shader nodes to render the world
ID|World.use_sky_blend -> use_sky_blend:    boolean    Render background with natural progression from horizon to zenith
ID|World.use_sky_paper -> use_sky_paper:    boolean    Flatten blend or texture coordinates
ID|World.use_sky_real -> use_sky_real:    boolean    Render background with a real horizon, relative to the camera angle
ID|World.zenith_color -> zenith_color:    float[3]    Color at the zenith
IKParam.ik_solver -> ik_solver:    enum, (read-only)    IK solver for which these parameters are defined
IKParam|Itasc.damping_epsilon -> damping_epsilon:    float    Singular value under which damping is progressively applied (higher values=more stability, less reactivity - default=0.1)
IKParam|Itasc.damping_max -> damping_max:    float    Maximum damping coefficient when singular value is nearly 0 (higher values=more stability, less reactivity - default=0.5)
IKParam|Itasc.feedback -> feedback:    float    Feedback coefficient for error correction, average response time is 1/feedback (default=20)
IKParam|Itasc.iterations -> iterations:    int    Maximum number of iterations for convergence in case of reiteration
IKParam|Itasc.mode -> mode:    enum    
IKParam|Itasc.precision -> precision:    float    Precision of convergence in case of reiteration
IKParam|Itasc.reiteration_method -> reiteration_method:    enum    Defines if the solver is allowed to reiterate (converge until precision is met) on none, first or all frames
IKParam|Itasc.solver -> solver:    enum    Solving method selection: automatic damping or manual damping
IKParam|Itasc.step_count -> step_count:    int    Divide the frame interval into this many steps
IKParam|Itasc.step_max -> step_max:    float    Higher bound for timestep in second in case of automatic substeps
IKParam|Itasc.step_min -> step_min:    float    Lower bound for timestep in second in case of automatic substeps
IKParam|Itasc.use_auto_step -> use_auto_step:    boolean    Automatically determine the optimal number of steps for best performance/accuracy trade off
IKParam|Itasc.velocity_max -> velocity_max:    float    Maximum joint velocity in rad/s (default=50)
ImageFormatSettings.cineon_black -> cineon_black:    int    Log conversion reference blackpoint
ImageFormatSettings.cineon_gamma -> cineon_gamma:    float    Log conversion gamma
ImageFormatSettings.cineon_white -> cineon_white:    int    Log conversion reference whitepoint
ImageFormatSettings.color_depth -> color_depth:    enum    Bit depth per channel
ImageFormatSettings.color_mode -> color_mode:    enum    Choose BW for saving grayscale images, RGB for saving red, green and blue channels, and RGBA for saving red, green, blue and alpha channels
ImageFormatSettings.compression -> compression:    int    Amount of time to determine best compression: 0 = no compression with fast file output, 100 = maximum lossless compression with slow file output
ImageFormatSettings.display_settings -> display_settings:    pointer, (read-only)    Settings of device saved image would be displayed on
ImageFormatSettings.exr_codec -> exr_codec:    enum    Codec settings for OpenEXR
ImageFormatSettings.file_format -> file_format:    enum    File format to save the rendered images as
ImageFormatSettings.jpeg2k_codec -> jpeg2k_codec:    enum    Codec settings for Jpek2000
ImageFormatSettings.quality -> quality:    int    Quality for image formats that support lossy compression
ImageFormatSettings.use_cineon_log -> use_cineon_log:    boolean    Convert to logarithmic color space
ImageFormatSettings.use_jpeg2k_cinema_48 -> use_jpeg2k_cinema_48:    boolean    Use Openjpeg Cinema Preset (48fps)
ImageFormatSettings.use_jpeg2k_cinema_preset -> use_jpeg2k_cinema_preset:    boolean    Use Openjpeg Cinema Preset
ImageFormatSettings.use_jpeg2k_ycc -> use_jpeg2k_ycc:    boolean    Save luminance-chrominance-chrominance channels instead of RGB colors
ImageFormatSettings.use_preview -> use_preview:    boolean    When rendering animations, save JPG preview images in same directory
ImageFormatSettings.use_zbuffer -> use_zbuffer:    boolean    Save the z-depth per pixel (32 bit unsigned int z-buffer)
ImageFormatSettings.view_settings -> view_settings:    pointer, (read-only)    Color management settings applied on image before saving
ImageUser.fields_per_frame -> fields_per_frame:    int    Number of fields per rendered frame (2 fields is 1 image)
ImageUser.frame_current -> frame_current:    int    Current frame number in image sequence or movie
ImageUser.frame_duration -> frame_duration:    int    Number of images of a movie to use
ImageUser.frame_offset -> frame_offset:    int    Offset the number of the frame to use in the animation
ImageUser.frame_start -> frame_start:    int    Global starting frame of the movie/sequence, assuming first picture has a #1
ImageUser.multilayer_layer -> multilayer_layer:    int, (read-only)    Layer in multilayer image
ImageUser.multilayer_pass -> multilayer_pass:    int, (read-only)    Pass in multilayer image
ImageUser.use_auto_refresh -> use_auto_refresh:    boolean    Always refresh image on frame changes
ImageUser.use_cyclic -> use_cyclic:    boolean    Cycle the images in the movie
KeyConfig.is_user_defined -> is_user_defined:    boolean, (read-only)    Indicates that a keyconfig was defined by the user
KeyConfig.keymaps -> keymaps:    collection, (read-only)    Key maps configured as part of this configuration
KeyConfig.name -> name:    string    Name of the key configuration
KeyConfigurations.active -> active:    pointer    Active key configuration (preset)
KeyConfigurations.addon -> addon:    pointer, (read-only)    Key configuration that can be extended by addons, and is added to the active configuration when handling events
KeyConfigurations.default -> default:    pointer, (read-only)    Default builtin key configuration
KeyConfigurations.user -> user:    pointer, (read-only)    Final key configuration that combines keymaps from the active and addon configurations, and can be edited by the user
KeyMap.is_modal -> is_modal:    boolean, (read-only)    Indicates that a keymap is used for translate modal events for an operator
KeyMap.is_user_modified -> is_user_modified:    boolean    Keymap is defined by the user
KeyMap.keymap_items -> keymap_items:    collection, (read-only)    Items in the keymap, linking an operator to an input event
KeyMap.name -> name:    string, (read-only)    Name of the key map
KeyMap.region_type -> region_type:    enum, (read-only)    Optional region type keymap is associated with
KeyMap.show_expanded_children -> show_expanded_children:    boolean    Children expanded in the user interface
KeyMap.show_expanded_items -> show_expanded_items:    boolean    Expanded in the user interface
KeyMap.space_type -> space_type:    enum, (read-only)    Optional space type keymap is associated with
KeyMapItem.active -> active:    boolean    Activate or deactivate item
KeyMapItem.alt -> alt:    boolean    Alt key pressed
KeyMapItem.any -> any:    boolean    Any modifier keys pressed
KeyMapItem.ctrl -> ctrl:    boolean    Control key pressed
KeyMapItem.id -> id:    int, (read-only)    ID of the item
KeyMapItem.idname -> idname:    string    Identifier of operator to call on input event
KeyMapItem.is_user_defined -> is_user_defined:    boolean, (read-only)    Is this keymap item user defined (doesn't just replace a builtin item)
KeyMapItem.is_user_modified -> is_user_modified:    boolean, (read-only)    Is this keymap item modified by the user
KeyMapItem.key_modifier -> key_modifier:    enum    Regular key pressed as a modifier
KeyMapItem.map_type -> map_type:    enum    Type of event mapping
KeyMapItem.name -> name:    string, (read-only)    Name of operator (translated) to call on input event
KeyMapItem.oskey -> oskey:    boolean    Operating system key pressed
KeyMapItem.properties -> properties:    pointer, (read-only)    Properties to set when the operator is called
KeyMapItem.propvalue -> propvalue:    enum    The value this event translates to in a modal keymap
KeyMapItem.shift -> shift:    boolean    Shift key pressed
KeyMapItem.show_expanded -> show_expanded:    boolean    Show key map event and property details in the user interface
KeyMapItem.type -> type:    enum    Type of event
KeyMapItem.value -> value:    enum    
Keyframe.co -> co:    float[2]    Coordinates of the control point
Keyframe.handle_left -> handle_left:    float[2]    Coordinates of the left handle (before the control point)
Keyframe.handle_left_type -> handle_left_type:    enum    Handle types
Keyframe.handle_right -> handle_right:    float[2]    Coordinates of the right handle (after the control point)
Keyframe.handle_right_type -> handle_right_type:    enum    Handle types
Keyframe.interpolation -> interpolation:    enum    Interpolation method to use for segment of the F-Curve from this Keyframe until the next Keyframe
Keyframe.select_control_point -> select_control_point:    boolean    Control point selection status
Keyframe.select_left_handle -> select_left_handle:    boolean    Left handle selection status
Keyframe.select_right_handle -> select_right_handle:    boolean    Right handle selection status
Keyframe.type -> type:    enum    Type of keyframe (for visual purposes only)
KeyingSet.bl_description -> bl_description:    string    A short description of the keying set
KeyingSet.bl_idname -> bl_idname:    string    If this is set, the Keying Set gets a custom ID, otherwise it takes the name of the class used to define the Keying Set (for example, if the class name is "BUILTIN_KSI_location", and
bl_idname is not set by the script, then bl_idname = "BUILTIN_KSI_location")
KeyingSet.bl_label -> bl_label:    string    
KeyingSet.bl_options -> bl_options:    enum    Keying set options
KeyingSet.is_path_absolute -> is_path_absolute:    boolean, (read-only)    Keying Set defines specific paths/settings to be keyframed (i.e. is not reliant on context info)
KeyingSet.paths -> paths:    collection, (read-only)    Keying Set Paths to define settings that get keyframed together
KeyingSet.type_info -> type_info:    pointer, (read-only)    Callback function defines for built-in Keying Sets
KeyingSetInfo.bl_description -> bl_description:    string    A short description of the keying set
KeyingSetInfo.bl_idname -> bl_idname:    string    If this is set, the Keying Set gets a custom ID, otherwise it takes the name of the class used to define the Keying Set (for example, if the class name is "BUILTIN_KSI_location", and
bl_idname is not set by the script, then bl_idname = "BUILTIN_KSI_location")
KeyingSetInfo.bl_label -> bl_label:    string    
KeyingSetInfo.bl_options -> bl_options:    enum    Keying set options
KeyingSetPath.array_index -> array_index:    int    Index to the specific setting if applicable
KeyingSetPath.bl_options -> bl_options:    enum    Keying set options
KeyingSetPath.data_path -> data_path:    string    Path to property setting
KeyingSetPath.group -> group:    string    Name of Action Group to assign setting(s) for this path to
KeyingSetPath.group_method -> group_method:    enum    Method used to define which Group-name to use
KeyingSetPath.id -> id:    pointer    ID-Block that keyframes for Keying Set should be added to (for Absolute Keying Sets only)
KeyingSetPath.id_type -> id_type:    enum    Type of ID-block that can be used
KeyingSetPath.use_entire_array -> use_entire_array:    boolean    When an 'array/vector' type is chosen (Location, Rotation, Color, etc.), entire array is to be used
KeyingSetPaths.active -> active:    pointer    Active Keying Set used to insert/delete keyframes
KeyingSetPaths.active_index -> active_index:    int    Current Keying Set index
KeyingSets.active -> active:    pointer    Active Keying Set used to insert/delete keyframes
KeyingSets.active_index -> active_index:    int    Current Keying Set index (negative for 'builtin' and positive for 'absolute')
KeyingSetsAll.active -> active:    pointer    Active Keying Set used to insert/delete keyframes
KeyingSetsAll.active_index -> active_index:    int    Current Keying Set index (negative for 'builtin' and positive for 'absolute')
LampSkySettings.atmosphere_distance_factor -> atmosphere_distance_factor:    float    Multiplier to convert blender units to physical distance
LampSkySettings.atmosphere_extinction -> atmosphere_extinction:    float    Extinction scattering contribution factor
LampSkySettings.atmosphere_inscattering -> atmosphere_inscattering:    float    Scatter contribution factor
LampSkySettings.atmosphere_turbidity -> atmosphere_turbidity:    float    Sky turbidity
LampSkySettings.backscattered_light -> backscattered_light:    float    Backscattered light
LampSkySettings.horizon_brightness -> horizon_brightness:    float    Horizon brightness
LampSkySettings.sky_blend -> sky_blend:    float    Blend factor with sky
LampSkySettings.sky_blend_type -> sky_blend_type:    enum    Blend mode for combining sun sky with world sky
LampSkySettings.sky_color_space -> sky_color_space:    enum    Color space to use for internal XYZ->RGB color conversion
LampSkySettings.sky_exposure -> sky_exposure:    float    Strength of sky shading exponential exposure correction
LampSkySettings.spread -> spread:    float    Horizon Spread
LampSkySettings.sun_brightness -> sun_brightness:    float    Sun brightness
LampSkySettings.sun_intensity -> sun_intensity:    float    Sun intensity
LampSkySettings.sun_size -> sun_size:    float    Sun size
LampSkySettings.use_atmosphere -> use_atmosphere:    boolean    Apply sun effect on atmosphere
LampSkySettings.use_sky -> use_sky:    boolean    Apply sun effect on sky
LatticePoint.co -> co:    float[3], (read-only)    Original undeformed location used to calculate the strength of the deform effect (edit/animate the Deformed Location instead)
LatticePoint.co_deform -> co_deform:    float[3]    
LatticePoint.groups -> groups:    collection, (read-only)    Weights for the vertex groups this point is member of
LatticePoint.select -> select:    boolean    Selection status
LatticePoint.weight_softbody -> weight_softbody:    float    Softbody goal weight
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_AlongStroke.blend -> blend:    enum    Specify how the modifier value is blended into the base value
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_AlongStroke.curve -> curve:    pointer, (read-only)    Curve used for the curve mapping
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_AlongStroke.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_AlongStroke.influence -> influence:    float    Influence factor by which the modifier changes the property
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_AlongStroke.invert -> invert:    boolean    Invert the fade-out direction of the linear mapping
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_AlongStroke.mapping -> mapping:    enum    Select the mapping type
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_AlongStroke.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_AlongStroke.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_AlongStroke.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromCamera.blend -> blend:    enum    Specify how the modifier value is blended into the base value
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromCamera.curve -> curve:    pointer, (read-only)    Curve used for the curve mapping
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromCamera.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromCamera.influence -> influence:    float    Influence factor by which the modifier changes the property
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromCamera.invert -> invert:    boolean    Invert the fade-out direction of the linear mapping
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromCamera.mapping -> mapping:    enum    Select the mapping type
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromCamera.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromCamera.range_max -> range_max:    float    Upper bound of the input range the mapping is applied
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromCamera.range_min -> range_min:    float    Lower bound of the input range the mapping is applied
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromCamera.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromCamera.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromObject.blend -> blend:    enum    Specify how the modifier value is blended into the base value
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromObject.curve -> curve:    pointer, (read-only)    Curve used for the curve mapping
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromObject.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromObject.influence -> influence:    float    Influence factor by which the modifier changes the property
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromObject.invert -> invert:    boolean    Invert the fade-out direction of the linear mapping
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromObject.mapping -> mapping:    enum    Select the mapping type
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromObject.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromObject.range_max -> range_max:    float    Upper bound of the input range the mapping is applied
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromObject.range_min -> range_min:    float    Lower bound of the input range the mapping is applied
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromObject.target -> target:    pointer    Target object from which the distance is measured
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromObject.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_DistanceFromObject.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_Material.blend -> blend:    enum    Specify how the modifier value is blended into the base value
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_Material.curve -> curve:    pointer, (read-only)    Curve used for the curve mapping
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_Material.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_Material.influence -> influence:    float    Influence factor by which the modifier changes the property
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_Material.invert -> invert:    boolean    Invert the fade-out direction of the linear mapping
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_Material.mapping -> mapping:    enum    Select the mapping type
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_Material.material_attribute -> material_attribute:    enum    Specify which material attribute is used
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_Material.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_Material.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleAlphaModifier|LineStyleAlphaModifier_Material.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_AlongStroke.blend -> blend:    enum    Specify how the modifier value is blended into the base value
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_AlongStroke.color_ramp -> color_ramp:    pointer, (read-only)    Color ramp used to change line color
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_AlongStroke.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_AlongStroke.influence -> influence:    float    Influence factor by which the modifier changes the property
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_AlongStroke.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_AlongStroke.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_AlongStroke.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromCamera.blend -> blend:    enum    Specify how the modifier value is blended into the base value
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromCamera.color_ramp -> color_ramp:    pointer, (read-only)    Color ramp used to change line color
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromCamera.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromCamera.influence -> influence:    float    Influence factor by which the modifier changes the property
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromCamera.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromCamera.range_max -> range_max:    float    Upper bound of the input range the mapping is applied
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromCamera.range_min -> range_min:    float    Lower bound of the input range the mapping is applied
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromCamera.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromCamera.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromObject.blend -> blend:    enum    Specify how the modifier value is blended into the base value
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromObject.color_ramp -> color_ramp:    pointer, (read-only)    Color ramp used to change line color
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromObject.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromObject.influence -> influence:    float    Influence factor by which the modifier changes the property
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromObject.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromObject.range_max -> range_max:    float    Upper bound of the input range the mapping is applied
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromObject.range_min -> range_min:    float    Lower bound of the input range the mapping is applied
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromObject.target -> target:    pointer    Target object from which the distance is measured
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromObject.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_DistanceFromObject.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_Material.blend -> blend:    enum    Specify how the modifier value is blended into the base value
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_Material.color_ramp -> color_ramp:    pointer, (read-only)    Color ramp used to change line color
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_Material.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_Material.influence -> influence:    float    Influence factor by which the modifier changes the property
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_Material.material_attribute -> material_attribute:    enum    Specify which material attribute is used
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_Material.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_Material.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_Material.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleColorModifier|LineStyleColorModifier_Material.use_ramp -> use_ramp:    boolean    Use color ramp to map the BW average into an RGB color
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DOffset.end -> end:    float    Displacement that is applied from the end of the stroke
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DOffset.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DOffset.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DOffset.start -> start:    float    Displacement that is applied from the beginning of the stroke
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DOffset.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DOffset.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DOffset.x -> x:    float    Displacement that is applied to the X coordinates of stroke vertices
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DOffset.y -> y:    float    Displacement that is applied to the Y coordinates of stroke vertices
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DTransform.angle -> angle:    float    Rotation angle
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DTransform.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DTransform.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DTransform.pivot -> pivot:    enum    Pivot of scaling and rotation operations
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DTransform.pivot_u -> pivot_u:    float    Pivot in terms of the stroke point parameter u (0 <= u <= 1)
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DTransform.pivot_x -> pivot_x:    float    2D X coordinate of the absolute pivot
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DTransform.pivot_y -> pivot_y:    float    2D Y coordinate of the absolute pivot
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DTransform.scale_x -> scale_x:    float    Scaling factor that is applied along the X axis
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DTransform.scale_y -> scale_y:    float    Scaling factor that is applied along the Y axis
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DTransform.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_2DTransform.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_BackboneStretcher.backbone_length -> backbone_length:    float    Amount of backbone stretching
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_BackboneStretcher.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_BackboneStretcher.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_BackboneStretcher.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_BackboneStretcher.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_BezierCurve.error -> error:    float    Maximum distance allowed between the new Bezier curve and the original backbone geometry
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_BezierCurve.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_BezierCurve.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_BezierCurve.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_BezierCurve.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Blueprint.backbone_length -> backbone_length:    float    Amount of backbone stretching
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Blueprint.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Blueprint.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Blueprint.random_backbone -> random_backbone:    int    Randomness of the backbone stretching
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Blueprint.random_center -> random_center:    int    Randomness of the center
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Blueprint.random_radius -> random_radius:    int    Randomness of the radius
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Blueprint.rounds -> rounds:    int    Number of rounds in contour strokes
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Blueprint.shape -> shape:    enum    Select the shape of blueprint contour strokes
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Blueprint.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Blueprint.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_GuidingLines.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_GuidingLines.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_GuidingLines.offset -> offset:    float    Displacement that is applied to the main direction line along its normal
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_GuidingLines.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_GuidingLines.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise1D.amplitude -> amplitude:    float    Amplitude of the Perlin noise
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise1D.angle -> angle:    float    Displacement direction
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise1D.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise1D.frequency -> frequency:    float    Frequency of the Perlin noise
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise1D.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise1D.octaves -> octaves:    int    Number of octaves (i.e., the amount of detail of the Perlin noise)
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise1D.seed -> seed:    int    Seed for random number generation (if negative, time is used as a seed instead)
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise1D.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise1D.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise2D.amplitude -> amplitude:    float    Amplitude of the Perlin noise
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise2D.angle -> angle:    float    Displacement direction
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise2D.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise2D.frequency -> frequency:    float    Frequency of the Perlin noise
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise2D.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise2D.octaves -> octaves:    int    Number of octaves (i.e., the amount of detail of the Perlin noise)
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise2D.seed -> seed:    int    Seed for random number generation (if negative, time is used as a seed instead)
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise2D.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_PerlinNoise2D.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Polygonalization.error -> error:    float    Maximum distance between the original stroke and its polygonal approximation
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Polygonalization.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Polygonalization.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Polygonalization.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Polygonalization.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Sampling.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Sampling.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Sampling.sampling -> sampling:    float    New sampling value to be used for subsequent modifiers
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Sampling.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_Sampling.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_SinusDisplacement.amplitude -> amplitude:    float    Amplitude of the sinus displacement
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_SinusDisplacement.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_SinusDisplacement.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_SinusDisplacement.phase -> phase:    float    Phase of the sinus displacement
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_SinusDisplacement.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_SinusDisplacement.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_SinusDisplacement.wavelength -> wavelength:    float    Wavelength of the sinus displacement
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_SpatialNoise.amplitude -> amplitude:    float    Amplitude of the spatial noise
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_SpatialNoise.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_SpatialNoise.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_SpatialNoise.octaves -> octaves:    int    Number of octaves (i.e., the amount of detail of the spatial noise)
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_SpatialNoise.scale -> scale:    float    Scale of the spatial noise
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_SpatialNoise.smooth -> smooth:    boolean    If true, the spatial noise is smooth
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_SpatialNoise.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_SpatialNoise.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_SpatialNoise.use_pure_random -> use_pure_random:    boolean    If true, the spatial noise does not show any coherence
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_TipRemover.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_TipRemover.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_TipRemover.tip_length -> tip_length:    float    Length of tips to be removed
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_TipRemover.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleGeometryModifier|LineStyleGeometryModifier_TipRemover.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_AlongStroke.blend -> blend:    enum    Specify how the modifier value is blended into the base value
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_AlongStroke.curve -> curve:    pointer, (read-only)    Curve used for the curve mapping
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_AlongStroke.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_AlongStroke.influence -> influence:    float    Influence factor by which the modifier changes the property
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_AlongStroke.invert -> invert:    boolean    Invert the fade-out direction of the linear mapping
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_AlongStroke.mapping -> mapping:    enum    Select the mapping type
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_AlongStroke.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_AlongStroke.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_AlongStroke.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_AlongStroke.value_max -> value_max:    float    Maximum output value of the mapping
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_AlongStroke.value_min -> value_min:    float    Minimum output value of the mapping
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Calligraphy.blend -> blend:    enum    Specify how the modifier value is blended into the base value
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Calligraphy.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Calligraphy.influence -> influence:    float    Influence factor by which the modifier changes the property
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Calligraphy.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Calligraphy.orientation -> orientation:    float    Angle of the main direction
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Calligraphy.thickness_max -> thickness_max:    float    Maximum thickness in the main direction
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Calligraphy.thickness_min -> thickness_min:    float    Minimum thickness in the direction perpendicular to the main direction
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Calligraphy.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Calligraphy.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromCamera.blend -> blend:    enum    Specify how the modifier value is blended into the base value
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromCamera.curve -> curve:    pointer, (read-only)    Curve used for the curve mapping
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromCamera.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromCamera.influence -> influence:    float    Influence factor by which the modifier changes the property
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromCamera.invert -> invert:    boolean    Invert the fade-out direction of the linear mapping
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromCamera.mapping -> mapping:    enum    Select the mapping type
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromCamera.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromCamera.range_max -> range_max:    float    Upper bound of the input range the mapping is applied
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromCamera.range_min -> range_min:    float    Lower bound of the input range the mapping is applied
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromCamera.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromCamera.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromCamera.value_max -> value_max:    float    Maximum output value of the mapping
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromCamera.value_min -> value_min:    float    Minimum output value of the mapping
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromObject.blend -> blend:    enum    Specify how the modifier value is blended into the base value
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromObject.curve -> curve:    pointer, (read-only)    Curve used for the curve mapping
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromObject.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromObject.influence -> influence:    float    Influence factor by which the modifier changes the property
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromObject.invert -> invert:    boolean    Invert the fade-out direction of the linear mapping
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromObject.mapping -> mapping:    enum    Select the mapping type
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromObject.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromObject.range_max -> range_max:    float    Upper bound of the input range the mapping is applied
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromObject.range_min -> range_min:    float    Lower bound of the input range the mapping is applied
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromObject.target -> target:    pointer    Target object from which the distance is measured
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromObject.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromObject.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromObject.value_max -> value_max:    float    Maximum output value of the mapping
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_DistanceFromObject.value_min -> value_min:    float    Minimum output value of the mapping
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Material.blend -> blend:    enum    Specify how the modifier value is blended into the base value
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Material.curve -> curve:    pointer, (read-only)    Curve used for the curve mapping
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Material.expanded -> expanded:    boolean    True if the modifier tab is expanded
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Material.influence -> influence:    float    Influence factor by which the modifier changes the property
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Material.invert -> invert:    boolean    Invert the fade-out direction of the linear mapping
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Material.mapping -> mapping:    enum    Select the mapping type
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Material.material_attribute -> material_attribute:    enum    Specify which material attribute is used
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Material.name -> name:    string    Name of the modifier
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Material.type -> type:    enum, (read-only)    Type of the modifier
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Material.use -> use:    boolean    Enable or disable this modifier during stroke rendering
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Material.value_max -> value_max:    float    Maximum output value of the mapping
LineStyleModifier|LineStyleThicknessModifier|LineStyleThicknessModifier_Material.value_min -> value_min:    float    Minimum output value of the mapping
Linesets.active -> active:    pointer, (read-only)    Active line set being displayed
Linesets.active_index -> active_index:    int    Index of active line set slot
LodLevel.distance -> distance:    float    Distance to begin using this level of detail
LodLevel.object -> object:    pointer    Object to use for this level of detail
LodLevel.use_material -> use_material:    boolean    Use the material from this object at this level of detail
LodLevel.use_mesh -> use_mesh:    boolean    Use the mesh from this object at this level of detail
LoopColors.active -> active:    pointer    Active vertex color layer
LoopColors.active_index -> active_index:    int    Active vertex color index
Macro.bl_description -> bl_description:    string    
Macro.bl_idname -> bl_idname:    string    
Macro.bl_label -> bl_label:    string    
Macro.bl_options -> bl_options:    enum    Options for this operator type
Macro.bl_translation_context -> bl_translation_context:    string    
Macro.name -> name:    string, (read-only)    
Macro.properties -> properties:    pointer, (read-only)    
MaskLayer.alpha -> alpha:    float    Render Opacity
MaskLayer.blend -> blend:    enum    Method of blending mask layers
MaskLayer.falloff -> falloff:    enum    Falloff type the feather
MaskLayer.hide -> hide:    boolean    Restrict visibility in the viewport
MaskLayer.hide_render -> hide_render:    boolean    Restrict renderability
MaskLayer.hide_select -> hide_select:    boolean    Restrict selection in the viewport
MaskLayer.invert -> invert:    boolean    Invert the mask black/white
MaskLayer.name -> name:    string    Unique name of layer
MaskLayer.select -> select:    boolean    Layer is selected for editing in the Dope Sheet
MaskLayer.splines -> splines:    collection, (read-only)    Collection of splines which defines this layer
MaskLayers.active -> active:    pointer    Active layer in this mask
MaskParent.id -> id:    pointer    ID-block to which masking element would be parented to or to it's property
MaskParent.id_type -> id_type:    enum    Type of ID-block that can be used
MaskParent.parent -> parent:    string    Name of parent object in specified data block to which parenting happens
MaskParent.sub_parent -> sub_parent:    string    Name of parent sub-object in specified data block to which parenting happens
MaskParent.type -> type:    enum    Parent Type
MaskSpline.offset_mode -> offset_mode:    enum    The method used for calculating the feather offset
MaskSpline.points -> points:    collection, (read-only)    Collection of points
MaskSpline.use_cyclic -> use_cyclic:    boolean    Make this spline a closed loop
MaskSpline.use_fill -> use_fill:    boolean    Make this spline filled
MaskSpline.use_self_intersection_check -> use_self_intersection_check:    boolean    Prevent feather from self-intersections
MaskSpline.weight_interpolation -> weight_interpolation:    enum    The type of weight interpolation for spline
MaskSplinePoint.co -> co:    float[2]    Coordinates of the control point
MaskSplinePoint.feather_points -> feather_points:    collection, (read-only)    Points defining feather
MaskSplinePoint.handle_left -> handle_left:    float[2]    Coordinates of the first handle
MaskSplinePoint.handle_right -> handle_right:    float[2]    Coordinates of the second handle
MaskSplinePoint.handle_type -> handle_type:    enum    Handle type
MaskSplinePoint.parent -> parent:    pointer, (read-only)    
MaskSplinePoint.select -> select:    boolean    Selection status
MaskSplinePointUW.select -> select:    boolean    Selection status
MaskSplinePointUW.u -> u:    float    U coordinate of point along spline segment
MaskSplinePointUW.weight -> weight:    float    Weight of feather point
MaskSplines.active -> active:    pointer    Active spline of masking layer
MaskSplines.active_point -> active_point:    pointer    Active spline of masking layer
MaterialGameSettings.alpha_blend -> alpha_blend:    enum    Blend Mode for Transparent Faces
MaterialGameSettings.face_orientation -> face_orientation:    enum    Especial face orientation options
MaterialGameSettings.invisible -> invisible:    boolean    Make face invisible
MaterialGameSettings.physics -> physics:    boolean    Use physics properties of materials
MaterialGameSettings.text -> text:    boolean    Use material as text in Game Engine
MaterialGameSettings.use_backface_culling -> use_backface_culling:    boolean    Hide Back of the face in Game Engine
MaterialHalo.add -> add:    float    Strength of the add effect
MaterialHalo.flare_boost -> flare_boost:    float    Give the flare extra strength
MaterialHalo.flare_seed -> flare_seed:    int    Offset in the flare seed table
MaterialHalo.flare_size -> flare_size:    float    Factor by which the flare is larger than the halo
MaterialHalo.flare_subflare_count -> flare_subflare_count:    int    Number of sub-flares
MaterialHalo.flare_subflare_size -> flare_subflare_size:    float    Dimension of the sub-flares, dots and circles
MaterialHalo.hardness -> hardness:    int    Hardness of the halo
MaterialHalo.line_count -> line_count:    int    Number of star shaped lines rendered over the halo
MaterialHalo.ring_count -> ring_count:    int    Number of rings rendered over the halo
MaterialHalo.seed -> seed:    int    Randomize ring dimension and line location
MaterialHalo.size -> size:    float    Dimension of the halo
MaterialHalo.star_tip_count -> star_tip_count:    int    Number of points on the star shaped halo
MaterialHalo.use_extreme_alpha -> use_extreme_alpha:    boolean    Use extreme alpha
MaterialHalo.use_flare_mode -> use_flare_mode:    boolean    Render halo as a lens flare
MaterialHalo.use_lines -> use_lines:    boolean    Render star shaped lines over halo
MaterialHalo.use_ring -> use_ring:    boolean    Render rings over halo
MaterialHalo.use_shaded -> use_shaded:    boolean    Let halo receive light and shadows from external objects
MaterialHalo.use_soft -> use_soft:    boolean    Soften the edges of halos at intersections with other geometry
MaterialHalo.use_star -> use_star:    boolean    Render halo as a star
MaterialHalo.use_texture -> use_texture:    boolean    Give halo a texture
MaterialHalo.use_vertex_normal -> use_vertex_normal:    boolean    Use the vertex normal to specify the dimension of the halo
MaterialPhysics.elasticity -> elasticity:    float    Elasticity of collisions
MaterialPhysics.fh_damping -> fh_damping:    float    Damping of the spring force, when inside the physics distance area
MaterialPhysics.fh_distance -> fh_distance:    float    Distance of the physics area
MaterialPhysics.fh_force -> fh_force:    float    Upward spring force, when inside the physics distance area
MaterialPhysics.friction -> friction:    float    Coulomb friction coefficient, when inside the physics distance area
MaterialPhysics.use_fh_normal -> use_fh_normal:    boolean    Align dynamic game objects along the surface normal, when inside the physics distance area
MaterialRaytraceMirror.depth -> depth:    int    Maximum allowed number of light inter-reflections
MaterialRaytraceMirror.distance -> distance:    float    Maximum distance of reflected rays (reflections further than this range fade to sky color or material color)
MaterialRaytraceMirror.fade_to -> fade_to:    enum    The color that rays with no intersection within the Max Distance take (material color can be best for indoor scenes, sky color for outdoor)
MaterialRaytraceMirror.fresnel -> fresnel:    float    Power of Fresnel for mirror reflection
MaterialRaytraceMirror.fresnel_factor -> fresnel_factor:    float    Blending factor for Fresnel
MaterialRaytraceMirror.gloss_anisotropic -> gloss_anisotropic:    float    The shape of the reflection, from 0.0 (circular) to 1.0 (fully stretched along the tangent
MaterialRaytraceMirror.gloss_factor -> gloss_factor:    float    The shininess of the reflection (values < 1.0 give diffuse, blurry reflections)
MaterialRaytraceMirror.gloss_samples -> gloss_samples:    int    Number of cone samples averaged for blurry reflections
MaterialRaytraceMirror.gloss_threshold -> gloss_threshold:    float    Threshold for adaptive sampling (if a sample contributes less than this amount [as a percentage], sampling is stopped)
MaterialRaytraceMirror.reflect_factor -> reflect_factor:    float    Amount of mirror reflection for raytrace
MaterialRaytraceMirror.use -> use:    boolean    Enable raytraced reflections
MaterialRaytraceTransparency.depth -> depth:    int    Maximum allowed number of light inter-refractions
MaterialRaytraceTransparency.depth_max -> depth_max:    float    Maximum depth for light to travel through the transparent material before becoming fully filtered (0.0 is disabled)
MaterialRaytraceTransparency.falloff -> falloff:    float    Falloff power for transmissivity filter effect (1.0 is linear)
MaterialRaytraceTransparency.filter -> filter:    float    Amount to blend in the material's diffuse color in raytraced transparency (simulating absorption)
MaterialRaytraceTransparency.fresnel -> fresnel:    float    Power of Fresnel for transparency (Ray or ZTransp)
MaterialRaytraceTransparency.fresnel_factor -> fresnel_factor:    float    Blending factor for Fresnel
MaterialRaytraceTransparency.gloss_factor -> gloss_factor:    float    The clarity of the refraction. Values < 1.0 give diffuse, blurry refractions
MaterialRaytraceTransparency.gloss_samples -> gloss_samples:    int    Number of cone samples averaged for blurry refractions
MaterialRaytraceTransparency.gloss_threshold -> gloss_threshold:    float    Threshold for adaptive sampling. If a sample contributes less than this amount (as a percentage), sampling is stopped
MaterialRaytraceTransparency.ior -> ior:    float    Angular index of refraction for raytraced refraction
MaterialSlot.link -> link:    enum    Link material to object or the object's data
MaterialSlot.material -> material:    pointer    Material datablock used by this material slot
MaterialSlot.name -> name:    string, (read-only)    Material slot name
MaterialStrand.blend_distance -> blend_distance:    float    Worldspace distance over which to blend in the surface normal
MaterialStrand.root_size -> root_size:    float    Start size of strands in pixels or Blender units
MaterialStrand.shape -> shape:    float    Positive values make strands rounder, negative ones make strands spiky
MaterialStrand.size_min -> size_min:    float    Minimum size of strands in pixels
MaterialStrand.tip_size -> tip_size:    float    End size of strands in pixels or Blender units
MaterialStrand.use_blender_units -> use_blender_units:    boolean    Use Blender units for widths instead of pixels
MaterialStrand.use_surface_diffuse -> use_surface_diffuse:    boolean, (read-only)    Make diffuse shading more similar to shading the surface
MaterialStrand.use_tangent_shading -> use_tangent_shading:    boolean    Use direction of strands as normal for tangent-shading
MaterialStrand.uv_layer -> uv_layer:    string    Name of UV map to override
MaterialStrand.width_fade -> width_fade:    float    Transparency along the width of the strand
MaterialSubsurfaceScattering.back -> back:    float    Back scattering weight
MaterialSubsurfaceScattering.color -> color:    float[3]    Scattering color
MaterialSubsurfaceScattering.color_factor -> color_factor:    float    Blend factor for SSS colors
MaterialSubsurfaceScattering.error_threshold -> error_threshold:    float    Error tolerance (low values are slower and higher quality)
MaterialSubsurfaceScattering.front -> front:    float    Front scattering weight
MaterialSubsurfaceScattering.ior -> ior:    float    Index of refraction (higher values are denser)
MaterialSubsurfaceScattering.radius -> radius:    float[3]    Mean red/green/blue scattering path length
MaterialSubsurfaceScattering.scale -> scale:    float    Object scale factor
MaterialSubsurfaceScattering.texture_factor -> texture_factor:    float    Texture scattering blend factor
MaterialSubsurfaceScattering.use -> use:    boolean    Enable diffuse subsurface scatting effects in a material
MaterialVolume.asymmetry -> asymmetry:    float    Back scattering (-1.0) to Forward scattering (1.0) and the range in between
MaterialVolume.cache_resolution -> cache_resolution:    int    Resolution of the voxel grid, low resolutions are faster, high resolutions use more memory
MaterialVolume.density -> density:    float    The base density of the volume
MaterialVolume.density_scale -> density_scale:    float    Multiplier for the material's density
MaterialVolume.depth_threshold -> depth_threshold:    float    Stop ray marching early if transmission drops below this luminance - higher values give speedups in dense volumes at the expense of accuracy
MaterialVolume.emission -> emission:    float    Amount of light that gets emitted by the volume
MaterialVolume.emission_color -> emission_color:    float[3]    Color of emitted light
MaterialVolume.light_method -> light_method:    enum    Method of shading, attenuating, and scattering light through the volume
MaterialVolume.ms_diffusion -> ms_diffusion:    float    Diffusion factor, the strength of the blurring effect
MaterialVolume.ms_intensity -> ms_intensity:    float    Multiplier for multiple scattered light energy
MaterialVolume.ms_spread -> ms_spread:    float    Proportional distance over which the light is diffused
MaterialVolume.reflection -> reflection:    float    Multiplier to make out-scattered light brighter or darker (non-physically correct)
MaterialVolume.reflection_color -> reflection_color:    float[3]    Color of light scattered out of the volume (does not affect transmission)
MaterialVolume.scattering -> scattering:    float    Amount of light that gets scattered out by the volume - the more out-scattering, the shallower the light will penetrate
MaterialVolume.step_method -> step_method:    enum    Method of calculating the steps through the volume
MaterialVolume.step_size -> step_size:    float    Distance between subsequent volume depth samples
MaterialVolume.transmission_color -> transmission_color:    float[3]    Result color of the volume, after other light has been scattered/absorbed
MaterialVolume.use_external_shadows -> use_external_shadows:    boolean    Receive shadows from sources outside the volume (temporary)
MaterialVolume.use_light_cache -> use_light_cache:    boolean    Pre-calculate the shading information into a voxel grid, speeds up shading at slightly less accuracy
Menu.bl_description -> bl_description:    string    
Menu.bl_idname -> bl_idname:    string    If this is set, the menu gets a custom ID, otherwise it takes the name of the class used to define the menu (for example, if the class name is "OBJECT_MT_hello", and bl_idname is not set by the
script, then bl_idname = "OBJECT_MT_hello")
Menu.bl_label -> bl_label:    string    The menu label
Menu.bl_translation_context -> bl_translation_context:    string    
Menu.layout -> layout:    pointer, (read-only)    Defines the structure of the menu in the UI
MeshColor.color1 -> color1:    float[3]    
MeshColor.color2 -> color2:    float[3]    
MeshColor.color3 -> color3:    float[3]    
MeshColor.color4 -> color4:    float[3]    
MeshColorLayer.active -> active:    boolean    Sets the layer as active for display and editing
MeshColorLayer.active_render -> active_render:    boolean    Sets the layer as active for rendering
MeshColorLayer.data -> data:    collection, (read-only)    
MeshColorLayer.name -> name:    string    Name of Vertex color layer
MeshEdge.bevel_weight -> bevel_weight:    float    Weight used by the Bevel modifier
MeshEdge.crease -> crease:    float    Weight used by the Subsurf modifier for creasing
MeshEdge.hide -> hide:    boolean    
MeshEdge.index -> index:    int, (read-only)    Index of this edge
MeshEdge.is_loose -> is_loose:    boolean    Loose edge
MeshEdge.select -> select:    boolean    
MeshEdge.use_edge_sharp -> use_edge_sharp:    boolean    Sharp edge for the EdgeSplit modifier
MeshEdge.use_seam -> use_seam:    boolean    Seam edge for UV unwrapping
MeshEdge.vertices -> vertices:    int[2]    Vertex indices
MeshFloatProperty.value -> value:    float    
MeshFloatPropertyLayer.data -> data:    collection, (read-only)    
MeshFloatPropertyLayer.name -> name:    string    
MeshIntProperty.value -> value:    int    
MeshIntPropertyLayer.data -> data:    collection, (read-only)    
MeshIntPropertyLayer.name -> name:    string    
MeshLoop.bitangent_sign -> bitangent_sign:    float, (read-only)    Sign of the bitangent vector of this vertex for this polygon (must be computed beforehand using calc_tangents, bitangent = bitangent_sign * cross(normal, tangent))
MeshLoop.edge_index -> edge_index:    int    Edge index
MeshLoop.index -> index:    int, (read-only)    Index of this loop
MeshLoop.normal -> normal:    float[3], (read-only)    Local space unit length split normal vector of this vertex for this polygon (must be computed beforehand using calc_normals_split or calc_tangents)
MeshLoop.tangent -> tangent:    float[3], (read-only)    Local space unit length tangent vector of this vertex for this polygon (must be computed beforehand using calc_tangents)
MeshLoop.vertex_index -> vertex_index:    int    Vertex index
MeshLoopColor.color -> color:    float[3]    
MeshLoopColorLayer.active -> active:    boolean    Sets the layer as active for display and editing
MeshLoopColorLayer.active_render -> active_render:    boolean    Sets the layer as active for rendering
MeshLoopColorLayer.data -> data:    collection, (read-only)    
MeshLoopColorLayer.name -> name:    string    Name of Vertex color layer
MeshPolygon.area -> area:    float, (read-only)    Read only area of this polygon
MeshPolygon.center -> center:    float[3], (read-only)    Center of this polygon
MeshPolygon.hide -> hide:    boolean    
MeshPolygon.index -> index:    int, (read-only)    Index of this polygon
MeshPolygon.loop_start -> loop_start:    int    Index of the first loop of this polygon
MeshPolygon.loop_total -> loop_total:    int    Number of loops used by this polygon
MeshPolygon.material_index -> material_index:    int    
MeshPolygon.normal -> normal:    float[3], (read-only)    Local space unit length normal vector for this polygon
MeshPolygon.select -> select:    boolean    
MeshPolygon.use_smooth -> use_smooth:    boolean    
MeshPolygon.vertices -> vertices:    int[3]    Vertex indices
MeshPolygons.active -> active:    int    The active polygon for this mesh
MeshSkinVertex.radius -> radius:    float[2]    Radius of the skin
MeshSkinVertex.use_loose -> use_loose:    boolean    If vertex has multiple adjacent edges, it is hulled to them directly
MeshSkinVertex.use_root -> use_root:    boolean    Vertex is a root for rotation calculations and armature generation
MeshSkinVertexLayer.data -> data:    collection, (read-only)    
MeshSkinVertexLayer.name -> name:    string    Name of skin layer
MeshStatVis.distort_max -> distort_max:    float    Maximum angle to display
MeshStatVis.distort_min -> distort_min:    float    Minimum angle to display
MeshStatVis.overhang_axis -> overhang_axis:    enum    
MeshStatVis.overhang_max -> overhang_max:    float    Maximum angle to display
MeshStatVis.overhang_min -> overhang_min:    float    Minimum angle to display
MeshStatVis.sharp_max -> sharp_max:    float    Maximum angle to display
MeshStatVis.sharp_min -> sharp_min:    float    Minimum angle to display
MeshStatVis.thickness_max -> thickness_max:    float    Maximum for measuring thickness
MeshStatVis.thickness_min -> thickness_min:    float    Minimum for measuring thickness
MeshStatVis.thickness_samples -> thickness_samples:    int    Number of samples to test per face
MeshStatVis.type -> type:    enum    XXX
MeshStringProperty.value -> value:    string    
MeshStringPropertyLayer.data -> data:    collection, (read-only)    
MeshStringPropertyLayer.name -> name:    string    
MeshTessFace.area -> area:    float, (read-only)    Read only area of this face
MeshTessFace.hide -> hide:    boolean    
MeshTessFace.index -> index:    int, (read-only)    Index of this face
MeshTessFace.material_index -> material_index:    int    
MeshTessFace.normal -> normal:    float[3], (read-only)    Local space unit length normal vector for this face
MeshTessFace.select -> select:    boolean    
MeshTessFace.use_smooth -> use_smooth:    boolean    
MeshTessFace.vertices -> vertices:    int[4]    Vertex indices
MeshTessFace.vertices_raw -> vertices_raw:    int[4]    Fixed size vertex indices array
MeshTessFaces.active -> active:    int    The active face for this mesh
MeshTextureFace.image -> image:    pointer    
MeshTextureFace.uv -> uv:    float[8]    
MeshTextureFace.uv1 -> uv1:    float[2]    
MeshTextureFace.uv2 -> uv2:    float[2]    
MeshTextureFace.uv3 -> uv3:    float[2]    
MeshTextureFace.uv4 -> uv4:    float[2]    
MeshTextureFace.uv_raw -> uv_raw:    float[8]    Fixed size UV coordinates array
MeshTextureFaceLayer.active -> active:    boolean    Set the map as active for display and editing
MeshTextureFaceLayer.active_clone -> active_clone:    boolean    Set the map as active for cloning
MeshTextureFaceLayer.active_render -> active_render:    boolean    Set the map as active for rendering
MeshTextureFaceLayer.data -> data:    collection, (read-only)    
MeshTextureFaceLayer.name -> name:    string    Name of UV map
MeshTexturePoly.image -> image:    pointer    
MeshTexturePolyLayer.active -> active:    boolean    Set the map as active for display and editing
MeshTexturePolyLayer.active_clone -> active_clone:    boolean    Set the map as active for cloning
MeshTexturePolyLayer.active_render -> active_render:    boolean    Set the map as active for rendering
MeshTexturePolyLayer.data -> data:    collection, (read-only)    
MeshTexturePolyLayer.name -> name:    string    Name of UV map
MeshUVLoop.pin_uv -> pin_uv:    boolean    
MeshUVLoop.select -> select:    boolean    
MeshUVLoop.select_edge -> select_edge:    boolean    
MeshUVLoop.uv -> uv:    float[2]    
MeshUVLoopLayer.data -> data:    collection, (read-only)    
MeshUVLoopLayer.name -> name:    string    Name of UV map
MeshVertex.bevel_weight -> bevel_weight:    float    Weight used by the Bevel modifier 'Only Vertices' option
MeshVertex.co -> co:    float[3]    
MeshVertex.groups -> groups:    collection, (read-only)    Weights for the vertex groups this vertex is member of
MeshVertex.hide -> hide:    boolean    
MeshVertex.index -> index:    int, (read-only)    Index of this vertex
MeshVertex.normal -> normal:    float[3]    Vertex Normal
MeshVertex.select -> select:    boolean    
MeshVertex.undeformed_co -> undeformed_co:    float[3], (read-only)    For meshes with modifiers applied, the coordinate of the vertex with no deforming modifiers applied, as used for generated texture coordinates
MetaBallElements.active -> active:    pointer, (read-only)    Last selected element
MetaElement.co -> co:    float[3]    
MetaElement.hide -> hide:    boolean    Hide element
MetaElement.radius -> radius:    float    
MetaElement.rotation -> rotation:    float[4]    Normalized quaternion rotation
MetaElement.size_x -> size_x:    float    Size of element, use of components depends on element type
MetaElement.size_y -> size_y:    float    Size of element, use of components depends on element type
MetaElement.size_z -> size_z:    float    Size of element, use of components depends on element type
MetaElement.stiffness -> stiffness:    float    Stiffness defines how much of the element to fill
MetaElement.type -> type:    enum    Metaball types
MetaElement.use_negative -> use_negative:    boolean    Set metaball as negative one
Modifier.name -> name:    string    Modifier name
Modifier.show_expanded -> show_expanded:    boolean    Set modifier expanded in the user interface
Modifier.show_in_editmode -> show_in_editmode:    boolean    Use modifier while in the Edit mode
Modifier.show_on_cage -> show_on_cage:    boolean    Enable direct editing of modifier control cage
Modifier.show_render -> show_render:    boolean    Use modifier during rendering
Modifier.show_viewport -> show_viewport:    boolean    Display modifier in realtime
Modifier.type -> type:    enum, (read-only)    
Modifier.use_apply_on_spline -> use_apply_on_spline:    boolean    Apply this and all preceding deformation modifiers on splines' points rather than on filled curve/surface
Modifier|ArmatureModifier.invert_vertex_group -> invert_vertex_group:    boolean    Invert vertex group influence
Modifier|ArmatureModifier.object -> object:    pointer    Armature object to deform with
Modifier|ArmatureModifier.use_bone_envelopes -> use_bone_envelopes:    boolean    Bind Bone envelopes to armature modifier
Modifier|ArmatureModifier.use_deform_preserve_volume -> use_deform_preserve_volume:    boolean    Deform rotation interpolation with quaternions
Modifier|ArmatureModifier.use_multi_modifier -> use_multi_modifier:    boolean    Use same input as previous modifier, and mix results using overall vgroup
Modifier|ArmatureModifier.use_vertex_groups -> use_vertex_groups:    boolean    Bind vertex groups to armature modifier
Modifier|ArmatureModifier.vertex_group -> vertex_group:    string    Name of Vertex Group which determines influence of modifier per point
Modifier|ArrayModifier.constant_offset_displace -> constant_offset_displace:    float[3]    Value for the distance between arrayed items
Modifier|ArrayModifier.count -> count:    int    Number of duplicates to make
Modifier|ArrayModifier.curve -> curve:    pointer    Curve object to fit array length to
Modifier|ArrayModifier.end_cap -> end_cap:    pointer    Mesh object to use as an end cap
Modifier|ArrayModifier.fit_length -> fit_length:    float    Length to fit array within
Modifier|ArrayModifier.fit_type -> fit_type:    enum    Array length calculation method
Modifier|ArrayModifier.merge_threshold -> merge_threshold:    float    Limit below which to merge vertices
Modifier|ArrayModifier.offset_object -> offset_object:    pointer    Use the location and rotation of another object to determine the distance and rotational change between arrayed items
Modifier|ArrayModifier.relative_offset_displace -> relative_offset_displace:    float[3]    The size of the geometry will determine the distance between arrayed items
Modifier|ArrayModifier.start_cap -> start_cap:    pointer    Mesh object to use as a start cap
Modifier|ArrayModifier.use_constant_offset -> use_constant_offset:    boolean    Add a constant offset
Modifier|ArrayModifier.use_merge_vertices -> use_merge_vertices:    boolean    Merge vertices in adjacent duplicates
Modifier|ArrayModifier.use_merge_vertices_cap -> use_merge_vertices_cap:    boolean    Merge vertices in first and last duplicates
Modifier|ArrayModifier.use_object_offset -> use_object_offset:    boolean    Add another object's transformation to the total offset
Modifier|ArrayModifier.use_relative_offset -> use_relative_offset:    boolean    Add an offset relative to the object's bounding box
Modifier|BevelModifier.angle_limit -> angle_limit:    float    Angle above which to bevel edges
Modifier|BevelModifier.edge_weight_method -> edge_weight_method:    enum    What edge weight to use for weighting a vertex
Modifier|BevelModifier.limit_method -> limit_method:    enum    
Modifier|BevelModifier.segments -> segments:    int    Number of segments for round edges/verts
Modifier|BevelModifier.use_clamp_overlap -> use_clamp_overlap:    boolean    Clamp the width to avoid overlap
Modifier|BevelModifier.use_only_vertices -> use_only_vertices:    boolean    Bevel verts/corners, not edges
Modifier|BevelModifier.vertex_group -> vertex_group:    string    Vertex group name
Modifier|BevelModifier.width -> width:    float    Bevel value/amount
Modifier|BooleanModifier.object -> object:    pointer    Mesh object to use for Boolean operation
Modifier|BooleanModifier.operation -> operation:    enum    
Modifier|BuildModifier.frame_duration -> frame_duration:    float    Total time the build effect requires
Modifier|BuildModifier.frame_start -> frame_start:    float    Start frame of the effect
Modifier|BuildModifier.seed -> seed:    int    Seed for random if used
Modifier|BuildModifier.use_random_order -> use_random_order:    boolean    Randomize the faces or edges during build
Modifier|CastModifier.cast_type -> cast_type:    enum    Target object shape
Modifier|CastModifier.factor -> factor:    float    
Modifier|CastModifier.object -> object:    pointer    Control object: if available, its location determines the center of the effect
Modifier|CastModifier.radius -> radius:    float    Only deform vertices within this distance from the center of the effect (leave as 0 for infinite.)
Modifier|CastModifier.size -> size:    float    Size of projection shape (leave as 0 for auto)
Modifier|CastModifier.use_radius_as_size -> use_radius_as_size:    boolean    Use radius as size of projection shape (0 = auto)
Modifier|CastModifier.use_transform -> use_transform:    boolean    Use object transform to control projection shape
Modifier|CastModifier.use_x -> use_x:    boolean    
Modifier|CastModifier.use_y -> use_y:    boolean    
Modifier|CastModifier.use_z -> use_z:    boolean    
Modifier|CastModifier.vertex_group -> vertex_group:    string    Vertex group name
Modifier|ClothModifier.collision_settings -> collision_settings:    pointer, (read-only)    
Modifier|ClothModifier.point_cache -> point_cache:    pointer, (read-only)    
Modifier|ClothModifier.settings -> settings:    pointer, (read-only)    
Modifier|CollisionModifier.settings -> settings:    pointer, (read-only)    
Modifier|CurveModifier.deform_axis -> deform_axis:    enum    The axis that the curve deforms along
Modifier|CurveModifier.object -> object:    pointer    Curve object to deform with
Modifier|CurveModifier.vertex_group -> vertex_group:    string    Name of Vertex Group which determines influence of modifier per point
Modifier|DecimateModifier.angle_limit -> angle_limit:    float    Only dissolve angles below this (planar only)
Modifier|DecimateModifier.decimate_type -> decimate_type:    enum    
Modifier|DecimateModifier.delimit -> delimit:    enum    Limit merging geometry
Modifier|DecimateModifier.face_count -> face_count:    int, (read-only)    The current number of faces in the decimated mesh
Modifier|DecimateModifier.invert_vertex_group -> invert_vertex_group:    boolean    Invert vertex group influence (collapse only)
Modifier|DecimateModifier.iterations -> iterations:    int    Number of times reduce the geometry (unsubdivide only)
Modifier|DecimateModifier.ratio -> ratio:    float    Ratio of triangles to reduce to (collapse only)
Modifier|DecimateModifier.use_collapse_triangulate -> use_collapse_triangulate:    boolean    Keep triangulated faces resulting from decimation (collapse only)
Modifier|DecimateModifier.use_dissolve_boundaries -> use_dissolve_boundaries:    boolean    Dissolve all vertices inbetween face boundaries (planar only)
Modifier|DecimateModifier.vertex_group -> vertex_group:    string    Vertex group name (collapse only)
Modifier|DisplaceModifier.direction -> direction:    enum    
Modifier|DisplaceModifier.mid_level -> mid_level:    float    Material value that gives no displacement
Modifier|DisplaceModifier.strength -> strength:    float    Amount to displace geometry
Modifier|DisplaceModifier.texture -> texture:    pointer    
Modifier|DisplaceModifier.texture_coords -> texture_coords:    enum    
Modifier|DisplaceModifier.texture_coords_object -> texture_coords_object:    pointer    Object to set the texture coordinates
Modifier|DisplaceModifier.uv_layer -> uv_layer:    string    UV map name
Modifier|DisplaceModifier.vertex_group -> vertex_group:    string    Name of Vertex Group which determines influence of modifier per point
Modifier|DynamicPaintModifier.brush_settings -> brush_settings:    pointer, (read-only)    
Modifier|DynamicPaintModifier.canvas_settings -> canvas_settings:    pointer, (read-only)    
Modifier|DynamicPaintModifier.ui_type -> ui_type:    enum    
Modifier|EdgeSplitModifier.split_angle -> split_angle:    float    Angle above which to split edges
Modifier|EdgeSplitModifier.use_edge_angle -> use_edge_angle:    boolean    Split edges with high angle between faces
Modifier|EdgeSplitModifier.use_edge_sharp -> use_edge_sharp:    boolean    Split edges that are marked as sharp
Modifier|ExplodeModifier.particle_uv -> particle_uv:    string    UV map to change with particle age
Modifier|ExplodeModifier.protect -> protect:    float    Clean vertex group edges
Modifier|ExplodeModifier.show_alive -> show_alive:    boolean    Show mesh when particles are alive
Modifier|ExplodeModifier.show_dead -> show_dead:    boolean    Show mesh when particles are dead
Modifier|ExplodeModifier.show_unborn -> show_unborn:    boolean    Show mesh when particles are unborn
Modifier|ExplodeModifier.use_edge_cut -> use_edge_cut:    boolean    Cut face edges for nicer shrapnel
Modifier|ExplodeModifier.use_size -> use_size:    boolean    Use particle size for the shrapnel
Modifier|ExplodeModifier.vertex_group -> vertex_group:    string    
Modifier|FluidSimulationModifier.settings -> settings:    pointer, (read-only)    Settings for how this object is used in the fluid simulation
Modifier|HookModifier.falloff -> falloff:    float    If not zero, the distance from the hook where influence ends
Modifier|HookModifier.force -> force:    float    Relative force of the hook
Modifier|HookModifier.object -> object:    pointer    Parent Object for hook, also recalculates and clears offset
Modifier|HookModifier.subtarget -> subtarget:    string    Name of Parent Bone for hook (if applicable), also recalculates and clears offset
Modifier|HookModifier.vertex_group -> vertex_group:    string    Name of Vertex Group which determines influence of modifier per point
Modifier|LaplacianDeformModifier.is_bind -> is_bind:    boolean, (read-only)    Whether geometry has been bound to anchors
Modifier|LaplacianDeformModifier.iterations -> iterations:    int    
Modifier|LaplacianDeformModifier.vertex_group -> vertex_group:    string    Name of Vertex Group which determines Anchors
Modifier|LaplacianSmoothModifier.iterations -> iterations:    int    
Modifier|LaplacianSmoothModifier.lambda_border -> lambda_border:    float    Lambda factor in border
Modifier|LaplacianSmoothModifier.lambda_factor -> lambda_factor:    float    Smooth factor effect
Modifier|LaplacianSmoothModifier.use_normalized -> use_normalized:    boolean    Improve and stabilize the enhanced shape
Modifier|LaplacianSmoothModifier.use_volume_preserve -> use_volume_preserve:    boolean    Apply volume preservation after smooth
Modifier|LaplacianSmoothModifier.use_x -> use_x:    boolean    Smooth object along X axis
Modifier|LaplacianSmoothModifier.use_y -> use_y:    boolean    Smooth object along Y axis
Modifier|LaplacianSmoothModifier.use_z -> use_z:    boolean    Smooth object along Z axis
Modifier|LaplacianSmoothModifier.vertex_group -> vertex_group:    string    Name of Vertex Group which determines influence of modifier per point
Modifier|LatticeModifier.object -> object:    pointer    Lattice object to deform with
Modifier|LatticeModifier.strength -> strength:    float    Strength of modifier effect
Modifier|LatticeModifier.vertex_group -> vertex_group:    string    Name of Vertex Group which determines influence of modifier per point
Modifier|MaskModifier.armature -> armature:    pointer    Armature to use as source of bones to mask
Modifier|MaskModifier.invert_vertex_group -> invert_vertex_group:    boolean    Use vertices that are not part of region defined
Modifier|MaskModifier.mode -> mode:    enum    
Modifier|MaskModifier.vertex_group -> vertex_group:    string    Vertex group name
Modifier|MeshCacheModifier.cache_format -> cache_format:    enum    
Modifier|MeshCacheModifier.deform_mode -> deform_mode:    enum    
Modifier|MeshCacheModifier.eval_factor -> eval_factor:    float    Evaluation time in seconds
Modifier|MeshCacheModifier.eval_frame -> eval_frame:    float    The frame to evaluate (starting at 0)
Modifier|MeshCacheModifier.eval_time -> eval_time:    float    Evaluation time in seconds
Modifier|MeshCacheModifier.factor -> factor:    float    Influence of the deformation
Modifier|MeshCacheModifier.filepath -> filepath:    string    Path to external displacements file
Modifier|MeshCacheModifier.flip_axis -> flip_axis:    enum    
Modifier|MeshCacheModifier.forward_axis -> forward_axis:    enum    
Modifier|MeshCacheModifier.frame_scale -> frame_scale:    float    Evaluation time in seconds
Modifier|MeshCacheModifier.frame_start -> frame_start:    float    Add this to the start frame
Modifier|MeshCacheModifier.interpolation -> interpolation:    enum    
Modifier|MeshCacheModifier.play_mode -> play_mode:    enum    
Modifier|MeshCacheModifier.time_mode -> time_mode:    enum    Method to control playback time
Modifier|MeshCacheModifier.up_axis -> up_axis:    enum    
Modifier|MeshDeformModifier.invert_vertex_group -> invert_vertex_group:    boolean    Invert vertex group influence
Modifier|MeshDeformModifier.is_bound -> is_bound:    boolean, (read-only)    Whether geometry has been bound to control cage
Modifier|MeshDeformModifier.object -> object:    pointer    Mesh object to deform with
Modifier|MeshDeformModifier.precision -> precision:    int    The grid size for binding
Modifier|MeshDeformModifier.use_dynamic_bind -> use_dynamic_bind:    boolean    Recompute binding dynamically on top of other deformers (slower and more memory consuming)
Modifier|MeshDeformModifier.vertex_group -> vertex_group:    string    Vertex group name
Modifier|MirrorModifier.merge_threshold -> merge_threshold:    float    Distance from axis within which mirrored vertices are merged
Modifier|MirrorModifier.mirror_object -> mirror_object:    pointer    Object to use as mirror
Modifier|MirrorModifier.use_clip -> use_clip:    boolean    Prevent vertices from going through the mirror during transform
Modifier|MirrorModifier.use_mirror_merge -> use_mirror_merge:    boolean    Merge vertices within the merge threshold
Modifier|MirrorModifier.use_mirror_u -> use_mirror_u:    boolean    Mirror the U texture coordinate around the 0.5 point
Modifier|MirrorModifier.use_mirror_v -> use_mirror_v:    boolean    Mirror the V texture coordinate around the 0.5 point
Modifier|MirrorModifier.use_mirror_vertex_groups -> use_mirror_vertex_groups:    boolean    Mirror vertex groups (e.g. .R->.L)
Modifier|MirrorModifier.use_x -> use_x:    boolean    Enable X axis mirror
Modifier|MirrorModifier.use_y -> use_y:    boolean    Enable Y axis mirror
Modifier|MirrorModifier.use_z -> use_z:    boolean    Enable Z axis mirror
Modifier|MultiresModifier.filepath -> filepath:    string    Path to external displacements file
Modifier|MultiresModifier.is_external -> is_external:    boolean, (read-only)    Store multires displacements outside the .blend file, to save memory
Modifier|MultiresModifier.levels -> levels:    int    Number of subdivisions to use in the viewport
Modifier|MultiresModifier.render_levels -> render_levels:    int    The subdivision level visible at render time
Modifier|MultiresModifier.sculpt_levels -> sculpt_levels:    int    Number of subdivisions to use in sculpt mode
Modifier|MultiresModifier.show_only_control_edges -> show_only_control_edges:    boolean    Skip drawing/rendering of interior subdivided edges
Modifier|MultiresModifier.subdivision_type -> subdivision_type:    enum    Select type of subdivision algorithm
Modifier|MultiresModifier.total_levels -> total_levels:    int, (read-only)    Number of subdivisions for which displacements are stored
Modifier|MultiresModifier.use_subsurf_uv -> use_subsurf_uv:    boolean    Use subsurf to subdivide UVs
Modifier|OceanModifier.bake_foam_fade -> bake_foam_fade:    float    How much foam accumulates over time (baked ocean only)
Modifier|OceanModifier.choppiness -> choppiness:    float    Choppiness of the wave's crest (adds some horizontal component to the displacement)
Modifier|OceanModifier.damping -> damping:    float    Damp reflected waves going in opposite direction to the wind
Modifier|OceanModifier.depth -> depth:    float    Depth of the solid ground below the water surface
Modifier|OceanModifier.filepath -> filepath:    string    Path to a folder to store external baked images
Modifier|OceanModifier.foam_coverage -> foam_coverage:    float    Amount of generated foam
Modifier|OceanModifier.foam_layer_name -> foam_layer_name:    string    Name of the vertex color layer used for foam
Modifier|OceanModifier.frame_end -> frame_end:    int    End frame of the ocean baking
Modifier|OceanModifier.frame_start -> frame_start:    int    Start frame of the ocean baking
Modifier|OceanModifier.geometry_mode -> geometry_mode:    enum    Method of modifying geometry
Modifier|OceanModifier.is_cached -> is_cached:    boolean, (read-only)    Whether the ocean is using cached data or simulating
Modifier|OceanModifier.random_seed -> random_seed:    int    Seed of the random generator
Modifier|OceanModifier.repeat_x -> repeat_x:    int    Repetitions of the generated surface in X
Modifier|OceanModifier.repeat_y -> repeat_y:    int    Repetitions of the generated surface in Y
Modifier|OceanModifier.resolution -> resolution:    int    Resolution of the generated surface
Modifier|OceanModifier.size -> size:    float    Surface scale factor (does not affect the height of the waves)
Modifier|OceanModifier.spatial_size -> spatial_size:    int    Size of the simulation domain (in meters), and of the generated geometry (in BU)
Modifier|OceanModifier.time -> time:    float    Current time of the simulation
Modifier|OceanModifier.use_foam -> use_foam:    boolean    Generate foam mask as a vertex color channel
Modifier|OceanModifier.use_normals -> use_normals:    boolean    Output normals for bump mapping - disabling can speed up performance if its not needed
Modifier|OceanModifier.wave_alignment -> wave_alignment:    float    How much the waves are aligned to each other
Modifier|OceanModifier.wave_direction -> wave_direction:    float    Main direction of the waves when they are (partially) aligned
Modifier|OceanModifier.wave_scale -> wave_scale:    float    Scale of the displacement effect
Modifier|OceanModifier.wave_scale_min -> wave_scale_min:    float    Shortest allowed wavelength
Modifier|OceanModifier.wind_velocity -> wind_velocity:    float    Wind speed
Modifier|ParticleInstanceModifier.axis -> axis:    enum    Pole axis for rotation
Modifier|ParticleInstanceModifier.object -> object:    pointer    Object that has the particle system
Modifier|ParticleInstanceModifier.particle_system_index -> particle_system_index:    int    
Modifier|ParticleInstanceModifier.position -> position:    float    Position along path
Modifier|ParticleInstanceModifier.random_position -> random_position:    float    Randomize position along path
Modifier|ParticleInstanceModifier.show_alive -> show_alive:    boolean    Show instances when particles are alive
Modifier|ParticleInstanceModifier.show_dead -> show_dead:    boolean    Show instances when particles are dead
Modifier|ParticleInstanceModifier.show_unborn -> show_unborn:    boolean    Show instances when particles are unborn
Modifier|ParticleInstanceModifier.use_children -> use_children:    boolean    Create instances from child particles
Modifier|ParticleInstanceModifier.use_normal -> use_normal:    boolean    Create instances from normal particles
Modifier|ParticleInstanceModifier.use_path -> use_path:    boolean    Create instances along particle paths
Modifier|ParticleInstanceModifier.use_preserve_shape -> use_preserve_shape:    boolean    Don't stretch the object
Modifier|ParticleInstanceModifier.use_size -> use_size:    boolean    Use particle size to scale the instances
Modifier|ParticleSystemModifier.particle_system -> particle_system:    pointer, (read-only)    Particle System that this modifier controls
Modifier|RemeshModifier.mode -> mode:    enum    
Modifier|RemeshModifier.octree_depth -> octree_depth:    int    Resolution of the octree; higher values give finer details
Modifier|RemeshModifier.scale -> scale:    float    The ratio of the largest dimension of the model over the size of the grid
Modifier|RemeshModifier.sharpness -> sharpness:    float    Tolerance for outliers; lower values filter noise while higher values will reproduce edges closer to the input
Modifier|RemeshModifier.threshold -> threshold:    float    If removing disconnected pieces, minimum size of components to preserve as a ratio of the number of polygons in the largest component
Modifier|RemeshModifier.use_remove_disconnected -> use_remove_disconnected:    boolean    
Modifier|RemeshModifier.use_smooth_shade -> use_smooth_shade:    boolean    Output faces with smooth shading rather than flat shaded
Modifier|ScrewModifier.angle -> angle:    float    Angle of revolution
Modifier|ScrewModifier.axis -> axis:    enum    Screw axis
Modifier|ScrewModifier.iterations -> iterations:    int    Number of times to apply the screw operation
Modifier|ScrewModifier.object -> object:    pointer    Object to define the screw axis
Modifier|ScrewModifier.render_steps -> render_steps:    int    Number of steps in the revolution
Modifier|ScrewModifier.screw_offset -> screw_offset:    float    Offset the revolution along its axis
Modifier|ScrewModifier.steps -> steps:    int    Number of steps in the revolution
Modifier|ScrewModifier.use_normal_calculate -> use_normal_calculate:    boolean    Calculate the order of edges (needed for meshes, but not curves)
Modifier|ScrewModifier.use_normal_flip -> use_normal_flip:    boolean    Flip normals of lathed faces
Modifier|ScrewModifier.use_object_screw_offset -> use_object_screw_offset:    boolean    Use the distance between the objects to make a screw
Modifier|ScrewModifier.use_smooth_shade -> use_smooth_shade:    boolean    Output faces with smooth shading rather than flat shaded
Modifier|ScrewModifier.use_stretch_u -> use_stretch_u:    boolean    Stretch the U coordinates between 0-1 when UV's are present
Modifier|ScrewModifier.use_stretch_v -> use_stretch_v:    boolean    Stretch the V coordinates between 0-1 when UV's are present
Modifier|ShrinkwrapModifier.auxiliary_target -> auxiliary_target:    pointer    Additional mesh target to shrink to
Modifier|ShrinkwrapModifier.cull_face -> cull_face:    enum    Stop vertices from projecting to a face on the target when facing towards/away
Modifier|ShrinkwrapModifier.offset -> offset:    float    Distance to keep from the target
Modifier|ShrinkwrapModifier.project_limit -> project_limit:    float    Limit the distance used for projection (zero disables)
Modifier|ShrinkwrapModifier.subsurf_levels -> subsurf_levels:    int    Number of subdivisions that must be performed before extracting vertices' positions and normals
Modifier|ShrinkwrapModifier.target -> target:    pointer    Mesh target to shrink to
Modifier|ShrinkwrapModifier.use_keep_above_surface -> use_keep_above_surface:    boolean    
Modifier|ShrinkwrapModifier.use_negative_direction -> use_negative_direction:    boolean    Allow vertices to move in the negative direction of axis
Modifier|ShrinkwrapModifier.use_positive_direction -> use_positive_direction:    boolean    Allow vertices to move in the positive direction of axis
Modifier|ShrinkwrapModifier.use_project_x -> use_project_x:    boolean    
Modifier|ShrinkwrapModifier.use_project_y -> use_project_y:    boolean    
Modifier|ShrinkwrapModifier.use_project_z -> use_project_z:    boolean    
Modifier|ShrinkwrapModifier.vertex_group -> vertex_group:    string    Vertex group name
Modifier|ShrinkwrapModifier.wrap_method -> wrap_method:    enum    
Modifier|SimpleDeformModifier.angle -> angle:    float    Angle of deformation
Modifier|SimpleDeformModifier.deform_method -> deform_method:    enum    
Modifier|SimpleDeformModifier.factor -> factor:    float    Amount to deform object
Modifier|SimpleDeformModifier.limits -> limits:    float[2]    Lower/Upper limits for deform
Modifier|SimpleDeformModifier.lock_x -> lock_x:    boolean    Do not allow deformation along the X axis
Modifier|SimpleDeformModifier.lock_y -> lock_y:    boolean    Do not allow deformation along the Y axis
Modifier|SimpleDeformModifier.origin -> origin:    pointer    Origin of modifier space coordinates
Modifier|SimpleDeformModifier.vertex_group -> vertex_group:    string    Vertex group name
Modifier|SkinModifier.branch_smoothing -> branch_smoothing:    float    Smooth complex geometry around branches
Modifier|SkinModifier.use_smooth_shade -> use_smooth_shade:    boolean    Output faces with smooth shading rather than flat shaded
Modifier|SkinModifier.use_x_symmetry -> use_x_symmetry:    boolean    Avoid making unsymmetrical quads across the X axis
Modifier|SkinModifier.use_y_symmetry -> use_y_symmetry:    boolean    Avoid making unsymmetrical quads across the Y axis
Modifier|SkinModifier.use_z_symmetry -> use_z_symmetry:    boolean    Avoid making unsymmetrical quads across the Z axis
Modifier|SmokeModifier.coll_settings -> coll_settings:    pointer, (read-only)    
Modifier|SmokeModifier.domain_settings -> domain_settings:    pointer, (read-only)    
Modifier|SmokeModifier.flow_settings -> flow_settings:    pointer, (read-only)    
Modifier|SmokeModifier.smoke_type -> smoke_type:    enum    
Modifier|SmoothModifier.factor -> factor:    float    Strength of modifier effect
Modifier|SmoothModifier.iterations -> iterations:    int    
Modifier|SmoothModifier.use_x -> use_x:    boolean    Smooth object along X axis
Modifier|SmoothModifier.use_y -> use_y:    boolean    Smooth object along Y axis
Modifier|SmoothModifier.use_z -> use_z:    boolean    Smooth object along Z axis
Modifier|SmoothModifier.vertex_group -> vertex_group:    string    Name of Vertex Group which determines influence of modifier per point
Modifier|SoftBodyModifier.point_cache -> point_cache:    pointer, (read-only)    
Modifier|SoftBodyModifier.settings -> settings:    pointer, (read-only)    
Modifier|SolidifyModifier.edge_crease_inner -> edge_crease_inner:    float    Assign a crease to inner edges
Modifier|SolidifyModifier.edge_crease_outer -> edge_crease_outer:    float    Assign a crease to outer edges
Modifier|SolidifyModifier.edge_crease_rim -> edge_crease_rim:    float    Assign a crease to the edges making up the rim
Modifier|SolidifyModifier.invert_vertex_group -> invert_vertex_group:    boolean    Invert the vertex group influence
Modifier|SolidifyModifier.material_offset -> material_offset:    int    Offset material index of generated faces
Modifier|SolidifyModifier.material_offset_rim -> material_offset_rim:    int    Offset material index of generated rim faces
Modifier|SolidifyModifier.offset -> offset:    float    Offset the thickness from the center
Modifier|SolidifyModifier.thickness -> thickness:    float    Thickness of the shell
Modifier|SolidifyModifier.thickness_clamp -> thickness_clamp:    float    Offset clamp based on geometry scale
Modifier|SolidifyModifier.thickness_vertex_group -> thickness_vertex_group:    float    Thickness factor to use for zero vertex group influence
Modifier|SolidifyModifier.use_even_offset -> use_even_offset:    boolean    Maintain thickness by adjusting for sharp corners (slow, disable when not needed)
Modifier|SolidifyModifier.use_flip_normals -> use_flip_normals:    boolean    Invert the face direction
Modifier|SolidifyModifier.use_quality_normals -> use_quality_normals:    boolean    Calculate normals which result in more even thickness (slow, disable when not needed)
Modifier|SolidifyModifier.use_rim -> use_rim:    boolean    Create edge loops between the inner and outer surfaces on face edges (slow, disable when not needed)
Modifier|SolidifyModifier.vertex_group -> vertex_group:    string    Vertex group name
Modifier|SubsurfModifier.levels -> levels:    int    Number of subdivisions to perform
Modifier|SubsurfModifier.render_levels -> render_levels:    int    Number of subdivisions to perform when rendering
Modifier|SubsurfModifier.show_only_control_edges -> show_only_control_edges:    boolean    Skip drawing/rendering of interior subdivided edges
Modifier|SubsurfModifier.subdivision_type -> subdivision_type:    enum    Select type of subdivision algorithm
Modifier|SubsurfModifier.use_subsurf_uv -> use_subsurf_uv:    boolean    Use subsurf to subdivide UVs
Modifier|TriangulateModifier.ngon_method -> ngon_method:    enum    Method for splitting the polygons into triangles
Modifier|TriangulateModifier.quad_method -> quad_method:    enum    Method for splitting the quads into triangles
Modifier|UVProjectModifier.aspect_x -> aspect_x:    float    
Modifier|UVProjectModifier.aspect_y -> aspect_y:    float    
Modifier|UVProjectModifier.image -> image:    pointer    
Modifier|UVProjectModifier.projector_count -> projector_count:    int    Number of projectors to use
Modifier|UVProjectModifier.projectors -> projectors:    collection, (read-only)    
Modifier|UVProjectModifier.scale_x -> scale_x:    float    
Modifier|UVProjectModifier.scale_y -> scale_y:    float    
Modifier|UVProjectModifier.use_image_override -> use_image_override:    boolean    Override faces' current images with the given image
Modifier|UVProjectModifier.uv_layer -> uv_layer:    string    UV map name
Modifier|UVWarpModifier.axis_u -> axis_u:    enum    Pole axis for rotation
Modifier|UVWarpModifier.axis_v -> axis_v:    enum    Pole axis for rotation
Modifier|UVWarpModifier.bone_from -> bone_from:    string    Bone defining offset
Modifier|UVWarpModifier.bone_to -> bone_to:    string    Bone defining offset
Modifier|UVWarpModifier.center -> center:    float[2]    Center point for rotate/scale
Modifier|UVWarpModifier.object_from -> object_from:    pointer    Object defining offset
Modifier|UVWarpModifier.object_to -> object_to:    pointer    Object defining offset
Modifier|UVWarpModifier.uv_layer -> uv_layer:    string    UV Layer name
Modifier|UVWarpModifier.vertex_group -> vertex_group:    string    Vertex group name
Modifier|VertexWeightEditModifier.add_threshold -> add_threshold:    float    Lower bound for a vertex's weight to be added to the vgroup
Modifier|VertexWeightEditModifier.default_weight -> default_weight:    float    Default weight a vertex will have if it is not in the vgroup
Modifier|VertexWeightEditModifier.falloff_type -> falloff_type:    enum    How weights are mapped to their new values
Modifier|VertexWeightEditModifier.map_curve -> map_curve:    pointer, (read-only)    Custom mapping curve
Modifier|VertexWeightEditModifier.mask_constant -> mask_constant:    float    Global influence of current modifications on vgroup
Modifier|VertexWeightEditModifier.mask_tex_map_object -> mask_tex_map_object:    pointer    Which object to take texture coordinates from
Modifier|VertexWeightEditModifier.mask_tex_mapping -> mask_tex_mapping:    enum    Which texture coordinates to use for mapping
Modifier|VertexWeightEditModifier.mask_tex_use_channel -> mask_tex_use_channel:    enum    Which texture channel to use for masking
Modifier|VertexWeightEditModifier.mask_tex_uv_layer -> mask_tex_uv_layer:    string    UV map name
Modifier|VertexWeightEditModifier.mask_texture -> mask_texture:    pointer    Masking texture
Modifier|VertexWeightEditModifier.mask_vertex_group -> mask_vertex_group:    string    Masking vertex group name
Modifier|VertexWeightEditModifier.remove_threshold -> remove_threshold:    float    Upper bound for a vertex's weight to be removed from the vgroup
Modifier|VertexWeightEditModifier.use_add -> use_add:    boolean    Add vertices with weight over threshold to vgroup
Modifier|VertexWeightEditModifier.use_remove -> use_remove:    boolean    Remove vertices with weight below threshold from vgroup
Modifier|VertexWeightEditModifier.vertex_group -> vertex_group:    string    Vertex group name
Modifier|VertexWeightMixModifier.default_weight_a -> default_weight_a:    float    Default weight a vertex will have if it is not in the first A vgroup
Modifier|VertexWeightMixModifier.default_weight_b -> default_weight_b:    float    Default weight a vertex will have if it is not in the second B vgroup
Modifier|VertexWeightMixModifier.mask_constant -> mask_constant:    float    Global influence of current modifications on vgroup
Modifier|VertexWeightMixModifier.mask_tex_map_object -> mask_tex_map_object:    pointer    Which object to take texture coordinates from
Modifier|VertexWeightMixModifier.mask_tex_mapping -> mask_tex_mapping:    enum    Which texture coordinates to use for mapping
Modifier|VertexWeightMixModifier.mask_tex_use_channel -> mask_tex_use_channel:    enum    Which texture channel to use for masking
Modifier|VertexWeightMixModifier.mask_tex_uv_layer -> mask_tex_uv_layer:    string    UV map name
Modifier|VertexWeightMixModifier.mask_texture -> mask_texture:    pointer    Masking texture
Modifier|VertexWeightMixModifier.mask_vertex_group -> mask_vertex_group:    string    Masking vertex group name
Modifier|VertexWeightMixModifier.mix_mode -> mix_mode:    enum    How weights from vgroup B affect weights of vgroup A
Modifier|VertexWeightMixModifier.mix_set -> mix_set:    enum    Which vertices should be affected
Modifier|VertexWeightMixModifier.vertex_group_a -> vertex_group_a:    string    First vertex group name
Modifier|VertexWeightMixModifier.vertex_group_b -> vertex_group_b:    string    Second vertex group name
Modifier|VertexWeightProximityModifier.falloff_type -> falloff_type:    enum    How weights are mapped to their new values
Modifier|VertexWeightProximityModifier.mask_constant -> mask_constant:    float    Global influence of current modifications on vgroup
Modifier|VertexWeightProximityModifier.mask_tex_map_object -> mask_tex_map_object:    pointer    Which object to take texture coordinates from
Modifier|VertexWeightProximityModifier.mask_tex_mapping -> mask_tex_mapping:    enum    Which texture coordinates to use for mapping
Modifier|VertexWeightProximityModifier.mask_tex_use_channel -> mask_tex_use_channel:    enum    Which texture channel to use for masking
Modifier|VertexWeightProximityModifier.mask_tex_uv_layer -> mask_tex_uv_layer:    string    UV map name
Modifier|VertexWeightProximityModifier.mask_texture -> mask_texture:    pointer    Masking texture
Modifier|VertexWeightProximityModifier.mask_vertex_group -> mask_vertex_group:    string    Masking vertex group name
Modifier|VertexWeightProximityModifier.max_dist -> max_dist:    float    Distance mapping to weight 1.0
Modifier|VertexWeightProximityModifier.min_dist -> min_dist:    float    Distance mapping to weight 0.0
Modifier|VertexWeightProximityModifier.proximity_geometry -> proximity_geometry:    enum    Use the shortest computed distance to target object's geometry as weight
Modifier|VertexWeightProximityModifier.proximity_mode -> proximity_mode:    enum    Which distances to target object to use
Modifier|VertexWeightProximityModifier.target -> target:    pointer    Object to calculate vertices distances from
Modifier|VertexWeightProximityModifier.vertex_group -> vertex_group:    string    Vertex group name
Modifier|WarpModifier.falloff_curve -> falloff_curve:    pointer, (read-only)    Custom Lamp Falloff Curve
Modifier|WarpModifier.falloff_radius -> falloff_radius:    float    Radius to apply
Modifier|WarpModifier.falloff_type -> falloff_type:    enum    
Modifier|WarpModifier.object_from -> object_from:    pointer    Object to transform from
Modifier|WarpModifier.object_to -> object_to:    pointer    Object to transform to
Modifier|WarpModifier.strength -> strength:    float    
Modifier|WarpModifier.texture -> texture:    pointer    
Modifier|WarpModifier.texture_coords -> texture_coords:    enum    
Modifier|WarpModifier.texture_coords_object -> texture_coords_object:    pointer    Object to set the texture coordinates
Modifier|WarpModifier.use_volume_preserve -> use_volume_preserve:    boolean    Preserve volume when rotations are used
Modifier|WarpModifier.uv_layer -> uv_layer:    string    UV map name
Modifier|WarpModifier.vertex_group -> vertex_group:    string    Vertex group name for modulating the deform
Modifier|WaveModifier.damping_time -> damping_time:    float    Number of frames in which the wave damps out after it dies
Modifier|WaveModifier.falloff_radius -> falloff_radius:    float    Distance after which it fades out
Modifier|WaveModifier.height -> height:    float    Height of the wave
Modifier|WaveModifier.lifetime -> lifetime:    float    Lifetime of the wave in frames, zero means infinite
Modifier|WaveModifier.narrowness -> narrowness:    float    Distance between the top and the base of a wave, the higher the value, the more narrow the wave
Modifier|WaveModifier.speed -> speed:    float    Speed of the wave, towards the starting point when negative
Modifier|WaveModifier.start_position_object -> start_position_object:    pointer    Object which defines the wave center
Modifier|WaveModifier.start_position_x -> start_position_x:    float    X coordinate of the start position
Modifier|WaveModifier.start_position_y -> start_position_y:    float    Y coordinate of the start position
Modifier|WaveModifier.texture -> texture:    pointer    
Modifier|WaveModifier.texture_coords -> texture_coords:    enum    
Modifier|WaveModifier.texture_coords_object -> texture_coords_object:    pointer    Object to set the texture coordinates
Modifier|WaveModifier.time_offset -> time_offset:    float    Either the starting frame (for positive speed) or ending frame (for negative speed.)
Modifier|WaveModifier.use_cyclic -> use_cyclic:    boolean    Cyclic wave effect
Modifier|WaveModifier.use_normal -> use_normal:    boolean    Displace along normals
Modifier|WaveModifier.use_normal_x -> use_normal_x:    boolean    Enable displacement along the X normal
Modifier|WaveModifier.use_normal_y -> use_normal_y:    boolean    Enable displacement along the Y normal
Modifier|WaveModifier.use_normal_z -> use_normal_z:    boolean    Enable displacement along the Z normal
Modifier|WaveModifier.use_x -> use_x:    boolean    X axis motion
Modifier|WaveModifier.use_y -> use_y:    boolean    Y axis motion
Modifier|WaveModifier.uv_layer -> uv_layer:    string    UV map name
Modifier|WaveModifier.vertex_group -> vertex_group:    string    Vertex group name for modulating the wave
Modifier|WaveModifier.width -> width:    float    Distance between the waves
Modifier|WireframeModifier.crease_weight -> crease_weight:    float    Crease weight (if active)
Modifier|WireframeModifier.invert_vertex_group -> invert_vertex_group:    boolean    Invert vertex group influence
Modifier|WireframeModifier.material_offset -> material_offset:    int    Offset material index of generated faces
Modifier|WireframeModifier.offset -> offset:    float    Offset the thickness from the center
Modifier|WireframeModifier.thickness -> thickness:    float    Thickness factor
Modifier|WireframeModifier.thickness_vertex_group -> thickness_vertex_group:    float    Thickness factor to use for zero vertex group influence
Modifier|WireframeModifier.use_boundary -> use_boundary:    boolean    Support face boundaries
Modifier|WireframeModifier.use_crease -> use_crease:    boolean    Crease hub edges for improved subsurf
Modifier|WireframeModifier.use_even_offset -> use_even_offset:    boolean    Scale the offset to give more even thickness
Modifier|WireframeModifier.use_relative_offset -> use_relative_offset:    boolean    Scale the offset by surrounding geometry
Modifier|WireframeModifier.use_replace -> use_replace:    boolean    Remove original geometry
Modifier|WireframeModifier.vertex_group -> vertex_group:    string    Vertex group name for selecting the affected areas
MotionPath.frame_end -> frame_end:    int, (read-only)    End frame of the stored range
MotionPath.frame_start -> frame_start:    int, (read-only)    Starting frame of the stored range
MotionPath.is_modified -> is_modified:    boolean    Path is being edited
MotionPath.length -> length:    int, (read-only)    Number of frames cached
MotionPath.points -> points:    collection, (read-only)    Cached positions per frame
MotionPath.use_bone_head -> use_bone_head:    boolean, (read-only)    For PoseBone paths, use the bone head location when calculating this path
MotionPathVert.co -> co:    float[3]    
MotionPathVert.select -> select:    boolean    Path point is selected for editing
MovieClipProxy.build_100 -> build_100:    boolean    Build proxy resolution 100% of the original footage dimension
MovieClipProxy.build_25 -> build_25:    boolean    Build proxy resolution 25% of the original footage dimension
MovieClipProxy.build_50 -> build_50:    boolean    Build proxy resolution 50% of the original footage dimension
MovieClipProxy.build_75 -> build_75:    boolean    Build proxy resolution 75% of the original footage dimension
MovieClipProxy.build_free_run -> build_free_run:    boolean    Build free run time code index
MovieClipProxy.build_free_run_rec_date -> build_free_run_rec_date:    boolean    Build free run time code index using Record Date/Time
MovieClipProxy.build_record_run -> build_record_run:    boolean    Build record run time code index
MovieClipProxy.build_undistorted_100 -> build_undistorted_100:    boolean    Build proxy resolution 100% of the original undistorted footage dimension
MovieClipProxy.build_undistorted_25 -> build_undistorted_25:    boolean    Build proxy resolution 25% of the original undistorted footage dimension
MovieClipProxy.build_undistorted_50 -> build_undistorted_50:    boolean    Build proxy resolution 50% of the original undistorted footage dimension
MovieClipProxy.build_undistorted_75 -> build_undistorted_75:    boolean    Build proxy resolution 75% of the original undistorted footage dimension
MovieClipProxy.directory -> directory:    string    Location to store the proxy files
MovieClipProxy.quality -> quality:    int    JPEG quality of proxy images
MovieClipProxy.timecode -> timecode:    enum    
MovieClipUser.frame_current -> frame_current:    int    Current frame number in movie or image sequence
MovieClipUser.proxy_render_size -> proxy_render_size:    enum    Draw preview using full resolution or different proxy resolutions
MovieClipUser.use_render_undistorted -> use_render_undistorted:    boolean    Render preview using undistorted proxy
MovieReconstructedCamera.average_error -> average_error:    float, (read-only)    Average error of reconstruction
MovieReconstructedCamera.frame -> frame:    int, (read-only)    Frame number marker is keyframed on
MovieReconstructedCamera.matrix -> matrix:    float[16], (read-only)    Worldspace transformation matrix
MovieTracking.active_object_index -> active_object_index:    int    Index of active object
MovieTracking.camera -> camera:    pointer, (read-only)    
MovieTracking.dopesheet -> dopesheet:    pointer, (read-only)    
MovieTracking.objects -> objects:    collection, (read-only)    Collection of objects in this tracking data object
MovieTracking.plane_tracks -> plane_tracks:    collection, (read-only)    Collection of plane tracks in this tracking data object
MovieTracking.reconstruction -> reconstruction:    pointer, (read-only)    
MovieTracking.settings -> settings:    pointer, (read-only)    
MovieTracking.stabilization -> stabilization:    pointer, (read-only)    
MovieTracking.tracks -> tracks:    collection, (read-only)    Collection of tracks in this tracking data object
MovieTrackingCamera.focal_length -> focal_length:    float    Camera's focal length
MovieTrackingCamera.focal_length_pixels -> focal_length_pixels:    float    Camera's focal length
MovieTrackingCamera.k1 -> k1:    float    First coefficient of third order polynomial radial distortion
MovieTrackingCamera.k2 -> k2:    float    Second coefficient of third order polynomial radial distortion
MovieTrackingCamera.k3 -> k3:    float    Third coefficient of third order polynomial radial distortion
MovieTrackingCamera.pixel_aspect -> pixel_aspect:    float    Pixel aspect ratio
MovieTrackingCamera.principal -> principal:    float[2]    Optical center of lens
MovieTrackingCamera.sensor_width -> sensor_width:    float    Width of CCD sensor in millimeters
MovieTrackingCamera.units -> units:    enum    Units used for camera focal length
MovieTrackingDopesheet.show_hidden -> show_hidden:    boolean    Include channels from objects/bone that aren't visible
MovieTrackingDopesheet.show_only_selected -> show_only_selected:    boolean    Only include channels relating to selected objects and data
MovieTrackingDopesheet.sort_method -> sort_method:    enum    Method to be used to sort channels in dopesheet view
MovieTrackingDopesheet.use_invert_sort -> use_invert_sort:    boolean    Invert sort order of dopesheet channels
MovieTrackingMarker.co -> co:    float[2]    Marker position at frame in normalized coordinates
MovieTrackingMarker.frame -> frame:    int    Frame number marker is keyframed on
MovieTrackingMarker.is_keyed -> is_keyed:    boolean    Whether the position of the marker is keyframed or tracked
MovieTrackingMarker.mute -> mute:    boolean    Is marker muted for current frame
MovieTrackingMarker.pattern_bound_box -> pattern_bound_box:    float[4], (read-only)    Pattern area bounding box in normalized coordinates
MovieTrackingMarker.pattern_corners -> pattern_corners:    float[8]    Array of coordinates which represents pattern's corners in normalized coordinates relative to marker position
MovieTrackingMarker.search_max -> search_max:    float[2]    Right-bottom corner of search area in normalized coordinates relative to marker position
MovieTrackingMarker.search_min -> search_min:    float[2]    Left-bottom corner of search area in normalized coordinates relative to marker position
MovieTrackingObject.is_camera -> is_camera:    boolean, (read-only)    Object is used for camera tracking
MovieTrackingObject.keyframe_a -> keyframe_a:    int    First keyframe used for reconstruction initialization
MovieTrackingObject.keyframe_b -> keyframe_b:    int    Second keyframe used for reconstruction initialization
MovieTrackingObject.name -> name:    string    Unique name of object
MovieTrackingObject.plane_tracks -> plane_tracks:    collection, (read-only)    Collection of plane tracks in this tracking data object
MovieTrackingObject.reconstruction -> reconstruction:    pointer, (read-only)    
MovieTrackingObject.scale -> scale:    float    Scale of object solution in camera space
MovieTrackingObject.tracks -> tracks:    collection, (read-only)    Collection of tracks in this tracking data object
MovieTrackingObjectPlaneTracks.active -> active:    pointer    Active track in this tracking data object
MovieTrackingObjectTracks.active -> active:    pointer    Active track in this tracking data object
MovieTrackingObjects.active -> active:    pointer    Active object in this tracking data object
MovieTrackingPlaneMarker.corners -> corners:    float[8]    Array of coordinates which represents UI rectangle corners in frame normalized coordinates
MovieTrackingPlaneMarker.frame -> frame:    int    Frame number marker is keyframed on
MovieTrackingPlaneMarker.mute -> mute:    boolean    Is marker muted for current frame
MovieTrackingPlaneTrack.image -> image:    pointer    Image displayed in the track during editing in clip editor
MovieTrackingPlaneTrack.image_opacity -> image_opacity:    float    Opacity of the image
MovieTrackingPlaneTrack.markers -> markers:    collection, (read-only)    Collection of markers in track
MovieTrackingPlaneTrack.name -> name:    string    Unique name of track
MovieTrackingPlaneTrack.select -> select:    boolean    Plane track is selected
MovieTrackingPlaneTrack.use_auto_keying -> use_auto_keying:    boolean    Automatic keyframe insertion when moving plane corners
MovieTrackingPlaneTracks.active -> active:    pointer    Active plane track in this tracking data object
MovieTrackingReconstruction.average_error -> average_error:    float, (read-only)    Average error of reconstruction
MovieTrackingReconstruction.cameras -> cameras:    collection, (read-only)    Collection of solved cameras
MovieTrackingReconstruction.is_valid -> is_valid:    boolean, (read-only)    Is tracking data contains valid reconstruction information
MovieTrackingSettings.clean_action -> clean_action:    enum    Cleanup action to execute
MovieTrackingSettings.clean_error -> clean_error:    float    Effect on tracks which have a larger re-projection error
MovieTrackingSettings.clean_frames -> clean_frames:    int    Effect on tracks which are tracked less than the specified amount of frames
MovieTrackingSettings.default_correlation_min -> default_correlation_min:    float    Default minimum value of correlation between matched pattern and reference that is still treated as successful tracking
MovieTrackingSettings.default_frames_limit -> default_frames_limit:    int    Every tracking cycle, this number of frames are tracked
MovieTrackingSettings.default_margin -> default_margin:    int    Default distance from image boundary at which marker stops tracking
MovieTrackingSettings.default_motion_model -> default_motion_model:    enum    Default motion model to use for tracking
MovieTrackingSettings.default_pattern_match -> default_pattern_match:    enum    Track pattern from given frame when tracking marker to next frame
MovieTrackingSettings.default_pattern_size -> default_pattern_size:    int    Size of pattern area for newly created tracks
MovieTrackingSettings.default_search_size -> default_search_size:    int    Size of search area for newly created tracks
MovieTrackingSettings.distance -> distance:    float    Distance between two bundles used for scene scaling
MovieTrackingSettings.object_distance -> object_distance:    float    Distance between two bundles used for object scaling
MovieTrackingSettings.refine_intrinsics -> refine_intrinsics:    enum    Refine intrinsics during camera solving
MovieTrackingSettings.show_default_expanded -> show_default_expanded:    boolean    Show the expanded in the user interface
MovieTrackingSettings.speed -> speed:    enum    Limit speed of tracking to make visual feedback easier (this does not affect the tracking quality)
MovieTrackingSettings.use_default_blue_channel -> use_default_blue_channel:    boolean    Use blue channel from footage for tracking
MovieTrackingSettings.use_default_brute -> use_default_brute:    boolean    Use a brute-force translation-only initialization when tracking
MovieTrackingSettings.use_default_green_channel -> use_default_green_channel:    boolean    Use green channel from footage for tracking
MovieTrackingSettings.use_default_mask -> use_default_mask:    boolean    Use a grease pencil datablock as a mask to use only specified areas of pattern when tracking
MovieTrackingSettings.use_default_normalization -> use_default_normalization:    boolean    Normalize light intensities while tracking (slower)
MovieTrackingSettings.use_default_red_channel -> use_default_red_channel:    boolean    Use red channel from footage for tracking
MovieTrackingSettings.use_keyframe_selection -> use_keyframe_selection:    boolean    Automatically select keyframes when solving camera/object motion
MovieTrackingSettings.use_tripod_solver -> use_tripod_solver:    boolean    Use special solver to track a stable camera position, such as a tripod
MovieTrackingStabilization.active_track_index -> active_track_index:    int    Index of active track in stabilization tracks list
MovieTrackingStabilization.filter_type -> filter_type:    enum    Method to use to filter stabilization
MovieTrackingStabilization.influence_location -> influence_location:    float    Influence of stabilization algorithm on footage location
MovieTrackingStabilization.influence_rotation -> influence_rotation:    float    Influence of stabilization algorithm on footage rotation
MovieTrackingStabilization.influence_scale -> influence_scale:    float    Influence of stabilization algorithm on footage scale
MovieTrackingStabilization.rotation_track -> rotation_track:    pointer    Track used to compensate rotation
MovieTrackingStabilization.scale_max -> scale_max:    float    Limit the amount of automatic scaling
MovieTrackingStabilization.tracks -> tracks:    collection, (read-only)    Collection of tracks used for stabilization
MovieTrackingStabilization.use_2d_stabilization -> use_2d_stabilization:    boolean    Use 2D stabilization for footage
MovieTrackingStabilization.use_autoscale -> use_autoscale:    boolean    Automatically scale footage to cover unfilled areas when stabilizing
MovieTrackingStabilization.use_stabilize_rotation -> use_stabilize_rotation:    boolean    Stabilize horizon line on the shot
MovieTrackingTrack.average_error -> average_error:    float, (read-only)    Average error of re-projection
MovieTrackingTrack.bundle -> bundle:    float[3], (read-only)    Position of bundle reconstructed from this track
MovieTrackingTrack.color -> color:    float[3]    Color of the track in the Movie Clip Editor and the 3D viewport after a solve
MovieTrackingTrack.correlation_min -> correlation_min:    float    Minimal value of correlation between matched pattern and reference that is still treated as successful tracking
MovieTrackingTrack.frames_limit -> frames_limit:    int    Every tracking cycle, this number of frames are tracked
MovieTrackingTrack.grease_pencil -> grease_pencil:    pointer    Grease pencil data for this track
MovieTrackingTrack.has_bundle -> has_bundle:    boolean, (read-only)    True if track has a valid bundle
MovieTrackingTrack.hide -> hide:    boolean    Track is hidden
MovieTrackingTrack.lock -> lock:    boolean    Track is locked and all changes to it are disabled
MovieTrackingTrack.margin -> margin:    int    Distance from image boundary at which marker stops tracking
MovieTrackingTrack.markers -> markers:    collection, (read-only)    Collection of markers in track
MovieTrackingTrack.motion_model -> motion_model:    enum    Default motion model to use for tracking
MovieTrackingTrack.name -> name:    string    Unique name of track
MovieTrackingTrack.offset -> offset:    float[2]    Offset of track from the parenting point
MovieTrackingTrack.pattern_match -> pattern_match:    enum    Track pattern from given frame when tracking marker to next frame
MovieTrackingTrack.select -> select:    boolean    Track is selected
MovieTrackingTrack.select_anchor -> select_anchor:    boolean    Track's anchor point is selected
MovieTrackingTrack.select_pattern -> select_pattern:    boolean    Track's pattern area is selected
MovieTrackingTrack.select_search -> select_search:    boolean    Track's search area is selected
MovieTrackingTrack.use_alpha_preview -> use_alpha_preview:    boolean    Apply track's mask on displaying preview
MovieTrackingTrack.use_blue_channel -> use_blue_channel:    boolean    Use blue channel from footage for tracking
MovieTrackingTrack.use_brute -> use_brute:    boolean    Use a brute-force translation only pre-track before refinement
MovieTrackingTrack.use_custom_color -> use_custom_color:    boolean    Use custom color instead of theme-defined
MovieTrackingTrack.use_grayscale_preview -> use_grayscale_preview:    boolean    Display what the tracking algorithm sees in the preview
MovieTrackingTrack.use_green_channel -> use_green_channel:    boolean    Use green channel from footage for tracking
MovieTrackingTrack.use_mask -> use_mask:    boolean    Use a grease pencil datablock as a mask to use only specified areas of pattern when tracking
MovieTrackingTrack.use_normalization -> use_normalization:    boolean    Normalize light intensities while tracking. Slower
MovieTrackingTrack.use_red_channel -> use_red_channel:    boolean    Use red channel from footage for tracking
MovieTrackingTrack.weight -> weight:    float    Influence of this track on a final solution
MovieTrackingTracks.active -> active:    pointer    Active track in this tracking data object
NlaStrip.action -> action:    pointer    Action referenced by this strip
NlaStrip.action_frame_end -> action_frame_end:    float    Last frame from action to use
NlaStrip.action_frame_start -> action_frame_start:    float    First frame from action to use
NlaStrip.active -> active:    boolean, (read-only)    NLA Strip is active
NlaStrip.blend_in -> blend_in:    float    Number of frames at start of strip to fade in influence
NlaStrip.blend_out -> blend_out:    float    
NlaStrip.blend_type -> blend_type:    enum    Method used for combining strip's result with accumulated result
NlaStrip.extrapolation -> extrapolation:    enum    Action to take for gaps past the strip extents
NlaStrip.fcurves -> fcurves:    collection, (read-only)    F-Curves for controlling the strip's influence and timing
NlaStrip.frame_end -> frame_end:    float    
NlaStrip.frame_start -> frame_start:    float    
NlaStrip.influence -> influence:    float    Amount the strip contributes to the current result
NlaStrip.modifiers -> modifiers:    collection, (read-only)    Modifiers affecting all the F-Curves in the referenced Action
NlaStrip.mute -> mute:    boolean    NLA Strip is not evaluated
NlaStrip.name -> name:    string    
NlaStrip.repeat -> repeat:    float    Number of times to repeat the action range
NlaStrip.scale -> scale:    float    Scaling factor for action
NlaStrip.select -> select:    boolean    NLA Strip is selected
NlaStrip.strip_time -> strip_time:    float    Frame of referenced Action to evaluate
NlaStrip.strips -> strips:    collection, (read-only)    NLA Strips that this strip acts as a container for (if it is of type Meta)
NlaStrip.type -> type:    enum, (read-only)    Type of NLA Strip
NlaStrip.use_animated_influence -> use_animated_influence:    boolean    Influence setting is controlled by an F-Curve rather than automatically determined
NlaStrip.use_animated_time -> use_animated_time:    boolean    Strip time is controlled by an F-Curve rather than automatically determined
NlaStrip.use_animated_time_cyclic -> use_animated_time_cyclic:    boolean    Cycle the animated time within the action start & end
NlaStrip.use_auto_blend -> use_auto_blend:    boolean    Number of frames for Blending In/Out is automatically determined from overlapping strips
NlaStrip.use_reverse -> use_reverse:    boolean    NLA Strip is played back in reverse order (only when timing is automatically determined)
NlaStrip.use_sync_length -> use_sync_length:    boolean    Update range of frames referenced from action after tweaking strip and its keyframes
NlaTrack.active -> active:    boolean, (read-only)    NLA Track is active
NlaTrack.is_solo -> is_solo:    boolean    NLA Track is evaluated itself (i.e. active Action and all other NLA Tracks in the same AnimData block are disabled)
NlaTrack.lock -> lock:    boolean    NLA Track is locked
NlaTrack.mute -> mute:    boolean    NLA Track is not evaluated
NlaTrack.name -> name:    string    
NlaTrack.select -> select:    boolean    NLA Track is selected
NlaTrack.strips -> strips:    collection, (read-only)    NLA Strips on this NLA-track
NlaTracks.active -> active:    pointer    Active Object constraint
Node.bl_description -> bl_description:    string    
Node.bl_height_default -> bl_height_default:    float    
Node.bl_height_max -> bl_height_max:    float    
Node.bl_height_min -> bl_height_min:    float    
Node.bl_icon -> bl_icon:    enum    The node icon
Node.bl_idname -> bl_idname:    string    
Node.bl_label -> bl_label:    string    The node label
Node.bl_static_type -> bl_static_type:    enum    Node type (deprecated, use with care)
Node.bl_width_default -> bl_width_default:    float    
Node.bl_width_max -> bl_width_max:    float    
Node.bl_width_min -> bl_width_min:    float    
Node.color -> color:    float[3]    Custom color of the node body
Node.dimensions -> dimensions:    float[2], (read-only)    Absolute bounding box dimensions of the node
Node.height -> height:    float    Height of the node
Node.hide -> hide:    boolean    
Node.inputs -> inputs:    collection, (read-only)    
Node.internal_links -> internal_links:    collection, (read-only)    Internal input-to-output connections for muting
Node.label -> label:    string    Optional custom node label
Node.location -> location:    float[2]    
Node.mute -> mute:    boolean    
Node.name -> name:    string    Unique node identifier
Node.outputs -> outputs:    collection, (read-only)    
Node.parent -> parent:    pointer    Parent this node is attached to
Node.select -> select:    boolean    Node selection state
Node.show_options -> show_options:    boolean    
Node.show_preview -> show_preview:    boolean    
Node.show_texture -> show_texture:    boolean    Draw node in viewport textured draw mode
Node.type -> type:    enum, (read-only)    Node type (deprecated, use bl_static_type or bl_idname for the actual identifier string)
Node.use_custom_color -> use_custom_color:    boolean    Use custom color for the node
Node.width -> width:    float    Width of the node
Node.width_hidden -> width_hidden:    float    Width of the node in hidden state
NodeInternalSocketTemplate.identifier -> identifier:    string, (read-only)    Identifier of the socket
NodeInternalSocketTemplate.name -> name:    string, (read-only)    Name of the socket
NodeInternalSocketTemplate.type -> type:    enum, (read-only)    Data type of the socket
NodeLink.from_node -> from_node:    pointer, (read-only)    
NodeLink.from_socket -> from_socket:    pointer, (read-only)    
NodeLink.is_hidden -> is_hidden:    boolean, (read-only)    Link is hidden due to invisible sockets
NodeLink.is_valid -> is_valid:    boolean    
NodeLink.to_node -> to_node:    pointer, (read-only)    
NodeLink.to_socket -> to_socket:    pointer, (read-only)    
NodeOutputFileSlotFile.format -> format:    pointer, (read-only)    
NodeOutputFileSlotFile.path -> path:    string    Subpath used for this slot
NodeOutputFileSlotFile.use_node_format -> use_node_format:    boolean    
NodeOutputFileSlotLayer.name -> name:    string    OpenEXR layer name used for this slot
NodeSocket.bl_idname -> bl_idname:    string    
NodeSocket.enabled -> enabled:    boolean    Enable the socket
NodeSocket.hide -> hide:    boolean    Hide the socket
NodeSocket.hide_value -> hide_value:    boolean    Hide the socket input value
NodeSocket.identifier -> identifier:    string, (read-only)    Unique identifier for mapping sockets
NodeSocket.is_linked -> is_linked:    boolean, (read-only)    True if the socket is connected
NodeSocket.is_output -> is_output:    boolean, (read-only)    True if the socket is an output, otherwise input
NodeSocket.link_limit -> link_limit:    int    Max number of links allowed for this socket
NodeSocket.name -> name:    string    Socket name
NodeSocket.node -> node:    pointer, (read-only)    Node owning this socket
NodeSocket.show_expanded -> show_expanded:    boolean    Socket links are expanded in the user interface
NodeSocket.type -> type:    enum    Data type
NodeSocketInterface.bl_socket_idname -> bl_socket_idname:    string    
NodeSocketInterface.identifier -> identifier:    string, (read-only)    Unique identifier for mapping sockets
NodeSocketInterface.is_output -> is_output:    boolean, (read-only)    True if the socket is an output, otherwise input
NodeSocketInterface.name -> name:    string    Socket name
NodeSocketInterface|NodeSocketInterfaceStandard.type -> type:    enum, (read-only)    Data type
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceBool.default_value -> default_value:    boolean    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceColor.default_value -> default_value:    float[4]    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloat.default_value -> default_value:    float    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloat.max_value -> max_value:    float    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloat.min_value -> min_value:    float    Minimum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloatAngle.default_value -> default_value:    float    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloatAngle.max_value -> max_value:    float    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloatAngle.min_value -> min_value:    float    Minimum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloatFactor.default_value -> default_value:    float    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloatFactor.max_value -> max_value:    float    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloatFactor.min_value -> min_value:    float    Minimum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloatPercentage.default_value -> default_value:    float    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloatPercentage.max_value -> max_value:    float    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloatPercentage.min_value -> min_value:    float    Minimum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloatTime.default_value -> default_value:    float    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloatTime.max_value -> max_value:    float    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloatTime.min_value -> min_value:    float    Minimum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloatUnsigned.default_value -> default_value:    float    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloatUnsigned.max_value -> max_value:    float    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceFloatUnsigned.min_value -> min_value:    float    Minimum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceInt.default_value -> default_value:    int    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceInt.max_value -> max_value:    int    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceInt.min_value -> min_value:    int    Minimum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceIntFactor.default_value -> default_value:    int    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceIntFactor.max_value -> max_value:    int    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceIntFactor.min_value -> min_value:    int    Minimum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceIntPercentage.default_value -> default_value:    int    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceIntPercentage.max_value -> max_value:    int    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceIntPercentage.min_value -> min_value:    int    Minimum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceIntUnsigned.default_value -> default_value:    int    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceIntUnsigned.max_value -> max_value:    int    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceIntUnsigned.min_value -> min_value:    int    Minimum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceString.default_value -> default_value:    string    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVector.default_value -> default_value:    float[3]    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVector.max_value -> max_value:    float    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVector.min_value -> min_value:    float    Minimum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorAcceleration.default_value -> default_value:    float[3]    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorAcceleration.max_value -> max_value:    float    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorAcceleration.min_value -> min_value:    float    Minimum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorDirection.default_value -> default_value:    float[3]    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorDirection.max_value -> max_value:    float    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorDirection.min_value -> min_value:    float    Minimum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorEuler.default_value -> default_value:    float[3]    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorEuler.max_value -> max_value:    float    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorEuler.min_value -> min_value:    float    Minimum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorTranslation.default_value -> default_value:    float[3]    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorTranslation.max_value -> max_value:    float    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorTranslation.min_value -> min_value:    float    Minimum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorVelocity.default_value -> default_value:    float[3]    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorVelocity.max_value -> max_value:    float    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorVelocity.min_value -> min_value:    float    Minimum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorXYZ.default_value -> default_value:    float[3]    Input value used for unconnected socket
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorXYZ.max_value -> max_value:    float    Maximum value
NodeSocketInterface|NodeSocketInterfaceStandard|NodeSocketInterfaceVectorXYZ.min_value -> min_value:    float    Minimum value
NodeSocket|NodeSocketStandard|NodeSocketBool.default_value -> default_value:    boolean    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketColor.default_value -> default_value:    float[4]    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketFloat.default_value -> default_value:    float    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketFloatAngle.default_value -> default_value:    float    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketFloatFactor.default_value -> default_value:    float    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketFloatPercentage.default_value -> default_value:    float    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketFloatTime.default_value -> default_value:    float    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketFloatUnsigned.default_value -> default_value:    float    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketInt.default_value -> default_value:    int    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketIntFactor.default_value -> default_value:    int    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketIntPercentage.default_value -> default_value:    int    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketIntUnsigned.default_value -> default_value:    int    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketString.default_value -> default_value:    string    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketVector.default_value -> default_value:    float[3]    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketVectorAcceleration.default_value -> default_value:    float[3]    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketVectorDirection.default_value -> default_value:    float[3]    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketVectorEuler.default_value -> default_value:    float[3]    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketVectorTranslation.default_value -> default_value:    float[3]    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketVectorVelocity.default_value -> default_value:    float[3]    Input value used for unconnected socket
NodeSocket|NodeSocketStandard|NodeSocketVectorXYZ.default_value -> default_value:    float[3]    Input value used for unconnected socket
NodeTreePath.node_tree -> node_tree:    pointer, (read-only)    Base node tree from context
Nodes.active -> active:    pointer    Active node in this tree
Node|NodeCustomGroup.interface -> interface:    pointer, (read-only)    Interface socket data
Node|NodeCustomGroup.node_tree -> node_tree:    pointer    
Node|NodeInternal|CompositorNode|CompositorNodeAlphaOver.premul -> premul:    float    Mix Factor
Node|NodeInternal|CompositorNode|CompositorNodeAlphaOver.use_premultiply -> use_premultiply:    boolean    
Node|NodeInternal|CompositorNode|CompositorNodeBilateralblur.iterations -> iterations:    int    
Node|NodeInternal|CompositorNode|CompositorNodeBilateralblur.sigma_color -> sigma_color:    float    
Node|NodeInternal|CompositorNode|CompositorNodeBilateralblur.sigma_space -> sigma_space:    float    
Node|NodeInternal|CompositorNode|CompositorNodeBlur.aspect_correction -> aspect_correction:    enum    Type of aspect correction to use
Node|NodeInternal|CompositorNode|CompositorNodeBlur.factor -> factor:    float    
Node|NodeInternal|CompositorNode|CompositorNodeBlur.factor_x -> factor_x:    float    
Node|NodeInternal|CompositorNode|CompositorNodeBlur.factor_y -> factor_y:    float    
Node|NodeInternal|CompositorNode|CompositorNodeBlur.filter_type -> filter_type:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeBlur.size_x -> size_x:    int    
Node|NodeInternal|CompositorNode|CompositorNodeBlur.size_y -> size_y:    int    
Node|NodeInternal|CompositorNode|CompositorNodeBlur.use_bokeh -> use_bokeh:    boolean    Use circular filter (slower)
Node|NodeInternal|CompositorNode|CompositorNodeBlur.use_gamma_correction -> use_gamma_correction:    boolean    Apply filter on gamma corrected values
Node|NodeInternal|CompositorNode|CompositorNodeBlur.use_relative -> use_relative:    boolean    Use relative (percent) values to define blur radius
Node|NodeInternal|CompositorNode|CompositorNodeBlur.use_variable_size -> use_variable_size:    boolean    Support variable blur per-pixel when using an image for size input
Node|NodeInternal|CompositorNode|CompositorNodeBokehBlur.blur_max -> blur_max:    float    Blur limit, maximum CoC radius
Node|NodeInternal|CompositorNode|CompositorNodeBokehBlur.use_variable_size -> use_variable_size:    boolean    Support variable blur per-pixel when using an image for size input
Node|NodeInternal|CompositorNode|CompositorNodeBokehImage.angle -> angle:    float    Angle of the bokeh
Node|NodeInternal|CompositorNode|CompositorNodeBokehImage.catadioptric -> catadioptric:    float    Level of catadioptric of the bokeh
Node|NodeInternal|CompositorNode|CompositorNodeBokehImage.flaps -> flaps:    int    Number of flaps
Node|NodeInternal|CompositorNode|CompositorNodeBokehImage.rounding -> rounding:    float    Level of rounding of the bokeh
Node|NodeInternal|CompositorNode|CompositorNodeBokehImage.shift -> shift:    float    Shift of the lens components
Node|NodeInternal|CompositorNode|CompositorNodeBoxMask.height -> height:    float    Height of the box
Node|NodeInternal|CompositorNode|CompositorNodeBoxMask.mask_type -> mask_type:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeBoxMask.rotation -> rotation:    float    Rotation angle of the box
Node|NodeInternal|CompositorNode|CompositorNodeBoxMask.width -> width:    float    Width of the box
Node|NodeInternal|CompositorNode|CompositorNodeBoxMask.x -> x:    float    X position of the middle of the box
Node|NodeInternal|CompositorNode|CompositorNodeBoxMask.y -> y:    float    Y position of the middle of the box
Node|NodeInternal|CompositorNode|CompositorNodeChannelMatte.color_space -> color_space:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeChannelMatte.limit_channel -> limit_channel:    enum    Limit by this channel's value
Node|NodeInternal|CompositorNode|CompositorNodeChannelMatte.limit_max -> limit_max:    float    Values higher than this setting are 100% opaque
Node|NodeInternal|CompositorNode|CompositorNodeChannelMatte.limit_method -> limit_method:    enum    Algorithm to use to limit channel
Node|NodeInternal|CompositorNode|CompositorNodeChannelMatte.limit_min -> limit_min:    float    Values lower than this setting are 100% keyed
Node|NodeInternal|CompositorNode|CompositorNodeChannelMatte.matte_channel -> matte_channel:    enum    Channel used to determine matte
Node|NodeInternal|CompositorNode|CompositorNodeChromaMatte.gain -> gain:    float    Alpha falloff
Node|NodeInternal|CompositorNode|CompositorNodeChromaMatte.lift -> lift:    float    Alpha lift
Node|NodeInternal|CompositorNode|CompositorNodeChromaMatte.shadow_adjust -> shadow_adjust:    float    Adjusts the brightness of any shadows captured
Node|NodeInternal|CompositorNode|CompositorNodeChromaMatte.threshold -> threshold:    float    Tolerance below which colors will be considered as exact matches
Node|NodeInternal|CompositorNode|CompositorNodeChromaMatte.tolerance -> tolerance:    float    Tolerance for a color to be considered a keying color
Node|NodeInternal|CompositorNode|CompositorNodeColorBalance.correction_method -> correction_method:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeColorBalance.gain -> gain:    float[3]    Correction for Highlights
Node|NodeInternal|CompositorNode|CompositorNodeColorBalance.gamma -> gamma:    float[3]    Correction for Midtones
Node|NodeInternal|CompositorNode|CompositorNodeColorBalance.lift -> lift:    float[3]    Correction for Shadows
Node|NodeInternal|CompositorNode|CompositorNodeColorBalance.offset -> offset:    float[3]    Correction for Shadows
Node|NodeInternal|CompositorNode|CompositorNodeColorBalance.power -> power:    float[3]    Correction for Midtones
Node|NodeInternal|CompositorNode|CompositorNodeColorBalance.slope -> slope:    float[3]    Correction for Highlights
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.blue -> blue:    boolean    Blue channel active
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.green -> green:    boolean    Green channel active
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.highlights_contrast -> highlights_contrast:    float    Highlights contrast
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.highlights_gain -> highlights_gain:    float    Highlights gain
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.highlights_gamma -> highlights_gamma:    float    Highlights gamma
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.highlights_lift -> highlights_lift:    float    Highlights lift
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.highlights_saturation -> highlights_saturation:    float    Highlights saturation
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.master_contrast -> master_contrast:    float    Master contrast
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.master_gain -> master_gain:    float    Master gain
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.master_gamma -> master_gamma:    float    Master gamma
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.master_lift -> master_lift:    float    Master lift
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.master_saturation -> master_saturation:    float    Master saturation
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.midtones_contrast -> midtones_contrast:    float    Midtones contrast
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.midtones_end -> midtones_end:    float    End of midtones
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.midtones_gain -> midtones_gain:    float    Midtones gain
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.midtones_gamma -> midtones_gamma:    float    Midtones gamma
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.midtones_lift -> midtones_lift:    float    Midtones lift
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.midtones_saturation -> midtones_saturation:    float    Midtones saturation
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.midtones_start -> midtones_start:    float    Start of midtones
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.red -> red:    boolean    Red channel active
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.shadows_contrast -> shadows_contrast:    float    Shadows contrast
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.shadows_gain -> shadows_gain:    float    Shadows gain
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.shadows_gamma -> shadows_gamma:    float    Shadows gamma
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.shadows_lift -> shadows_lift:    float    Shadows lift
Node|NodeInternal|CompositorNode|CompositorNodeColorCorrection.shadows_saturation -> shadows_saturation:    float    Shadows saturation
Node|NodeInternal|CompositorNode|CompositorNodeColorMatte.color_hue -> color_hue:    float    Hue tolerance for colors to be considered a keying color
Node|NodeInternal|CompositorNode|CompositorNodeColorMatte.color_saturation -> color_saturation:    float    Saturation Tolerance for the color
Node|NodeInternal|CompositorNode|CompositorNodeColorMatte.color_value -> color_value:    float    Value Tolerance for the color
Node|NodeInternal|CompositorNode|CompositorNodeColorSpill.channel -> channel:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeColorSpill.limit_channel -> limit_channel:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeColorSpill.limit_method -> limit_method:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeColorSpill.ratio -> ratio:    float    Scale limit by value
Node|NodeInternal|CompositorNode|CompositorNodeColorSpill.unspill_blue -> unspill_blue:    float    Blue spillmap scale
Node|NodeInternal|CompositorNode|CompositorNodeColorSpill.unspill_green -> unspill_green:    float    Green spillmap scale
Node|NodeInternal|CompositorNode|CompositorNodeColorSpill.unspill_red -> unspill_red:    float    Red spillmap scale
Node|NodeInternal|CompositorNode|CompositorNodeColorSpill.use_unspill -> use_unspill:    boolean    Compensate all channels (differently) by hand
Node|NodeInternal|CompositorNode|CompositorNodeCombYCCA.mode -> mode:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeComposite.use_alpha -> use_alpha:    boolean    Colors are treated alpha premultiplied, or colors output straight (alpha gets set to 1)
Node|NodeInternal|CompositorNode|CompositorNodeCrop.max_x -> max_x:    int    
Node|NodeInternal|CompositorNode|CompositorNodeCrop.max_y -> max_y:    int    
Node|NodeInternal|CompositorNode|CompositorNodeCrop.min_x -> min_x:    int    
Node|NodeInternal|CompositorNode|CompositorNodeCrop.min_y -> min_y:    int    
Node|NodeInternal|CompositorNode|CompositorNodeCrop.rel_max_x -> rel_max_x:    float    
Node|NodeInternal|CompositorNode|CompositorNodeCrop.rel_max_y -> rel_max_y:    float    
Node|NodeInternal|CompositorNode|CompositorNodeCrop.rel_min_x -> rel_min_x:    float    
Node|NodeInternal|CompositorNode|CompositorNodeCrop.rel_min_y -> rel_min_y:    float    
Node|NodeInternal|CompositorNode|CompositorNodeCrop.relative -> relative:    boolean    Use relative values to crop image
Node|NodeInternal|CompositorNode|CompositorNodeCrop.use_crop_size -> use_crop_size:    boolean    Whether to crop the size of the input image
Node|NodeInternal|CompositorNode|CompositorNodeCurveRGB.mapping -> mapping:    pointer, (read-only)    
Node|NodeInternal|CompositorNode|CompositorNodeCurveVec.mapping -> mapping:    pointer, (read-only)    
Node|NodeInternal|CompositorNode|CompositorNodeDBlur.angle -> angle:    float    
Node|NodeInternal|CompositorNode|CompositorNodeDBlur.center_x -> center_x:    float    
Node|NodeInternal|CompositorNode|CompositorNodeDBlur.center_y -> center_y:    float    
Node|NodeInternal|CompositorNode|CompositorNodeDBlur.distance -> distance:    float    
Node|NodeInternal|CompositorNode|CompositorNodeDBlur.iterations -> iterations:    int    
Node|NodeInternal|CompositorNode|CompositorNodeDBlur.spin -> spin:    float    
Node|NodeInternal|CompositorNode|CompositorNodeDBlur.use_wrap -> use_wrap:    boolean    
Node|NodeInternal|CompositorNode|CompositorNodeDBlur.zoom -> zoom:    float    
Node|NodeInternal|CompositorNode|CompositorNodeDefocus.angle -> angle:    float    Bokeh shape rotation offset
Node|NodeInternal|CompositorNode|CompositorNodeDefocus.blur_max -> blur_max:    float    Blur limit, maximum CoC radius
Node|NodeInternal|CompositorNode|CompositorNodeDefocus.bokeh -> bokeh:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeDefocus.f_stop -> f_stop:    float    Amount of focal blur, 128=infinity=perfect focus, half the value doubles the blur radius
Node|NodeInternal|CompositorNode|CompositorNodeDefocus.threshold -> threshold:    float    CoC radius threshold, prevents background bleed on in-focus midground, 0=off
Node|NodeInternal|CompositorNode|CompositorNodeDefocus.use_gamma_correction -> use_gamma_correction:    boolean    Enable gamma correction before and after main process
Node|NodeInternal|CompositorNode|CompositorNodeDefocus.use_preview -> use_preview:    boolean    Enable low quality mode, useful for preview
Node|NodeInternal|CompositorNode|CompositorNodeDefocus.use_zbuffer -> use_zbuffer:    boolean    Disable when using an image as input instead of actual z-buffer (auto enabled if node not image based, eg. time node)
Node|NodeInternal|CompositorNode|CompositorNodeDefocus.z_scale -> z_scale:    float    Scale the Z input when not using a z-buffer, controls maximum blur designated by the color white or input value 1
Node|NodeInternal|CompositorNode|CompositorNodeDespeckle.threshold -> threshold:    float    Threshold for detecting pixels to despeckle
Node|NodeInternal|CompositorNode|CompositorNodeDespeckle.threshold_neighbor -> threshold_neighbor:    float    Threshold for the number of neighbor pixels that must match
Node|NodeInternal|CompositorNode|CompositorNodeDiffMatte.falloff -> falloff:    float    Color distances below this additional threshold are partially keyed
Node|NodeInternal|CompositorNode|CompositorNodeDiffMatte.tolerance -> tolerance:    float    Color distances below this threshold are keyed
Node|NodeInternal|CompositorNode|CompositorNodeDilateErode.distance -> distance:    int    Distance to grow/shrink (number of iterations)
Node|NodeInternal|CompositorNode|CompositorNodeDilateErode.edge -> edge:    float    Edge to inset
Node|NodeInternal|CompositorNode|CompositorNodeDilateErode.falloff -> falloff:    enum    Falloff type the feather
Node|NodeInternal|CompositorNode|CompositorNodeDilateErode.mode -> mode:    enum    Growing/shrinking mode
Node|NodeInternal|CompositorNode|CompositorNodeDistanceMatte.channel -> channel:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeDistanceMatte.falloff -> falloff:    float    Color distances below this additional threshold are partially keyed
Node|NodeInternal|CompositorNode|CompositorNodeDistanceMatte.tolerance -> tolerance:    float    Color distances below this threshold are keyed
Node|NodeInternal|CompositorNode|CompositorNodeDoubleEdgeMask.edge_mode -> edge_mode:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeDoubleEdgeMask.inner_mode -> inner_mode:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeEllipseMask.height -> height:    float    Height of the ellipse
Node|NodeInternal|CompositorNode|CompositorNodeEllipseMask.mask_type -> mask_type:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeEllipseMask.rotation -> rotation:    float    Rotation angle of the ellipse
Node|NodeInternal|CompositorNode|CompositorNodeEllipseMask.width -> width:    float    Width of the ellipse
Node|NodeInternal|CompositorNode|CompositorNodeEllipseMask.x -> x:    float    X position of the middle of the ellipse
Node|NodeInternal|CompositorNode|CompositorNodeEllipseMask.y -> y:    float    Y position of the middle of the ellipse
Node|NodeInternal|CompositorNode|CompositorNodeFilter.filter_type -> filter_type:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeFlip.axis -> axis:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeGlare.angle_offset -> angle_offset:    float    Streak angle offset
Node|NodeInternal|CompositorNode|CompositorNodeGlare.color_modulation -> color_modulation:    float    Amount of Color Modulation, modulates colors of streaks and ghosts for a spectral dispersion effect
Node|NodeInternal|CompositorNode|CompositorNodeGlare.fade -> fade:    float    Streak fade-out factor
Node|NodeInternal|CompositorNode|CompositorNodeGlare.glare_type -> glare_type:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeGlare.iterations -> iterations:    int    
Node|NodeInternal|CompositorNode|CompositorNodeGlare.mix -> mix:    float    -1 is original image only, 0 is exact 50/50 mix, 1 is processed image only
Node|NodeInternal|CompositorNode|CompositorNodeGlare.quality -> quality:    enum    If not set to high quality, the effect will be applied to a low-res copy of the source image
Node|NodeInternal|CompositorNode|CompositorNodeGlare.size -> size:    int    Glow/glare size (not actual size; relative to initial size of bright area of pixels)
Node|NodeInternal|CompositorNode|CompositorNodeGlare.streaks -> streaks:    int    Total number of streaks
Node|NodeInternal|CompositorNode|CompositorNodeGlare.threshold -> threshold:    float    The glare filter will only be applied to pixels brighter than this value
Node|NodeInternal|CompositorNode|CompositorNodeGlare.use_rotate_45 -> use_rotate_45:    boolean    Simple star filter: add 45 degree rotation offset
Node|NodeInternal|CompositorNode|CompositorNodeGroup.interface -> interface:    pointer, (read-only)    Interface socket data
Node|NodeInternal|CompositorNode|CompositorNodeGroup.node_tree -> node_tree:    pointer    
Node|NodeInternal|CompositorNode|CompositorNodeHueCorrect.mapping -> mapping:    pointer, (read-only)    
Node|NodeInternal|CompositorNode|CompositorNodeHueSat.color_hue -> color_hue:    float    
Node|NodeInternal|CompositorNode|CompositorNodeHueSat.color_saturation -> color_saturation:    float    
Node|NodeInternal|CompositorNode|CompositorNodeHueSat.color_value -> color_value:    float    
Node|NodeInternal|CompositorNode|CompositorNodeIDMask.index -> index:    int    Pass index number to convert to alpha
Node|NodeInternal|CompositorNode|CompositorNodeIDMask.use_antialiasing -> use_antialiasing:    boolean    Apply an anti-aliasing filter to the mask
Node|NodeInternal|CompositorNode|CompositorNodeImage.frame_duration -> frame_duration:    int    Number of images of a movie to use
Node|NodeInternal|CompositorNode|CompositorNodeImage.frame_offset -> frame_offset:    int    Offset the number of the frame to use in the animation
Node|NodeInternal|CompositorNode|CompositorNodeImage.frame_start -> frame_start:    int    Global starting frame of the movie/sequence, assuming first picture has a #1
Node|NodeInternal|CompositorNode|CompositorNodeImage.image -> image:    pointer    
Node|NodeInternal|CompositorNode|CompositorNodeImage.layer -> layer:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeImage.use_auto_refresh -> use_auto_refresh:    boolean    Always refresh image on frame changes
Node|NodeInternal|CompositorNode|CompositorNodeImage.use_cyclic -> use_cyclic:    boolean    Cycle the images in the movie
Node|NodeInternal|CompositorNode|CompositorNodeImage.use_straight_alpha_output -> use_straight_alpha_output:    boolean    Put Node output buffer to straight alpha instead of premultiplied
Node|NodeInternal|CompositorNode|CompositorNodeInpaint.distance -> distance:    int    Distance to inpaint (number of iterations)
Node|NodeInternal|CompositorNode|CompositorNodeInvert.invert_alpha -> invert_alpha:    boolean    
Node|NodeInternal|CompositorNode|CompositorNodeInvert.invert_rgb -> invert_rgb:    boolean    
Node|NodeInternal|CompositorNode|CompositorNodeKeying.blur_post -> blur_post:    int    Matte blur size which applies after clipping and dilate/eroding
Node|NodeInternal|CompositorNode|CompositorNodeKeying.blur_pre -> blur_pre:    int    Chroma pre-blur size which applies before running keyer
Node|NodeInternal|CompositorNode|CompositorNodeKeying.clip_black -> clip_black:    float    Value of non-scaled matte pixel which considers as fully background pixel
Node|NodeInternal|CompositorNode|CompositorNodeKeying.clip_white -> clip_white:    float    Value of non-scaled matte pixel which considers as fully foreground pixel
Node|NodeInternal|CompositorNode|CompositorNodeKeying.despill_balance -> despill_balance:    float    Balance between non-key colors used to detect amount of key color to be removed
Node|NodeInternal|CompositorNode|CompositorNodeKeying.despill_factor -> despill_factor:    float    Factor of despilling screen color from image
Node|NodeInternal|CompositorNode|CompositorNodeKeying.dilate_distance -> dilate_distance:    int    Matte dilate/erode side
Node|NodeInternal|CompositorNode|CompositorNodeKeying.edge_kernel_radius -> edge_kernel_radius:    int    Radius of kernel used to detect whether pixel belongs to edge
Node|NodeInternal|CompositorNode|CompositorNodeKeying.edge_kernel_tolerance -> edge_kernel_tolerance:    float    Tolerance to pixels inside kernel which are treating as belonging to the same plane
Node|NodeInternal|CompositorNode|CompositorNodeKeying.feather_distance -> feather_distance:    int    Distance to grow/shrink the feather
Node|NodeInternal|CompositorNode|CompositorNodeKeying.feather_falloff -> feather_falloff:    enum    Falloff type the feather
Node|NodeInternal|CompositorNode|CompositorNodeKeying.screen_balance -> screen_balance:    float    Balance between two non-primary channels primary channel is comparing against
Node|NodeInternal|CompositorNode|CompositorNodeKeyingScreen.clip -> clip:    pointer    
Node|NodeInternal|CompositorNode|CompositorNodeKeyingScreen.tracking_object -> tracking_object:    string    
Node|NodeInternal|CompositorNode|CompositorNodeLensdist.use_fit -> use_fit:    boolean    For positive distortion factor only: scale image such that black areas are not visible
Node|NodeInternal|CompositorNode|CompositorNodeLensdist.use_jitter -> use_jitter:    boolean    Enable/disable jittering (faster, but also noisier)
Node|NodeInternal|CompositorNode|CompositorNodeLensdist.use_projector -> use_projector:    boolean    Enable/disable projector mode (the effect is applied in horizontal direction only)
Node|NodeInternal|CompositorNode|CompositorNodeLevels.channel -> channel:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeLumaMatte.limit_max -> limit_max:    float    Values higher than this setting are 100% opaque
Node|NodeInternal|CompositorNode|CompositorNodeLumaMatte.limit_min -> limit_min:    float    Values lower than this setting are 100% keyed
Node|NodeInternal|CompositorNode|CompositorNodeMapRange.use_clamp -> use_clamp:    boolean    Clamp result of the node to 0..1 range
Node|NodeInternal|CompositorNode|CompositorNodeMapUV.alpha -> alpha:    int    
Node|NodeInternal|CompositorNode|CompositorNodeMapValue.max -> max:    float[1]    
Node|NodeInternal|CompositorNode|CompositorNodeMapValue.min -> min:    float[1]    
Node|NodeInternal|CompositorNode|CompositorNodeMapValue.offset -> offset:    float[1]    
Node|NodeInternal|CompositorNode|CompositorNodeMapValue.size -> size:    float[1]    
Node|NodeInternal|CompositorNode|CompositorNodeMapValue.use_max -> use_max:    boolean    
Node|NodeInternal|CompositorNode|CompositorNodeMapValue.use_min -> use_min:    boolean    
Node|NodeInternal|CompositorNode|CompositorNodeMask.mask -> mask:    pointer    
Node|NodeInternal|CompositorNode|CompositorNodeMask.motion_blur_samples -> motion_blur_samples:    int    Number of motion blur samples
Node|NodeInternal|CompositorNode|CompositorNodeMask.motion_blur_shutter -> motion_blur_shutter:    float    Exposure for motion blur as a factor of FPS
Node|NodeInternal|CompositorNode|CompositorNodeMask.size_source -> size_source:    enum    Where to get the mask size from for aspect/size information
Node|NodeInternal|CompositorNode|CompositorNodeMask.size_x -> size_x:    int    
Node|NodeInternal|CompositorNode|CompositorNodeMask.size_y -> size_y:    int    
Node|NodeInternal|CompositorNode|CompositorNodeMask.use_antialiasing -> use_antialiasing:    boolean    Apply an anti-aliasing filter to the mask
Node|NodeInternal|CompositorNode|CompositorNodeMask.use_feather -> use_feather:    boolean    Use feather information from the mask
Node|NodeInternal|CompositorNode|CompositorNodeMask.use_motion_blur -> use_motion_blur:    boolean    Use multi-sampled motion blur of the mask
Node|NodeInternal|CompositorNode|CompositorNodeMath.operation -> operation:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeMath.use_clamp -> use_clamp:    boolean    Clamp result of the node to 0..1 range
Node|NodeInternal|CompositorNode|CompositorNodeMixRGB.blend_type -> blend_type:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeMixRGB.use_alpha -> use_alpha:    boolean    Include alpha of second input in this operation
Node|NodeInternal|CompositorNode|CompositorNodeMixRGB.use_clamp -> use_clamp:    boolean    Clamp result of the node to 0..1 range
Node|NodeInternal|CompositorNode|CompositorNodeMovieClip.clip -> clip:    pointer    
Node|NodeInternal|CompositorNode|CompositorNodeMovieDistortion.clip -> clip:    pointer    
Node|NodeInternal|CompositorNode|CompositorNodeMovieDistortion.distortion_type -> distortion_type:    enum    Distortion to use to filter image
Node|NodeInternal|CompositorNode|CompositorNodeOutputFile.active_input_index -> active_input_index:    int    Active input index in details view list
Node|NodeInternal|CompositorNode|CompositorNodeOutputFile.base_path -> base_path:    string    Base output path for the image
Node|NodeInternal|CompositorNode|CompositorNodeOutputFile.file_slots -> file_slots:    collection, (read-only)    
Node|NodeInternal|CompositorNode|CompositorNodeOutputFile.format -> format:    pointer, (read-only)    
Node|NodeInternal|CompositorNode|CompositorNodeOutputFile.layer_slots -> layer_slots:    collection, (read-only)    
Node|NodeInternal|CompositorNode|CompositorNodePlaneTrackDeform.clip -> clip:    pointer    
Node|NodeInternal|CompositorNode|CompositorNodePlaneTrackDeform.plane_track_name -> plane_track_name:    string    
Node|NodeInternal|CompositorNode|CompositorNodePlaneTrackDeform.tracking_object -> tracking_object:    string    
Node|NodeInternal|CompositorNode|CompositorNodePremulKey.mapping -> mapping:    enum    Conversion between premultiplied alpha and key alpha
Node|NodeInternal|CompositorNode|CompositorNodeRLayers.layer -> layer:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeRLayers.scene -> scene:    pointer    
Node|NodeInternal|CompositorNode|CompositorNodeRotate.filter_type -> filter_type:    enum    Method to use to filter rotation
Node|NodeInternal|CompositorNode|CompositorNodeScale.frame_method -> frame_method:    enum    How the image fits in the camera frame
Node|NodeInternal|CompositorNode|CompositorNodeScale.offset_x -> offset_x:    float    Offset image horizontally (factor of image size)
Node|NodeInternal|CompositorNode|CompositorNodeScale.offset_y -> offset_y:    float    Offset image vertically (factor of image size)
Node|NodeInternal|CompositorNode|CompositorNodeScale.space -> space:    enum    Coordinate space to scale relative to
Node|NodeInternal|CompositorNode|CompositorNodeSepYCCA.mode -> mode:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeSplitViewer.axis -> axis:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeSplitViewer.factor -> factor:    int    
Node|NodeInternal|CompositorNode|CompositorNodeStabilize.clip -> clip:    pointer    
Node|NodeInternal|CompositorNode|CompositorNodeStabilize.filter_type -> filter_type:    enum    Method to use to filter stabilization
Node|NodeInternal|CompositorNode|CompositorNodeSwitch.check -> check:    boolean    Off: first socket, On: second socket
Node|NodeInternal|CompositorNode|CompositorNodeTexture.node_output -> node_output:    int    For node-based textures, which output node to use
Node|NodeInternal|CompositorNode|CompositorNodeTexture.texture -> texture:    pointer    
Node|NodeInternal|CompositorNode|CompositorNodeTime.curve -> curve:    pointer, (read-only)    
Node|NodeInternal|CompositorNode|CompositorNodeTime.frame_end -> frame_end:    int    
Node|NodeInternal|CompositorNode|CompositorNodeTime.frame_start -> frame_start:    int    
Node|NodeInternal|CompositorNode|CompositorNodeTonemap.adaptation -> adaptation:    float    If 0, global; if 1, based on pixel intensity
Node|NodeInternal|CompositorNode|CompositorNodeTonemap.contrast -> contrast:    float    Set to 0 to use estimate from input image
Node|NodeInternal|CompositorNode|CompositorNodeTonemap.correction -> correction:    float    If 0, same for all channels; if 1, each independent
Node|NodeInternal|CompositorNode|CompositorNodeTonemap.gamma -> gamma:    float    If not used, set to 1
Node|NodeInternal|CompositorNode|CompositorNodeTonemap.intensity -> intensity:    float    If less than zero, darkens image; otherwise, makes it brighter
Node|NodeInternal|CompositorNode|CompositorNodeTonemap.key -> key:    float    The value the average luminance is mapped to
Node|NodeInternal|CompositorNode|CompositorNodeTonemap.offset -> offset:    float    Normally always 1, but can be used as an extra control to alter the brightness curve
Node|NodeInternal|CompositorNode|CompositorNodeTonemap.tonemap_type -> tonemap_type:    enum    
Node|NodeInternal|CompositorNode|CompositorNodeTrackPos.clip -> clip:    pointer    
Node|NodeInternal|CompositorNode|CompositorNodeTrackPos.frame_relative -> frame_relative:    int    Frame to be used for relative position
Node|NodeInternal|CompositorNode|CompositorNodeTrackPos.position -> position:    enum    Which marker position to use for output
Node|NodeInternal|CompositorNode|CompositorNodeTrackPos.track_name -> track_name:    string    
Node|NodeInternal|CompositorNode|CompositorNodeTrackPos.tracking_object -> tracking_object:    string    
Node|NodeInternal|CompositorNode|CompositorNodeTransform.filter_type -> filter_type:    enum    Method to use to filter transform
Node|NodeInternal|CompositorNode|CompositorNodeTranslate.use_relative -> use_relative:    boolean    Use relative (percent) values to define blur radius
Node|NodeInternal|CompositorNode|CompositorNodeTranslate.wrap_axis -> wrap_axis:    enum    Wrap image on a specific axis
Node|NodeInternal|CompositorNode|CompositorNodeValToRGB.color_ramp -> color_ramp:    pointer, (read-only)    
Node|NodeInternal|CompositorNode|CompositorNodeVecBlur.factor -> factor:    float    Scaling factor for motion vectors (actually, 'shutter speed', in frames)
Node|NodeInternal|CompositorNode|CompositorNodeVecBlur.samples -> samples:    int    
Node|NodeInternal|CompositorNode|CompositorNodeVecBlur.speed_max -> speed_max:    int    Maximum speed, or zero for none
Node|NodeInternal|CompositorNode|CompositorNodeVecBlur.speed_min -> speed_min:    int    Minimum speed for a pixel to be blurred (used to separate background from foreground)
Node|NodeInternal|CompositorNode|CompositorNodeVecBlur.use_curved -> use_curved:    boolean    Interpolate between frames in a Bezier curve, rather than linearly
Node|NodeInternal|CompositorNode|CompositorNodeViewer.center_x -> center_x:    float    
Node|NodeInternal|CompositorNode|CompositorNodeViewer.center_y -> center_y:    float    
Node|NodeInternal|CompositorNode|CompositorNodeViewer.tile_order -> tile_order:    enum    Tile order
Node|NodeInternal|CompositorNode|CompositorNodeViewer.use_alpha -> use_alpha:    boolean    Colors are treated alpha premultiplied, or colors output straight (alpha gets set to 1)
Node|NodeInternal|CompositorNode|CompositorNodeZcombine.use_alpha -> use_alpha:    boolean    Take Alpha channel into account when doing the Z operation
Node|NodeInternal|CompositorNode|CompositorNodeZcombine.use_antialias_z -> use_antialias_z:    boolean    Anti-alias the z-buffer to try to avoid artifacts, mostly useful for Blender renders
Node|NodeInternal|NodeFrame.label_size -> label_size:    int    Font size to use for displaying the label
Node|NodeInternal|NodeFrame.shrink -> shrink:    boolean    Shrink the frame to minimal bounding box
Node|NodeInternal|NodeGroup.interface -> interface:    pointer, (read-only)    Interface socket data
Node|NodeInternal|NodeGroup.node_tree -> node_tree:    pointer    
Node|NodeInternal|NodeGroupInput.interface -> interface:    pointer, (read-only)    Interface socket data
Node|NodeInternal|NodeGroupOutput.interface -> interface:    pointer, (read-only)    Interface socket data
Node|NodeInternal|NodeGroupOutput.is_active_output -> is_active_output:    boolean    True if this node is used as the active group output
Node|NodeInternal|ShaderNode|ShaderNodeAttribute.attribute_name -> attribute_name:    string    
Node|NodeInternal|ShaderNode|ShaderNodeBsdfGlass.distribution -> distribution:    enum    
Node|NodeInternal|ShaderNode|ShaderNodeBsdfGlossy.distribution -> distribution:    enum    
Node|NodeInternal|ShaderNode|ShaderNodeBsdfHair.component -> component:    enum    
Node|NodeInternal|ShaderNode|ShaderNodeBsdfRefraction.distribution -> distribution:    enum    
Node|NodeInternal|ShaderNode|ShaderNodeBsdfToon.component -> component:    enum    
Node|NodeInternal|ShaderNode|ShaderNodeBump.invert -> invert:    boolean    Invert the bump mapping direction to push into the surface instead of out
Node|NodeInternal|ShaderNode|ShaderNodeExtendedMaterial.invert_normal -> invert_normal:    boolean    Material Node uses inverted normal
Node|NodeInternal|ShaderNode|ShaderNodeExtendedMaterial.material -> material:    pointer    
Node|NodeInternal|ShaderNode|ShaderNodeExtendedMaterial.use_diffuse -> use_diffuse:    boolean    Material Node outputs Diffuse
Node|NodeInternal|ShaderNode|ShaderNodeExtendedMaterial.use_specular -> use_specular:    boolean    Material Node outputs Specular
Node|NodeInternal|ShaderNode|ShaderNodeGeometry.color_layer -> color_layer:    string    
Node|NodeInternal|ShaderNode|ShaderNodeGeometry.uv_layer -> uv_layer:    string    
Node|NodeInternal|ShaderNode|ShaderNodeGroup.interface -> interface:    pointer, (read-only)    Interface socket data
Node|NodeInternal|ShaderNode|ShaderNodeGroup.node_tree -> node_tree:    pointer    
Node|NodeInternal|ShaderNode|ShaderNodeLampData.lamp_object -> lamp_object:    pointer    
Node|NodeInternal|ShaderNode|ShaderNodeMapping.max -> max:    float[3]    Maximum value for clipping
Node|NodeInternal|ShaderNode|ShaderNodeMapping.min -> min:    float[3]    Minimum value for clipping
Node|NodeInternal|ShaderNode|ShaderNodeMapping.rotation -> rotation:    float[3]    
Node|NodeInternal|ShaderNode|ShaderNodeMapping.scale -> scale:    float[3]    
Node|NodeInternal|ShaderNode|ShaderNodeMapping.translation -> translation:    float[3]    
Node|NodeInternal|ShaderNode|ShaderNodeMapping.use_max -> use_max:    boolean    Whether to use maximum clipping value
Node|NodeInternal|ShaderNode|ShaderNodeMapping.use_min -> use_min:    boolean    Whether to use minimum clipping value
Node|NodeInternal|ShaderNode|ShaderNodeMapping.vector_type -> vector_type:    enum    Type of vector that the mapping transforms
Node|NodeInternal|ShaderNode|ShaderNodeMaterial.invert_normal -> invert_normal:    boolean    Material Node uses inverted normal
Node|NodeInternal|ShaderNode|ShaderNodeMaterial.material -> material:    pointer    
Node|NodeInternal|ShaderNode|ShaderNodeMaterial.use_diffuse -> use_diffuse:    boolean    Material Node outputs Diffuse
Node|NodeInternal|ShaderNode|ShaderNodeMaterial.use_specular -> use_specular:    boolean    Material Node outputs Specular
Node|NodeInternal|ShaderNode|ShaderNodeMath.operation -> operation:    enum    
Node|NodeInternal|ShaderNode|ShaderNodeMath.use_clamp -> use_clamp:    boolean    Clamp result of the node to 0..1 range
Node|NodeInternal|ShaderNode|ShaderNodeMixRGB.blend_type -> blend_type:    enum    
Node|NodeInternal|ShaderNode|ShaderNodeMixRGB.use_alpha -> use_alpha:    boolean    Include alpha of second input in this operation
Node|NodeInternal|ShaderNode|ShaderNodeMixRGB.use_clamp -> use_clamp:    boolean    Clamp result of the node to 0..1 range
Node|NodeInternal|ShaderNode|ShaderNodeNormalMap.space -> space:    enum    Space of the input normal
Node|NodeInternal|ShaderNode|ShaderNodeNormalMap.uv_map -> uv_map:    string    UV Map for tangent space maps
Node|NodeInternal|ShaderNode|ShaderNodeRGBCurve.mapping -> mapping:    pointer, (read-only)    
Node|NodeInternal|ShaderNode|ShaderNodeScript.bytecode -> bytecode:    string    Compile bytecode for shader script node
Node|NodeInternal|ShaderNode|ShaderNodeScript.bytecode_hash -> bytecode_hash:    string    Hash of compile bytecode, for quick equality checking
Node|NodeInternal|ShaderNode|ShaderNodeScript.filepath -> filepath:    string    Shader script path
Node|NodeInternal|ShaderNode|ShaderNodeScript.mode -> mode:    enum    
Node|NodeInternal|ShaderNode|ShaderNodeScript.script -> script:    pointer    Internal shader script to define the shader
Node|NodeInternal|ShaderNode|ShaderNodeScript.use_auto_update -> use_auto_update:    boolean    Automatically update the shader when the .osl file changes (external scripts only)
Node|NodeInternal|ShaderNode|ShaderNodeSubsurfaceScattering.falloff -> falloff:    enum    Function to determine how much light nearby points contribute based on their distance to the shading point
Node|NodeInternal|ShaderNode|ShaderNodeTangent.axis -> axis:    enum    Axis for radial tangents
Node|NodeInternal|ShaderNode|ShaderNodeTangent.direction_type -> direction_type:    enum    Method to use for the tangent
Node|NodeInternal|ShaderNode|ShaderNodeTangent.uv_map -> uv_map:    string    UV Map for tangent generated from UV
Node|NodeInternal|ShaderNode|ShaderNodeTexBrick.color_mapping -> color_mapping:    pointer, (read-only)    Color mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexBrick.offset -> offset:    float    
Node|NodeInternal|ShaderNode|ShaderNodeTexBrick.offset_frequency -> offset_frequency:    int    
Node|NodeInternal|ShaderNode|ShaderNodeTexBrick.squash -> squash:    float    
Node|NodeInternal|ShaderNode|ShaderNodeTexBrick.squash_frequency -> squash_frequency:    int    
Node|NodeInternal|ShaderNode|ShaderNodeTexBrick.texture_mapping -> texture_mapping:    pointer, (read-only)    Texture coordinate mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexChecker.color_mapping -> color_mapping:    pointer, (read-only)    Color mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexChecker.texture_mapping -> texture_mapping:    pointer, (read-only)    Texture coordinate mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexCoord.from_dupli -> from_dupli:    boolean    Use the parent of the dupli object if possible
Node|NodeInternal|ShaderNode|ShaderNodeTexEnvironment.color_mapping -> color_mapping:    pointer, (read-only)    Color mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexEnvironment.color_space -> color_space:    enum    Image file color space
Node|NodeInternal|ShaderNode|ShaderNodeTexEnvironment.image -> image:    pointer    
Node|NodeInternal|ShaderNode|ShaderNodeTexEnvironment.image_user -> image_user:    pointer, (read-only)    Parameters defining which layer, pass and frame of the image is displayed
Node|NodeInternal|ShaderNode|ShaderNodeTexEnvironment.projection -> projection:    enum    Projection of the input image
Node|NodeInternal|ShaderNode|ShaderNodeTexEnvironment.texture_mapping -> texture_mapping:    pointer, (read-only)    Texture coordinate mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexGradient.color_mapping -> color_mapping:    pointer, (read-only)    Color mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexGradient.gradient_type -> gradient_type:    enum    Style of the color blending
Node|NodeInternal|ShaderNode|ShaderNodeTexGradient.texture_mapping -> texture_mapping:    pointer, (read-only)    Texture coordinate mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexImage.color_mapping -> color_mapping:    pointer, (read-only)    Color mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexImage.color_space -> color_space:    enum    Image file color space
Node|NodeInternal|ShaderNode|ShaderNodeTexImage.image -> image:    pointer    
Node|NodeInternal|ShaderNode|ShaderNodeTexImage.image_user -> image_user:    pointer, (read-only)    Parameters defining which layer, pass and frame of the image is displayed
Node|NodeInternal|ShaderNode|ShaderNodeTexImage.projection -> projection:    enum    Method to project 2D image on object with a 3D texture vector
Node|NodeInternal|ShaderNode|ShaderNodeTexImage.projection_blend -> projection_blend:    float    For box projection, amount of blend to use between sides
Node|NodeInternal|ShaderNode|ShaderNodeTexImage.texture_mapping -> texture_mapping:    pointer, (read-only)    Texture coordinate mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexMagic.color_mapping -> color_mapping:    pointer, (read-only)    Color mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexMagic.texture_mapping -> texture_mapping:    pointer, (read-only)    Texture coordinate mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexMagic.turbulence_depth -> turbulence_depth:    int    Level of detail in the added turbulent noise
Node|NodeInternal|ShaderNode|ShaderNodeTexMusgrave.color_mapping -> color_mapping:    pointer, (read-only)    Color mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexMusgrave.musgrave_type -> musgrave_type:    enum    
Node|NodeInternal|ShaderNode|ShaderNodeTexMusgrave.texture_mapping -> texture_mapping:    pointer, (read-only)    Texture coordinate mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexNoise.color_mapping -> color_mapping:    pointer, (read-only)    Color mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexNoise.texture_mapping -> texture_mapping:    pointer, (read-only)    Texture coordinate mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexSky.color_mapping -> color_mapping:    pointer, (read-only)    Color mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexSky.ground_albedo -> ground_albedo:    float    Ground color that is subtly reflected in the sky
Node|NodeInternal|ShaderNode|ShaderNodeTexSky.sky_type -> sky_type:    enum    
Node|NodeInternal|ShaderNode|ShaderNodeTexSky.sun_direction -> sun_direction:    float[3]    Direction from where the sun is shining
Node|NodeInternal|ShaderNode|ShaderNodeTexSky.texture_mapping -> texture_mapping:    pointer, (read-only)    Texture coordinate mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexSky.turbidity -> turbidity:    float    Atmospheric turbidity
Node|NodeInternal|ShaderNode|ShaderNodeTexVoronoi.color_mapping -> color_mapping:    pointer, (read-only)    Color mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexVoronoi.coloring -> coloring:    enum    
Node|NodeInternal|ShaderNode|ShaderNodeTexVoronoi.texture_mapping -> texture_mapping:    pointer, (read-only)    Texture coordinate mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexWave.color_mapping -> color_mapping:    pointer, (read-only)    Color mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexWave.texture_mapping -> texture_mapping:    pointer, (read-only)    Texture coordinate mapping settings
Node|NodeInternal|ShaderNode|ShaderNodeTexWave.wave_type -> wave_type:    enum    
Node|NodeInternal|ShaderNode|ShaderNodeTexture.node_output -> node_output:    int    For node-based textures, which output node to use
Node|NodeInternal|ShaderNode|ShaderNodeTexture.texture -> texture:    pointer    
Node|NodeInternal|ShaderNode|ShaderNodeValToRGB.color_ramp -> color_ramp:    pointer, (read-only)    
Node|NodeInternal|ShaderNode|ShaderNodeVectorCurve.mapping -> mapping:    pointer, (read-only)    
Node|NodeInternal|ShaderNode|ShaderNodeVectorMath.operation -> operation:    enum    
Node|NodeInternal|ShaderNode|ShaderNodeVectorTransform.convert_from -> convert_from:    enum    Space to convert from
Node|NodeInternal|ShaderNode|ShaderNodeVectorTransform.convert_to -> convert_to:    enum    Space to convert to
Node|NodeInternal|ShaderNode|ShaderNodeVectorTransform.vector_type -> vector_type:    enum    
Node|NodeInternal|ShaderNode|ShaderNodeWireframe.use_pixel_size -> use_pixel_size:    boolean    Use screen pixel size instead of world units
Node|NodeInternal|TextureNode|TextureNodeBricks.offset -> offset:    float    
Node|NodeInternal|TextureNode|TextureNodeBricks.offset_frequency -> offset_frequency:    int    Offset every N rows
Node|NodeInternal|TextureNode|TextureNodeBricks.squash -> squash:    float    
Node|NodeInternal|TextureNode|TextureNodeBricks.squash_frequency -> squash_frequency:    int    Squash every N rows
Node|NodeInternal|TextureNode|TextureNodeCurveRGB.mapping -> mapping:    pointer, (read-only)    
Node|NodeInternal|TextureNode|TextureNodeCurveTime.curve -> curve:    pointer, (read-only)    
Node|NodeInternal|TextureNode|TextureNodeCurveTime.frame_end -> frame_end:    int    
Node|NodeInternal|TextureNode|TextureNodeCurveTime.frame_start -> frame_start:    int    
Node|NodeInternal|TextureNode|TextureNodeGroup.interface -> interface:    pointer, (read-only)    Interface socket data
Node|NodeInternal|TextureNode|TextureNodeGroup.node_tree -> node_tree:    pointer    
Node|NodeInternal|TextureNode|TextureNodeImage.image -> image:    pointer    
Node|NodeInternal|TextureNode|TextureNodeMath.operation -> operation:    enum    
Node|NodeInternal|TextureNode|TextureNodeMath.use_clamp -> use_clamp:    boolean    Clamp result of the node to 0..1 range
Node|NodeInternal|TextureNode|TextureNodeMixRGB.blend_type -> blend_type:    enum    
Node|NodeInternal|TextureNode|TextureNodeMixRGB.use_alpha -> use_alpha:    boolean    Include alpha of second input in this operation
Node|NodeInternal|TextureNode|TextureNodeMixRGB.use_clamp -> use_clamp:    boolean    Clamp result of the node to 0..1 range
Node|NodeInternal|TextureNode|TextureNodeOutput.filepath -> filepath:    string    
Node|NodeInternal|TextureNode|TextureNodeTexture.node_output -> node_output:    int    For node-based textures, which output node to use
Node|NodeInternal|TextureNode|TextureNodeTexture.texture -> texture:    pointer    
Node|NodeInternal|TextureNode|TextureNodeValToRGB.color_ramp -> color_ramp:    pointer, (read-only)    
ObjectBase.layers -> layers:    boolean[20]    Layers the object base is on
ObjectBase.layers_local_view -> layers_local_view:    boolean[8], (read-only)    3D local view layers the object base is on
ObjectBase.object -> object:    pointer, (read-only)    Object this base links to
ObjectBase.select -> select:    boolean    Object base selection state
ObjectConstraints.active -> active:    pointer    Active Object constraint
OceanTexData.ocean_object -> ocean_object:    pointer    Object containing the ocean modifier
OceanTexData.output -> output:    enum    The data that is output by the texture
Operator.bl_description -> bl_description:    string    
Operator.bl_idname -> bl_idname:    string    
Operator.bl_label -> bl_label:    string    
Operator.bl_options -> bl_options:    enum    Options for this operator type
Operator.bl_translation_context -> bl_translation_context:    string    
Operator.has_reports -> has_reports:    boolean, (read-only)    Operator has a set of reports (warnings and errors) from last execution
Operator.layout -> layout:    pointer, (read-only)    
Operator.name -> name:    string, (read-only)    
Operator.properties -> properties:    pointer, (read-only)    
OperatorMacro.properties -> properties:    pointer, (read-only)    
PackedFile.size -> size:    int, (read-only)    Size of packed file in bytes
Paint.brush -> brush:    pointer    Active Brush
Paint.input_samples -> input_samples:    int    Average multiple input samples together to smooth the brush stroke
Paint.show_brush -> show_brush:    boolean    
Paint.show_brush_on_surface -> show_brush_on_surface:    boolean    
Paint.show_low_resolution -> show_low_resolution:    boolean    For multires, show low resolution while navigating the view
Paint.use_symmetry_feather -> use_symmetry_feather:    boolean    Reduce the strength of the brush where it overlaps symmetrical daubs
Paint.use_symmetry_x -> use_symmetry_x:    boolean    Mirror brush across the X axis
Paint.use_symmetry_y -> use_symmetry_y:    boolean    Mirror brush across the Y axis
Paint.use_symmetry_z -> use_symmetry_z:    boolean    Mirror brush across the Z axis
Paint|ImagePaint.invert_stencil -> invert_stencil:    boolean    Invert the stencil layer
Paint|ImagePaint.normal_angle -> normal_angle:    int    Paint most on faces pointing towards the view according to this angle
Paint|ImagePaint.screen_grab_size -> screen_grab_size:    int[2]    Size to capture the image for re-projecting
Paint|ImagePaint.seam_bleed -> seam_bleed:    int    Extend paint beyond the faces UVs to reduce seams (in pixels, slower)
Paint|ImagePaint.use_backface_culling -> use_backface_culling:    boolean    Ignore faces pointing away from the view (faster)
Paint|ImagePaint.use_clone_layer -> use_clone_layer:    boolean    Use another UV map as clone source, otherwise use the 3D cursor as the source
Paint|ImagePaint.use_normal_falloff -> use_normal_falloff:    boolean    Paint most on faces pointing towards the view
Paint|ImagePaint.use_occlude -> use_occlude:    boolean    Only paint onto the faces directly under the brush (slower)
Paint|ImagePaint.use_stencil_layer -> use_stencil_layer:    boolean    Set the mask layer from the UV map buttons
Paint|Sculpt.detail_refine_method -> detail_refine_method:    enum    In dynamic-topology mode, how to add or remove mesh detail
Paint|Sculpt.detail_size -> detail_size:    int    Maximum edge length for dynamic topology sculpting (in pixels)
Paint|Sculpt.gravity -> gravity:    float    Amount of gravity after each dab
Paint|Sculpt.gravity_object -> gravity_object:    pointer    Object whose Z axis defines orientation of gravity
Paint|Sculpt.lock_x -> lock_x:    boolean    Disallow changes to the X axis of vertices
Paint|Sculpt.lock_y -> lock_y:    boolean    Disallow changes to the Y axis of vertices
Paint|Sculpt.lock_z -> lock_z:    boolean    Disallow changes to the Z axis of vertices
Paint|Sculpt.radial_symmetry -> radial_symmetry:    int[3]    Number of times to copy strokes across the surface
Paint|Sculpt.show_diffuse_color -> show_diffuse_color:    boolean    Show diffuse color of object and overlay sculpt mask on top of it
Paint|Sculpt.symmetrize_direction -> symmetrize_direction:    enum    Source and destination for symmetrize operator
Paint|Sculpt.use_deform_only -> use_deform_only:    boolean    Use only deformation modifiers (temporary disable all constructive modifiers except multi-resolution)
Paint|Sculpt.use_smooth_shading -> use_smooth_shading:    boolean    Show faces in dynamic-topology mode with smooth shading rather than flat shaded
Paint|Sculpt.use_threaded -> use_threaded:    boolean    Take advantage of multiple CPU cores to improve sculpting performance
Paint|VertexPaint.use_group_restrict -> use_group_restrict:    boolean    Restrict painting to vertices in the group
Paint|VertexPaint.use_normal -> use_normal:    boolean    Apply the vertex normal before painting
Paint|VertexPaint.use_spray -> use_spray:    boolean    Keep applying paint effect while holding mouse
Panel.bl_category -> bl_category:    string    
Panel.bl_context -> bl_context:    string    The context in which the panel belongs to. (TODO: explain the possible combinations bl_context/bl_region_type/bl_space_type)
Panel.bl_idname -> bl_idname:    string    If this is set, the panel gets a custom ID, otherwise it takes the name of the class used to define the panel. For example, if the class name is "OBJECT_PT_hello", and bl_idname is not set by
the script, then bl_idname = "OBJECT_PT_hello"
Panel.bl_label -> bl_label:    string    The panel label, shows up in the panel header at the right of the triangle used to collapse the panel
Panel.bl_options -> bl_options:    enum    Options for this panel type
Panel.bl_region_type -> bl_region_type:    enum    The region where the panel is going to be used in
Panel.bl_space_type -> bl_space_type:    enum    The space where the panel is going to be used in
Panel.bl_translation_context -> bl_translation_context:    string    
Panel.layout -> layout:    pointer, (read-only)    Defines the structure of the panel in the UI
Panel.text -> text:    string    XXX todo
Panel.use_pin -> use_pin:    boolean    
Particle.alive_state -> alive_state:    enum    
Particle.angular_velocity -> angular_velocity:    float[3]    
Particle.birth_time -> birth_time:    float    
Particle.die_time -> die_time:    float    
Particle.hair_keys -> hair_keys:    collection, (read-only)    
Particle.is_exist -> is_exist:    boolean, (read-only)    
Particle.is_visible -> is_visible:    boolean, (read-only)    
Particle.lifetime -> lifetime:    float    
Particle.location -> location:    float[3]    
Particle.particle_keys -> particle_keys:    collection, (read-only)    
Particle.prev_angular_velocity -> prev_angular_velocity:    float[3]    
Particle.prev_location -> prev_location:    float[3]    
Particle.prev_rotation -> prev_rotation:    float[4]    
Particle.prev_velocity -> prev_velocity:    float[3]    
Particle.rotation -> rotation:    float[4]    
Particle.size -> size:    float    
Particle.velocity -> velocity:    float[3]    
ParticleBrush.count -> count:    int    Particle count
ParticleBrush.curve -> curve:    pointer, (read-only)    
ParticleBrush.length_mode -> length_mode:    enum    
ParticleBrush.puff_mode -> puff_mode:    enum    
ParticleBrush.size -> size:    int    Radius of the brush in pixels
ParticleBrush.steps -> steps:    int    Brush steps
ParticleBrush.strength -> strength:    float    Brush strength
ParticleBrush.use_puff_volume -> use_puff_volume:    boolean    Apply puff to unselected end-points (helps maintain hair volume when puffing root)
ParticleDupliWeight.count -> count:    int    The number of times this object is repeated with respect to other objects
ParticleDupliWeight.name -> name:    string, (read-only)    Particle dupliobject name
ParticleEdit.brush -> brush:    pointer, (read-only)    
ParticleEdit.default_key_count -> default_key_count:    int    How many keys to make new particles with
ParticleEdit.draw_step -> draw_step:    int    How many steps to draw the path with
ParticleEdit.emitter_distance -> emitter_distance:    float    Distance to keep particles away from the emitter
ParticleEdit.fade_frames -> fade_frames:    int    How many frames to fade
ParticleEdit.is_editable -> is_editable:    boolean, (read-only)    A valid edit mode exists
ParticleEdit.is_hair -> is_hair:    boolean, (read-only)    Editing hair
ParticleEdit.object -> object:    pointer, (read-only)    The edited object
ParticleEdit.select_mode -> select_mode:    enum    Particle select and display mode
ParticleEdit.show_particles -> show_particles:    boolean    Draw actual particles
ParticleEdit.tool -> tool:    enum    
ParticleEdit.type -> type:    enum    
ParticleEdit.use_auto_velocity -> use_auto_velocity:    boolean    Calculate point velocities automatically
ParticleEdit.use_default_interpolate -> use_default_interpolate:    boolean    Interpolate new particles from the existing ones
ParticleEdit.use_emitter_deflect -> use_emitter_deflect:    boolean    Keep paths from intersecting the emitter
ParticleEdit.use_fade_time -> use_fade_time:    boolean    Fade paths and keys further away from current frame
ParticleEdit.use_preserve_length -> use_preserve_length:    boolean    Keep path lengths constant
ParticleEdit.use_preserve_root -> use_preserve_root:    boolean    Keep root keys unmodified
ParticleHairKey.co -> co:    float[3]    Location of the hair key in object space
ParticleHairKey.co_local -> co_local:    float[3]    Location of the hair key in its local coordinate system, relative to the emitting face
ParticleHairKey.time -> time:    float    Relative time of key over hair length
ParticleHairKey.weight -> weight:    float    Weight for cloth simulation
ParticleKey.angular_velocity -> angular_velocity:    float[3]    Key angular velocity
ParticleKey.location -> location:    float[3]    Key location
ParticleKey.rotation -> rotation:    float[4]    Key rotation quaternion
ParticleKey.time -> time:    float    Time of key over the simulation
ParticleKey.velocity -> velocity:    float[3]    Key velocity
ParticleSystem.active_particle_target -> active_particle_target:    pointer, (read-only)    
ParticleSystem.active_particle_target_index -> active_particle_target_index:    int    
ParticleSystem.billboard_normal_uv -> billboard_normal_uv:    string    UV map to control billboard normals
ParticleSystem.billboard_split_uv -> billboard_split_uv:    string    UV map to control billboard splitting
ParticleSystem.billboard_time_index_uv -> billboard_time_index_uv:    string    UV map to control billboard time index (X-Y)
ParticleSystem.child_particles -> child_particles:    collection, (read-only)    Child particles generated by the particle system
ParticleSystem.child_seed -> child_seed:    int    Offset in the random number table for child particles, to get a different randomized result
ParticleSystem.cloth -> cloth:    pointer, (read-only)    Cloth dynamics for hair
ParticleSystem.dt_frac -> dt_frac:    float, (read-only)    The current simulation time step size, as a fraction of a frame
ParticleSystem.has_multiple_caches -> has_multiple_caches:    boolean, (read-only)    Particle system has multiple point caches
ParticleSystem.invert_vertex_group_clump -> invert_vertex_group_clump:    boolean    Negate the effect of the clump vertex group
ParticleSystem.invert_vertex_group_density -> invert_vertex_group_density:    boolean    Negate the effect of the density vertex group
ParticleSystem.invert_vertex_group_field -> invert_vertex_group_field:    boolean    Negate the effect of the field vertex group
ParticleSystem.invert_vertex_group_kink -> invert_vertex_group_kink:    boolean    Negate the effect of the kink vertex group
ParticleSystem.invert_vertex_group_length -> invert_vertex_group_length:    boolean    Negate the effect of the length vertex group
ParticleSystem.invert_vertex_group_rotation -> invert_vertex_group_rotation:    boolean    Negate the effect of the rotation vertex group
ParticleSystem.invert_vertex_group_roughness_1 -> invert_vertex_group_roughness_1:    boolean    Negate the effect of the roughness 1 vertex group
ParticleSystem.invert_vertex_group_roughness_2 -> invert_vertex_group_roughness_2:    boolean    Negate the effect of the roughness 2 vertex group
ParticleSystem.invert_vertex_group_roughness_end -> invert_vertex_group_roughness_end:    boolean    Negate the effect of the roughness end vertex group
ParticleSystem.invert_vertex_group_size -> invert_vertex_group_size:    boolean    Negate the effect of the size vertex group
ParticleSystem.invert_vertex_group_tangent -> invert_vertex_group_tangent:    boolean    Negate the effect of the tangent vertex group
ParticleSystem.invert_vertex_group_velocity -> invert_vertex_group_velocity:    boolean    Negate the effect of the velocity vertex group
ParticleSystem.is_editable -> is_editable:    boolean, (read-only)    Particle system can be edited in particle mode
ParticleSystem.is_edited -> is_edited:    boolean, (read-only)    Particle system has been edited in particle mode
ParticleSystem.is_global_hair -> is_global_hair:    boolean, (read-only)    Hair keys are in global coordinate space
ParticleSystem.name -> name:    string    Particle system name
ParticleSystem.parent -> parent:    pointer    Use this object's coordinate system instead of global coordinate system
ParticleSystem.particles -> particles:    collection, (read-only)    Particles generated by the particle system
ParticleSystem.point_cache -> point_cache:    pointer, (read-only)    
ParticleSystem.reactor_target_object -> reactor_target_object:    pointer    For reactor systems, the object that has the target particle system (empty if same object)
ParticleSystem.reactor_target_particle_system -> reactor_target_particle_system:    int    For reactor systems, index of particle system on the target object
ParticleSystem.seed -> seed:    int    Offset in the random number table, to get a different randomized result
ParticleSystem.settings -> settings:    pointer    Particle system settings
ParticleSystem.targets -> targets:    collection, (read-only)    Target particle systems
ParticleSystem.use_hair_dynamics -> use_hair_dynamics:    boolean    Enable hair dynamics using cloth simulation
ParticleSystem.use_keyed_timing -> use_keyed_timing:    boolean    Use key times
ParticleSystem.vertex_group_clump -> vertex_group_clump:    string    Vertex group to control clump
ParticleSystem.vertex_group_density -> vertex_group_density:    string    Vertex group to control density
ParticleSystem.vertex_group_field -> vertex_group_field:    string    Vertex group to control field
ParticleSystem.vertex_group_kink -> vertex_group_kink:    string    Vertex group to control kink
ParticleSystem.vertex_group_length -> vertex_group_length:    string    Vertex group to control length
ParticleSystem.vertex_group_rotation -> vertex_group_rotation:    string    Vertex group to control rotation
ParticleSystem.vertex_group_roughness_1 -> vertex_group_roughness_1:    string    Vertex group to control roughness 1
ParticleSystem.vertex_group_roughness_2 -> vertex_group_roughness_2:    string    Vertex group to control roughness 2
ParticleSystem.vertex_group_roughness_end -> vertex_group_roughness_end:    string    Vertex group to control roughness end
ParticleSystem.vertex_group_size -> vertex_group_size:    string    Vertex group to control size
ParticleSystem.vertex_group_tangent -> vertex_group_tangent:    string    Vertex group to control tangent
ParticleSystem.vertex_group_velocity -> vertex_group_velocity:    string    Vertex group to control velocity
ParticleSystems.active -> active:    pointer, (read-only)    Active particle system being displayed
ParticleSystems.active_index -> active_index:    int    Index of active particle system slot
ParticleTarget.alliance -> alliance:    enum    
ParticleTarget.duration -> duration:    float    
ParticleTarget.is_valid -> is_valid:    boolean    Keyed particles target is valid
ParticleTarget.name -> name:    string, (read-only)    Particle target name
ParticleTarget.object -> object:    pointer    The object that has the target particle system (empty if same object)
ParticleTarget.system -> system:    int    The index of particle system on the target object
ParticleTarget.time -> time:    float    
PathCompare.path -> path:    string    
PathCompare.use_glob -> use_glob:    boolean    Enable wildcard globbing
PointCache.compression -> compression:    enum    Compression method to be used
PointCache.filepath -> filepath:    string    Cache file path
PointCache.frame_end -> frame_end:    int    Frame on which the simulation stops
PointCache.frame_start -> frame_start:    int    Frame on which the simulation starts
PointCache.frame_step -> frame_step:    int    Number of frames between cached frames
PointCache.frames_skipped -> frames_skipped:    boolean, (read-only)    
PointCache.index -> index:    int    Index number of cache files
PointCache.info -> info:    string, (read-only)    Info on current cache status
PointCache.is_baked -> is_baked:    boolean, (read-only)    
PointCache.is_baking -> is_baking:    boolean, (read-only)    
PointCache.is_outdated -> is_outdated:    boolean, (read-only)    
PointCache.name -> name:    string    Cache name
PointCache.point_caches -> point_caches:    collection, (read-only)    Point cache list
PointCache.use_disk_cache -> use_disk_cache:    boolean    Save cache files to disk (.blend file must be saved first)
PointCache.use_external -> use_external:    boolean    Read cache from an external location
PointCache.use_library_path -> use_library_path:    boolean    Use this file's path for the disk cache when library linked into another file (for local bakes per scene file, disable this option)
PointCaches.active_index -> active_index:    int    
PointDensity.color_ramp -> color_ramp:    pointer, (read-only)    
PointDensity.color_source -> color_source:    enum    Data to derive color results from
PointDensity.falloff -> falloff:    enum    Method of attenuating density by distance from the point
PointDensity.falloff_curve -> falloff_curve:    pointer, (read-only)    
PointDensity.falloff_soft -> falloff_soft:    float    Softness of the 'soft' falloff option
PointDensity.falloff_speed_scale -> falloff_speed_scale:    float    Multiplier to bring particle speed within an acceptable range
PointDensity.noise_basis -> noise_basis:    enum    Noise formula used for turbulence
PointDensity.object -> object:    pointer    Object to take point data from
PointDensity.particle_cache_space -> particle_cache_space:    enum    Coordinate system to cache particles in
PointDensity.particle_system -> particle_system:    pointer    Particle System to render as points
PointDensity.point_source -> point_source:    enum    Point data to use as renderable point density
PointDensity.radius -> radius:    float    Radius from the shaded sample to look for points within
PointDensity.speed_scale -> speed_scale:    float    Multiplier to bring particle speed within an acceptable range
PointDensity.turbulence_depth -> turbulence_depth:    int    Level of detail in the added turbulent noise
PointDensity.turbulence_influence -> turbulence_influence:    enum    Method for driving added turbulent noise
PointDensity.turbulence_scale -> turbulence_scale:    float    Scale of the added turbulent noise
PointDensity.turbulence_strength -> turbulence_strength:    float    Strength of the added turbulent noise
PointDensity.use_falloff_curve -> use_falloff_curve:    boolean    Use a custom falloff curve
PointDensity.use_turbulence -> use_turbulence:    boolean    Add directed noise to the density at render-time
PointDensity.vertex_cache_space -> vertex_cache_space:    enum    Coordinate system to cache vertices in
Pose.animation_visualization -> animation_visualization:    pointer, (read-only)    Animation data for this datablock
Pose.bone_groups -> bone_groups:    collection, (read-only)    Groups of the bones
Pose.bones -> bones:    collection, (read-only)    Individual pose bones for the armature
Pose.ik_param -> ik_param:    pointer, (read-only)    Parameters for IK solver
Pose.ik_solver -> ik_solver:    enum    Selection of IK solver for IK chain
PoseBone.bone -> bone:    pointer, (read-only)    Bone associated with this PoseBone
PoseBone.bone_group -> bone_group:    pointer    Bone Group this pose channel belongs to
PoseBone.bone_group_index -> bone_group_index:    int    Bone Group this pose channel belongs to (0=no group)
PoseBone.child -> child:    pointer, (read-only)    Child of this pose bone
PoseBone.constraints -> constraints:    collection, (read-only)    Constraints that act on this PoseChannel
PoseBone.custom_shape -> custom_shape:    pointer    Object that defines custom draw type for this bone
PoseBone.custom_shape_transform -> custom_shape_transform:    pointer    Bone that defines the display transform of this custom shape
PoseBone.head -> head:    float[3], (read-only)    Location of head of the channel's bone
PoseBone.ik_linear_weight -> ik_linear_weight:    float    Weight of scale constraint for IK
PoseBone.ik_max_x -> ik_max_x:    float    Maximum angles for IK Limit
PoseBone.ik_max_y -> ik_max_y:    float    Maximum angles for IK Limit
PoseBone.ik_max_z -> ik_max_z:    float    Maximum angles for IK Limit
PoseBone.ik_min_x -> ik_min_x:    float    Minimum angles for IK Limit
PoseBone.ik_min_y -> ik_min_y:    float    Minimum angles for IK Limit
PoseBone.ik_min_z -> ik_min_z:    float    Minimum angles for IK Limit
PoseBone.ik_rotation_weight -> ik_rotation_weight:    float    Weight of rotation constraint for IK
PoseBone.ik_stiffness_x -> ik_stiffness_x:    float    IK stiffness around the X axis
PoseBone.ik_stiffness_y -> ik_stiffness_y:    float    IK stiffness around the Y axis
PoseBone.ik_stiffness_z -> ik_stiffness_z:    float    IK stiffness around the Z axis
PoseBone.ik_stretch -> ik_stretch:    float    Allow scaling of the bone for IK
PoseBone.is_in_ik_chain -> is_in_ik_chain:    boolean, (read-only)    Is part of an IK chain
PoseBone.location -> location:    float[3]    
PoseBone.lock_ik_x -> lock_ik_x:    boolean    Disallow movement around the X axis
PoseBone.lock_ik_y -> lock_ik_y:    boolean    Disallow movement around the Y axis
PoseBone.lock_ik_z -> lock_ik_z:    boolean    Disallow movement around the Z axis
PoseBone.lock_location -> lock_location:    boolean[3]    Lock editing of location in the interface
PoseBone.lock_rotation -> lock_rotation:    boolean[3]    Lock editing of rotation in the interface
PoseBone.lock_rotation_w -> lock_rotation_w:    boolean    Lock editing of 'angle' component of four-component rotations in the interface
PoseBone.lock_rotations_4d -> lock_rotations_4d:    boolean    Lock editing of four component rotations by components (instead of as Eulers)
PoseBone.lock_scale -> lock_scale:    boolean[3]    Lock editing of scale in the interface
PoseBone.matrix -> matrix:    float[16]    Final 4x4 matrix after constraints and drivers are applied (object space)
PoseBone.matrix_basis -> matrix_basis:    float[16]    Alternative access to location/scale/rotation relative to the parent and own rest bone
PoseBone.matrix_channel -> matrix_channel:    float[16], (read-only)    4x4 matrix, before constraints
PoseBone.motion_path -> motion_path:    pointer, (read-only)    Motion Path for this element
PoseBone.name -> name:    string    
PoseBone.parent -> parent:    pointer, (read-only)    Parent of this pose bone
PoseBone.rotation_axis_angle -> rotation_axis_angle:    float[4]    Angle of Rotation for Axis-Angle rotation representation
PoseBone.rotation_euler -> rotation_euler:    float[3]    Rotation in Eulers
PoseBone.rotation_mode -> rotation_mode:    enum    
PoseBone.rotation_quaternion -> rotation_quaternion:    float[4]    Rotation in Quaternions
PoseBone.scale -> scale:    float[3]    
PoseBone.tail -> tail:    float[3], (read-only)    Location of tail of the channel's bone
PoseBone.use_ik_limit_x -> use_ik_limit_x:    boolean    Limit movement around the X axis
PoseBone.use_ik_limit_y -> use_ik_limit_y:    boolean    Limit movement around the Y axis
PoseBone.use_ik_limit_z -> use_ik_limit_z:    boolean    Limit movement around the Z axis
PoseBone.use_ik_linear_control -> use_ik_linear_control:    boolean    Apply channel size as IK constraint if stretching is enabled
PoseBone.use_ik_rotation_control -> use_ik_rotation_control:    boolean    Apply channel rotation as IK constraint
PoseBoneConstraints.active -> active:    pointer    Active PoseChannel constraint
Property.description -> description:    string, (read-only)    Description of the property for tooltips
Property.icon -> icon:    enum, (read-only)    Icon of the item
Property.identifier -> identifier:    string, (read-only)    Unique name used in the code and scripting
Property.is_animatable -> is_animatable:    boolean, (read-only)    Property is animatable through RNA
Property.is_argument_optional -> is_argument_optional:    boolean, (read-only)    True when the property is optional in a Python function implementing an RNA function
Property.is_enum_flag -> is_enum_flag:    boolean, (read-only)    True when multiple enums
Property.is_hidden -> is_hidden:    boolean, (read-only)    True when the property is hidden
Property.is_library_editable -> is_library_editable:    boolean, (read-only)    Property is editable from linked instances (changes not saved)
Property.is_never_none -> is_never_none:    boolean, (read-only)    True when this value can't be set to None
Property.is_output -> is_output:    boolean, (read-only)    True when this property is an output value from an RNA function
Property.is_readonly -> is_readonly:    boolean, (read-only)    Property is editable through RNA
Property.is_registered -> is_registered:    boolean, (read-only)    Property is registered as part of type registration
Property.is_registered_optional -> is_registered_optional:    boolean, (read-only)    Property is optionally registered as part of type registration
Property.is_required -> is_required:    boolean, (read-only)    False when this property is an optional argument in an RNA function
Property.is_runtime -> is_runtime:    boolean, (read-only)    Property has been dynamically created at runtime
Property.is_skip_save -> is_skip_save:    boolean, (read-only)    True when the property is not saved in presets
Property.name -> name:    string, (read-only)    Human readable name
Property.srna -> srna:    pointer, (read-only)    Struct definition used for properties assigned to this item
Property.subtype -> subtype:    enum, (read-only)    Semantic interpretation of the property
Property.translation_context -> translation_context:    string, (read-only)    Translation context of the property's name
Property.type -> type:    enum, (read-only)    Data type of the property
Property.unit -> unit:    enum, (read-only)    Type of units for this property
PropertyGroup.name -> name:    string    Unique name used in the code and scripting
PropertyGroupItem.collection -> collection:    collection, (read-only)    
PropertyGroupItem.double -> double:    float    
PropertyGroupItem.double_array -> double_array:    float[1]    
PropertyGroupItem.float -> float:    float    
PropertyGroupItem.float_array -> float_array:    float[1]    
PropertyGroupItem.group -> group:    pointer, (read-only)    
PropertyGroupItem.idp_array -> idp_array:    collection, (read-only)    
PropertyGroupItem.int -> int:    int    
PropertyGroupItem.int_array -> int_array:    int[1]    
PropertyGroupItem.string -> string:    string    
PropertyGroup|CyclesCameraSettings.aperture_blades -> aperture_blades:    int    Number of blades in aperture for polygonal bokeh (at least 3)
PropertyGroup|CyclesCameraSettings.aperture_fstop -> aperture_fstop:    float    F/stop ratio (lower numbers give more defocus, higher numbers give a sharper image)
PropertyGroup|CyclesCameraSettings.aperture_rotation -> aperture_rotation:    float    Rotation of blades in aperture
PropertyGroup|CyclesCameraSettings.aperture_size -> aperture_size:    float    Radius of the aperture for depth of field (higher values give more defocus)
PropertyGroup|CyclesCameraSettings.aperture_type -> aperture_type:    enum    Use F/stop number or aperture radius
PropertyGroup|CyclesCameraSettings.fisheye_fov -> fisheye_fov:    float    Field of view for the fisheye lens
PropertyGroup|CyclesCameraSettings.fisheye_lens -> fisheye_lens:    float    Lens focal length (mm)
PropertyGroup|CyclesCameraSettings.panorama_type -> panorama_type:    enum    Distortion to use for the calculation
PropertyGroup|CyclesCurveRenderSettings.cull_backfacing -> cull_backfacing:    boolean    Do not test the back-face of each strand
PropertyGroup|CyclesCurveRenderSettings.maximum_width -> maximum_width:    float    Maximum extension that strand radius can be increased by
PropertyGroup|CyclesCurveRenderSettings.minimum_width -> minimum_width:    float    Minimal pixel width for strands (0 - deactivated)
PropertyGroup|CyclesCurveRenderSettings.primitive -> primitive:    enum    Type of primitive used for hair rendering
PropertyGroup|CyclesCurveRenderSettings.resolution -> resolution:    int    Resolution of generated mesh
PropertyGroup|CyclesCurveRenderSettings.shape -> shape:    enum    Form of hair
PropertyGroup|CyclesCurveRenderSettings.subdivisions -> subdivisions:    int    Number of subdivisions used in Cardinal curve intersection (power of 2)
PropertyGroup|CyclesCurveRenderSettings.use_curves -> use_curves:    boolean    Activate Cycles hair rendering for particle system
PropertyGroup|CyclesCurveSettings.radius_scale -> radius_scale:    float    Multiplier of width properties
PropertyGroup|CyclesCurveSettings.root_width -> root_width:    float    Strand's width at root
PropertyGroup|CyclesCurveSettings.shape -> shape:    float    Strand shape parameter
PropertyGroup|CyclesCurveSettings.tip_width -> tip_width:    float    Strand's width at tip
PropertyGroup|CyclesCurveSettings.use_closetip -> use_closetip:    boolean    Set tip radius to zero
PropertyGroup|CyclesLampSettings.cast_shadow -> cast_shadow:    boolean    Lamp casts shadows
PropertyGroup|CyclesLampSettings.samples -> samples:    int    Number of light samples to render for each AA sample
PropertyGroup|CyclesLampSettings.use_multiple_importance_sampling -> use_multiple_importance_sampling:    boolean    Use multiple importance sampling for the lamp, reduces noise for area lamps and sharp glossy materials
PropertyGroup|CyclesMaterialSettings.homogeneous_volume -> homogeneous_volume:    boolean    When using volume rendering, assume volume has the same density everywhere(not using any textures), for faster rendering
PropertyGroup|CyclesMaterialSettings.sample_as_light -> sample_as_light:    boolean    Use multiple importance sampling for this material, disabling may reduce overall noise for large objects that emit little light compared to other
light sources
PropertyGroup|CyclesMaterialSettings.use_transparent_shadow -> use_transparent_shadow:    boolean    Use transparent shadows for this material if it contains a Transparent BSDF, disabling will render faster but not give accurate
shadows
PropertyGroup|CyclesMeshSettings.dicing_rate -> dicing_rate:    float    
PropertyGroup|CyclesMeshSettings.displacement_method -> displacement_method:    enum    Method to use for the displacement
PropertyGroup|CyclesMeshSettings.use_subdivision -> use_subdivision:    boolean    Subdivide mesh for rendering
PropertyGroup|CyclesRenderSettings.aa_samples -> aa_samples:    int    Number of antialiasing samples to render for each pixel
PropertyGroup|CyclesRenderSettings.ao_samples -> ao_samples:    int    Number of ambient occlusion samples to render for each AA sample
PropertyGroup|CyclesRenderSettings.blur_glossy -> blur_glossy:    float    Adaptively blur glossy shaders after blurry bounces, to reduce noise at the cost of accuracy
PropertyGroup|CyclesRenderSettings.debug_bvh_type -> debug_bvh_type:    enum    Choose between faster updates, or faster render
PropertyGroup|CyclesRenderSettings.debug_cancel_timeout -> debug_cancel_timeout:    float    
PropertyGroup|CyclesRenderSettings.debug_reset_timeout -> debug_reset_timeout:    float    
PropertyGroup|CyclesRenderSettings.debug_text_timeout -> debug_text_timeout:    float    
PropertyGroup|CyclesRenderSettings.debug_tile_size -> debug_tile_size:    int    
PropertyGroup|CyclesRenderSettings.debug_use_spatial_splits -> debug_use_spatial_splits:    boolean    Use BVH spatial splits: longer builder time, faster render
PropertyGroup|CyclesRenderSettings.device -> device:    enum    Device to use for rendering
PropertyGroup|CyclesRenderSettings.diffuse_bounces -> diffuse_bounces:    int    Maximum number of diffuse reflection bounces, bounded by total maximum
PropertyGroup|CyclesRenderSettings.diffuse_samples -> diffuse_samples:    int    Number of diffuse bounce samples to render for each AA sample
PropertyGroup|CyclesRenderSettings.feature_set -> feature_set:    enum    Feature set to use for rendering
PropertyGroup|CyclesRenderSettings.film_exposure -> film_exposure:    float    Image brightness scale
PropertyGroup|CyclesRenderSettings.film_transparent -> film_transparent:    boolean    World background is transparent with premultiplied alpha
PropertyGroup|CyclesRenderSettings.filter_type -> filter_type:    enum    Pixel filter type
PropertyGroup|CyclesRenderSettings.filter_width -> filter_width:    float    Pixel filter width
PropertyGroup|CyclesRenderSettings.glossy_bounces -> glossy_bounces:    int    Maximum number of glossy reflection bounces, bounded by total maximum
PropertyGroup|CyclesRenderSettings.glossy_samples -> glossy_samples:    int    Number of glossy bounce samples to render for each AA sample
PropertyGroup|CyclesRenderSettings.max_bounces -> max_bounces:    int    Total maximum number of bounces
PropertyGroup|CyclesRenderSettings.mesh_light_samples -> mesh_light_samples:    int    Number of mesh emission light samples to render for each AA sample
PropertyGroup|CyclesRenderSettings.min_bounces -> min_bounces:    int    Minimum number of bounces, setting this lower than the maximum enables probabilistic path termination (faster but noisier)
PropertyGroup|CyclesRenderSettings.no_caustics -> no_caustics:    boolean    Leave out caustics, resulting in a darker image with less noise
PropertyGroup|CyclesRenderSettings.preview_aa_samples -> preview_aa_samples:    int    Number of antialiasing samples to render in the viewport, unlimited if 0
PropertyGroup|CyclesRenderSettings.preview_active_layer -> preview_active_layer:    boolean    Preview active render layer in viewport
PropertyGroup|CyclesRenderSettings.preview_pause -> preview_pause:    boolean    Pause all viewport preview renders
PropertyGroup|CyclesRenderSettings.preview_samples -> preview_samples:    int    Number of samples to render in the viewport, unlimited if 0
PropertyGroup|CyclesRenderSettings.preview_start_resolution -> preview_start_resolution:    int    Resolution to start rendering preview at, progressively increasing it to the full viewport size
PropertyGroup|CyclesRenderSettings.progressive -> progressive:    enum    Method to sample lights and materials
PropertyGroup|CyclesRenderSettings.sample_clamp -> sample_clamp:    float    If non-zero, the maximum value for a sample, higher values will be scaled down to avoid too much noise and slow convergence at the cost of accuracy
PropertyGroup|CyclesRenderSettings.samples -> samples:    int    Number of samples to render for each pixel
PropertyGroup|CyclesRenderSettings.sampling_pattern -> sampling_pattern:    enum    Random sampling pattern used by the integrator
PropertyGroup|CyclesRenderSettings.seed -> seed:    int    Seed value for integrator to get different noise patterns
PropertyGroup|CyclesRenderSettings.shading_system -> shading_system:    boolean    Use Open Shading Language (CPU rendering only)
PropertyGroup|CyclesRenderSettings.subsurface_samples -> subsurface_samples:    int    Number of subsurface scattering samples to render for each AA sample
PropertyGroup|CyclesRenderSettings.tile_order -> tile_order:    enum    Tile order for rendering
PropertyGroup|CyclesRenderSettings.transmission_bounces -> transmission_bounces:    int    Maximum number of transmission bounces, bounded by total maximum
PropertyGroup|CyclesRenderSettings.transmission_samples -> transmission_samples:    int    Number of transmission bounce samples to render for each AA sample
PropertyGroup|CyclesRenderSettings.transparent_max_bounces -> transparent_max_bounces:    int    Maximum number of transparent bounces
PropertyGroup|CyclesRenderSettings.transparent_min_bounces -> transparent_min_bounces:    int    Minimum number of transparent bounces, setting this lower than the maximum enables probabilistic path termination (faster but noisier)
PropertyGroup|CyclesRenderSettings.use_cache -> use_cache:    boolean    Cache last built BVH to disk for faster re-render if no geometry changed
PropertyGroup|CyclesRenderSettings.use_layer_samples -> use_layer_samples:    enum    How to use per render layer sample settings
PropertyGroup|CyclesRenderSettings.use_progressive_refine -> use_progressive_refine:    boolean    Instead of rendering each tile until it is finished, refine the whole image progressively (this renders somewhat slower, but time can be
saved by manually stopping the render when the noise is low enough)
PropertyGroup|CyclesRenderSettings.use_square_samples -> use_square_samples:    boolean    Square sampling values for easier artist control
PropertyGroup|CyclesRenderSettings.use_transparent_shadows -> use_transparent_shadows:    boolean    Use transparency of surfaces for rendering shadows
PropertyGroup|CyclesRenderSettings.volume_bounces -> volume_bounces:    int    Maximum number of volumetric scattering events
PropertyGroup|CyclesRenderSettings.volume_max_steps -> volume_max_steps:    int    Maximum number of steps through the volume before giving up, to protect from extremely long render times with big objects or small step sizes
PropertyGroup|CyclesRenderSettings.volume_samples -> volume_samples:    int    Number of volume scattering samples to render for each AA sample
PropertyGroup|CyclesRenderSettings.volume_step_size -> volume_step_size:    float    Distance between volume shader samples when rendering the volume. Lower values give more accurate and detailed results but also increased render time
PropertyGroup|CyclesVisibilitySettings.camera -> camera:    boolean    Object visibility for camera rays
PropertyGroup|CyclesVisibilitySettings.diffuse -> diffuse:    boolean    Object visibility for diffuse reflection rays
PropertyGroup|CyclesVisibilitySettings.glossy -> glossy:    boolean    Object visibility for glossy reflection rays
PropertyGroup|CyclesVisibilitySettings.shadow -> shadow:    boolean    Object visibility for shadow rays
PropertyGroup|CyclesVisibilitySettings.transmission -> transmission:    boolean    Object visibility for transmission rays
PropertyGroup|CyclesWorldSettings.homogeneous_volume -> homogeneous_volume:    boolean    When using volume rendering, assume volume has the same density everywhere(not using any textures), for faster rendering
PropertyGroup|CyclesWorldSettings.sample_as_light -> sample_as_light:    boolean    Use multiple importance sampling for the environment, enabling for non-solid colors is recommended
PropertyGroup|CyclesWorldSettings.sample_map_resolution -> sample_map_resolution:    int    Importance map size is resolution x resolution; higher values potentially produce less noise, at the cost of memory and speed
PropertyGroup|CyclesWorldSettings.samples -> samples:    int    Number of light samples to render for each AA sample
PropertyGroup|NodeSetting.value -> value:    string    Python expression to be evaluated as the initial node setting
PropertyGroup|OperatorFileListElement.name -> name:    string    Name of a file or directory within a file list
PropertyGroup|OperatorMousePath.loc -> loc:    float[2]    Mouse location
PropertyGroup|OperatorMousePath.time -> time:    float    Time of mouse location
PropertyGroup|OperatorStrokeElement.is_start -> is_start:    boolean    
PropertyGroup|OperatorStrokeElement.location -> location:    float[3]    
PropertyGroup|OperatorStrokeElement.mouse -> mouse:    float[2]    
PropertyGroup|OperatorStrokeElement.pen_flip -> pen_flip:    boolean    
PropertyGroup|OperatorStrokeElement.pressure -> pressure:    float    Tablet pressure
PropertyGroup|OperatorStrokeElement.time -> time:    float    
PropertyGroup|SelectedUvElement.element_index -> element_index:    int    
PropertyGroup|SelectedUvElement.face_index -> face_index:    int    
Property|BoolProperty.array_length -> array_length:    int, (read-only)    Maximum length of the array, 0 means unlimited
Property|BoolProperty.default -> default:    boolean, (read-only)    Default value for this number
Property|BoolProperty.default_array -> default_array:    boolean[3], (read-only)    Default value for this array
Property|CollectionProperty.fixed_type -> fixed_type:    pointer, (read-only)    Fixed pointer type, empty if variable type
Property|EnumProperty.default -> default:    enum, (read-only)    Default value for this enum
Property|EnumProperty.default_flag -> default_flag:    enum, (read-only)    Default value for this enum
Property|EnumProperty.enum_items -> enum_items:    collection, (read-only)    Possible values for the property
Property|FloatProperty.array_length -> array_length:    int, (read-only)    Maximum length of the array, 0 means unlimited
Property|FloatProperty.default -> default:    float, (read-only)    Default value for this number
Property|FloatProperty.default_array -> default_array:    float[3], (read-only)    Default value for this array
Property|FloatProperty.hard_max -> hard_max:    float, (read-only)    Maximum value used by buttons
Property|FloatProperty.hard_min -> hard_min:    float, (read-only)    Minimum value used by buttons
Property|FloatProperty.precision -> precision:    int, (read-only)    Number of digits after the dot used by buttons
Property|FloatProperty.soft_max -> soft_max:    float, (read-only)    Maximum value used by buttons
Property|FloatProperty.soft_min -> soft_min:    float, (read-only)    Minimum value used by buttons
Property|FloatProperty.step -> step:    float, (read-only)    Step size used by number buttons, for floats 1/100th of the step size
Property|IntProperty.array_length -> array_length:    int, (read-only)    Maximum length of the array, 0 means unlimited
Property|IntProperty.default -> default:    int, (read-only)    Default value for this number
Property|IntProperty.default_array -> default_array:    int[3], (read-only)    Default value for this array
Property|IntProperty.hard_max -> hard_max:    int, (read-only)    Maximum value used by buttons
Property|IntProperty.hard_min -> hard_min:    int, (read-only)    Minimum value used by buttons
Property|IntProperty.soft_max -> soft_max:    int, (read-only)    Maximum value used by buttons
Property|IntProperty.soft_min -> soft_min:    int, (read-only)    Minimum value used by buttons
Property|IntProperty.step -> step:    int, (read-only)    Step size used by number buttons, for floats 1/100th of the step size
Property|PointerProperty.fixed_type -> fixed_type:    pointer, (read-only)    Fixed pointer type, empty if variable type
Property|StringProperty.default -> default:    string, (read-only)    string default value
Property|StringProperty.length_max -> length_max:    int, (read-only)    Maximum length of the string, 0 means unlimited
Region.height -> height:    int, (read-only)    Region height
Region.id -> id:    int, (read-only)    Unique ID for this region
Region.type -> type:    enum, (read-only)    Type of this region
Region.view2d -> view2d:    pointer, (read-only)    2D view of the region
Region.width -> width:    int, (read-only)    Region width
Region.x -> x:    int, (read-only)    The window relative vertical location of the region
Region.y -> y:    int, (read-only)    The window relative horizontal location of the region
RegionView3D.is_perspective -> is_perspective:    boolean    
RegionView3D.lock_rotation -> lock_rotation:    boolean    Lock view rotation in side views
RegionView3D.perspective_matrix -> perspective_matrix:    float[16], (read-only)    Current perspective matrix of the 3D region
RegionView3D.show_sync_view -> show_sync_view:    boolean    Sync view position between side views
RegionView3D.use_box_clip -> use_box_clip:    boolean    Clip objects based on what's visible in other side views
RegionView3D.view_camera_offset -> view_camera_offset:    float[2]    View shift in camera view
RegionView3D.view_camera_zoom -> view_camera_zoom:    float    Zoom factor in camera view
RegionView3D.view_distance -> view_distance:    float    Distance to the view location
RegionView3D.view_location -> view_location:    float[3]    View pivot location
RegionView3D.view_matrix -> view_matrix:    float[16]    Current view matrix of the 3D region
RegionView3D.view_perspective -> view_perspective:    enum    View Perspective
RegionView3D.view_rotation -> view_rotation:    float[4]    Rotation in quaternions (keep normalized)
RenderEngine.bl_idname -> bl_idname:    string    
RenderEngine.bl_label -> bl_label:    string    
RenderEngine.bl_use_exclude_layers -> bl_use_exclude_layers:    boolean    
RenderEngine.bl_use_postprocess -> bl_use_postprocess:    boolean    
RenderEngine.bl_use_preview -> bl_use_preview:    boolean    
RenderEngine.bl_use_save_buffers -> bl_use_save_buffers:    boolean    
RenderEngine.bl_use_shading_nodes -> bl_use_shading_nodes:    boolean    
RenderEngine.camera_override -> camera_override:    pointer, (read-only)    
RenderEngine.is_animation -> is_animation:    boolean    
RenderEngine.is_preview -> is_preview:    boolean    
RenderEngine.render -> render:    pointer, (read-only)    
RenderEngine.resolution_x -> resolution_x:    int, (read-only)    
RenderEngine.resolution_y -> resolution_y:    int, (read-only)    
RenderEngine.tile_x -> tile_x:    int    
RenderEngine.tile_y -> tile_y:    int    
RenderEngine.use_highlight_tiles -> use_highlight_tiles:    boolean    
RenderLayer.exclude_ambient_occlusion -> exclude_ambient_occlusion:    boolean, (read-only)    Exclude AO pass from combined
RenderLayer.exclude_emit -> exclude_emit:    boolean, (read-only)    Exclude emission pass from combined
RenderLayer.exclude_environment -> exclude_environment:    boolean, (read-only)    Exclude environment pass from combined
RenderLayer.exclude_indirect -> exclude_indirect:    boolean, (read-only)    Exclude indirect pass from combined
RenderLayer.exclude_reflection -> exclude_reflection:    boolean, (read-only)    Exclude raytraced reflection pass from combined
RenderLayer.exclude_refraction -> exclude_refraction:    boolean, (read-only)    Exclude raytraced refraction pass from combined
RenderLayer.exclude_shadow -> exclude_shadow:    boolean, (read-only)    Exclude shadow pass from combined
RenderLayer.exclude_specular -> exclude_specular:    boolean, (read-only)    Exclude specular pass from combined
RenderLayer.invert_zmask -> invert_zmask:    boolean, (read-only)    For Zmask, only render what is behind solid z values instead of in front
RenderLayer.layers -> layers:    boolean[20], (read-only)    Scene layers included in this render layer
RenderLayer.layers_exclude -> layers_exclude:    boolean[20], (read-only)    Exclude scene layers from having any influence
RenderLayer.layers_zmask -> layers_zmask:    boolean[20], (read-only)    Zmask scene layers for solid faces
RenderLayer.light_override -> light_override:    pointer, (read-only)    Group to override all other lights in this render layer
RenderLayer.material_override -> material_override:    pointer, (read-only)    Material to override all other materials in this render layer
RenderLayer.name -> name:    string, (read-only)    Render layer name
RenderLayer.passes -> passes:    collection, (read-only)    
RenderLayer.rect -> rect:    float    
RenderLayer.use -> use:    boolean, (read-only)    Disable or enable the render layer
RenderLayer.use_all_z -> use_all_z:    boolean, (read-only)    Fill in Z values for solid faces in invisible layers, for masking
RenderLayer.use_freestyle -> use_freestyle:    boolean, (read-only)    Render stylized strokes in this Layer
RenderLayer.use_halo -> use_halo:    boolean, (read-only)    Render Halos in this Layer (on top of Solid)
RenderLayer.use_pass_ambient_occlusion -> use_pass_ambient_occlusion:    boolean, (read-only)    Deliver AO pass
RenderLayer.use_pass_color -> use_pass_color:    boolean, (read-only)    Deliver shade-less color pass
RenderLayer.use_pass_combined -> use_pass_combined:    boolean, (read-only)    Deliver full combined RGBA buffer
RenderLayer.use_pass_diffuse -> use_pass_diffuse:    boolean, (read-only)    Deliver diffuse pass
RenderLayer.use_pass_diffuse_color -> use_pass_diffuse_color:    boolean, (read-only)    Deliver diffuse color pass
RenderLayer.use_pass_diffuse_direct -> use_pass_diffuse_direct:    boolean, (read-only)    Deliver diffuse direct pass
RenderLayer.use_pass_diffuse_indirect -> use_pass_diffuse_indirect:    boolean, (read-only)    Deliver diffuse indirect pass
RenderLayer.use_pass_emit -> use_pass_emit:    boolean, (read-only)    Deliver emission pass
RenderLayer.use_pass_environment -> use_pass_environment:    boolean, (read-only)    Deliver environment lighting pass
RenderLayer.use_pass_glossy_color -> use_pass_glossy_color:    boolean, (read-only)    Deliver glossy color pass
RenderLayer.use_pass_glossy_direct -> use_pass_glossy_direct:    boolean, (read-only)    Deliver glossy direct pass
RenderLayer.use_pass_glossy_indirect -> use_pass_glossy_indirect:    boolean, (read-only)    Deliver glossy indirect pass
RenderLayer.use_pass_indirect -> use_pass_indirect:    boolean, (read-only)    Deliver indirect lighting pass
RenderLayer.use_pass_material_index -> use_pass_material_index:    boolean, (read-only)    Deliver material index pass
RenderLayer.use_pass_mist -> use_pass_mist:    boolean, (read-only)    Deliver mist factor pass (0.0-1.0)
RenderLayer.use_pass_normal -> use_pass_normal:    boolean, (read-only)    Deliver normal pass
RenderLayer.use_pass_object_index -> use_pass_object_index:    boolean, (read-only)    Deliver object index pass
RenderLayer.use_pass_reflection -> use_pass_reflection:    boolean, (read-only)    Deliver raytraced reflection pass
RenderLayer.use_pass_refraction -> use_pass_refraction:    boolean, (read-only)    Deliver raytraced refraction pass
RenderLayer.use_pass_shadow -> use_pass_shadow:    boolean, (read-only)    Deliver shadow pass
RenderLayer.use_pass_specular -> use_pass_specular:    boolean, (read-only)    Deliver specular pass
RenderLayer.use_pass_subsurface_color -> use_pass_subsurface_color:    boolean, (read-only)    Deliver subsurface color pass
RenderLayer.use_pass_subsurface_direct -> use_pass_subsurface_direct:    boolean, (read-only)    Deliver subsurface direct pass
RenderLayer.use_pass_subsurface_indirect -> use_pass_subsurface_indirect:    boolean, (read-only)    Deliver subsurface indirect pass
RenderLayer.use_pass_transmission_color -> use_pass_transmission_color:    boolean, (read-only)    Deliver transmission color pass
RenderLayer.use_pass_transmission_direct -> use_pass_transmission_direct:    boolean, (read-only)    Deliver transmission direct pass
RenderLayer.use_pass_transmission_indirect -> use_pass_transmission_indirect:    boolean, (read-only)    Deliver transmission indirect pass
RenderLayer.use_pass_uv -> use_pass_uv:    boolean, (read-only)    Deliver texture UV pass
RenderLayer.use_pass_vector -> use_pass_vector:    boolean, (read-only)    Deliver speed vector pass
RenderLayer.use_pass_z -> use_pass_z:    boolean, (read-only)    Deliver Z values pass
RenderLayer.use_sky -> use_sky:    boolean, (read-only)    Render Sky in this Layer
RenderLayer.use_solid -> use_solid:    boolean, (read-only)    Render Solid faces in this Layer
RenderLayer.use_strand -> use_strand:    boolean, (read-only)    Render Strands in this Layer
RenderLayer.use_zmask -> use_zmask:    boolean, (read-only)    Only render what's in front of the solid z values
RenderLayer.use_ztransp -> use_ztransp:    boolean, (read-only)    Render Z-Transparent faces in this Layer (on top of Solid and Halos)
RenderLayers.active -> active:    pointer    Active Render Layer
RenderLayers.active_index -> active_index:    int    Active index in render layer array
RenderPass.channel_id -> channel_id:    string, (read-only)    
RenderPass.channels -> channels:    int, (read-only)    
RenderPass.name -> name:    string, (read-only)    
RenderPass.rect -> rect:    float    
RenderPass.type -> type:    enum, (read-only)    
RenderResult.layers -> layers:    collection, (read-only)    
RenderResult.resolution_x -> resolution_x:    int, (read-only)    
RenderResult.resolution_y -> resolution_y:    int, (read-only)    
RenderSettings.alpha_mode -> alpha_mode:    enum    Representation of alpha information in the RGBA pixels
RenderSettings.antialiasing_samples -> antialiasing_samples:    enum    Amount of anti-aliasing samples per pixel
RenderSettings.bake_aa_mode -> bake_aa_mode:    enum    
RenderSettings.bake_bias -> bake_bias:    float    Bias towards faces further away from the object (in blender units)
RenderSettings.bake_distance -> bake_distance:    float    Maximum distance from active object to other object (in blender units)
RenderSettings.bake_margin -> bake_margin:    int    Extends the baked result as a post process filter
RenderSettings.bake_normal_space -> bake_normal_space:    enum    Choose normal space for baking
RenderSettings.bake_quad_split -> bake_quad_split:    enum    Choose the method used to split a quad into 2 triangles for baking
RenderSettings.bake_samples -> bake_samples:    int    Number of samples used for ambient occlusion baking from multires
RenderSettings.bake_type -> bake_type:    enum    Choose shading information to bake into the image
RenderSettings.bake_user_scale -> bake_user_scale:    float    Instead of automatically normalizing to 0..1, apply a user scale to the derivative map
RenderSettings.border_max_x -> border_max_x:    float    Maximum X value for the render border
RenderSettings.border_max_y -> border_max_y:    float    Maximum Y value for the render border
RenderSettings.border_min_x -> border_min_x:    float    Minimum X value to for the render border
RenderSettings.border_min_y -> border_min_y:    float    Minimum Y value for the render border
RenderSettings.display_mode -> display_mode:    enum    Select where rendered images will be displayed
RenderSettings.dither_intensity -> dither_intensity:    float    Amount of dithering noise added to the rendered image to break up banding
RenderSettings.engine -> engine:    enum    Engine to use for rendering
RenderSettings.ffmpeg -> ffmpeg:    pointer, (read-only)    FFmpeg related settings for the scene
RenderSettings.field_order -> field_order:    enum    Order of video fields (select which lines get rendered first, to create smooth motion for TV output)
RenderSettings.file_extension -> file_extension:    string, (read-only)    The file extension used for saving renders
RenderSettings.filepath -> filepath:    string    Directory/name to save animations, # characters defines the position and length of frame numbers
RenderSettings.filter_size -> filter_size:    float    Width over which the reconstruction filter combines samples
RenderSettings.fps -> fps:    int    Framerate, expressed in frames per second
RenderSettings.fps_base -> fps_base:    float    Framerate base
RenderSettings.frame_map_new -> frame_map_new:    int    How many frames the Map Old will last
RenderSettings.frame_map_old -> frame_map_old:    int    Old mapping value in frames
RenderSettings.has_multiple_engines -> has_multiple_engines:    boolean, (read-only)    More than one rendering engine is available
RenderSettings.image_settings -> image_settings:    pointer, (read-only)    
RenderSettings.is_movie_format -> is_movie_format:    boolean, (read-only)    When true the format is a movie
RenderSettings.layers -> layers:    collection, (read-only)    
RenderSettings.line_thickness -> line_thickness:    float    Line thickness in pixels
RenderSettings.line_thickness_mode -> line_thickness_mode:    enum    Line thickness mode for Freestyle line drawing
RenderSettings.motion_blur_samples -> motion_blur_samples:    int    Number of scene samples to take with motion blur
RenderSettings.motion_blur_shutter -> motion_blur_shutter:    float    Time taken in frames between shutter open and close
RenderSettings.octree_resolution -> octree_resolution:    enum    Resolution of raytrace accelerator, use higher resolutions for larger scenes
RenderSettings.pixel_aspect_x -> pixel_aspect_x:    float    Horizontal aspect ratio - for anamorphic or non-square pixel output
RenderSettings.pixel_aspect_y -> pixel_aspect_y:    float    Vertical aspect ratio - for anamorphic or non-square pixel output
RenderSettings.pixel_filter_type -> pixel_filter_type:    enum    Reconstruction filter used for combining anti-aliasing samples
RenderSettings.raytrace_method -> raytrace_method:    enum    Type of raytrace accelerator structure
RenderSettings.resolution_percentage -> resolution_percentage:    int    Percentage scale for render resolution
RenderSettings.resolution_x -> resolution_x:    int    Number of horizontal pixels in the rendered image
RenderSettings.resolution_y -> resolution_y:    int    Number of vertical pixels in the rendered image
RenderSettings.sequencer_gl_preview -> sequencer_gl_preview:    enum    Method to draw in the sequencer view
RenderSettings.sequencer_gl_render -> sequencer_gl_render:    enum    Method to draw in the sequencer view
RenderSettings.simplify_ao_sss -> simplify_ao_sss:    float    Global approximate AO and SSS quality factor
RenderSettings.simplify_child_particles -> simplify_child_particles:    float    Global child particles percentage
RenderSettings.simplify_shadow_samples -> simplify_shadow_samples:    int    Global maximum shadow samples
RenderSettings.simplify_subdivision -> simplify_subdivision:    int    Global maximum subdivision level
RenderSettings.stamp_background -> stamp_background:    float[4]    Color to use behind stamp text
RenderSettings.stamp_font_size -> stamp_font_size:    int    Size of the font used when rendering stamp text
RenderSettings.stamp_foreground -> stamp_foreground:    float[4]    Color to use for stamp text
RenderSettings.stamp_note_text -> stamp_note_text:    string    Custom text to appear in the stamp note
RenderSettings.threads -> threads:    int    Number of CPU threads to use simultaneously while rendering (for multi-core/CPU systems)
RenderSettings.threads_mode -> threads_mode:    enum    Determine the amount of render threads used
RenderSettings.tile_x -> tile_x:    int    Horizontal tile size to use while rendering
RenderSettings.tile_y -> tile_y:    int    Vertical tile size to use while rendering
RenderSettings.use_antialiasing -> use_antialiasing:    boolean    Render and combine multiple samples per pixel to prevent jagged edges
RenderSettings.use_bake_antialiasing -> use_bake_antialiasing:    boolean    Enables Anti-aliasing
RenderSettings.use_bake_clear -> use_bake_clear:    boolean    Clear Images before baking
RenderSettings.use_bake_lores_mesh -> use_bake_lores_mesh:    boolean    Calculate heights against unsubdivided low resolution mesh
RenderSettings.use_bake_multires -> use_bake_multires:    boolean    Bake directly from multires object
RenderSettings.use_bake_normalize -> use_bake_normalize:    boolean    With displacement normalize to the distance, with ambient occlusion normalize without using material settings
RenderSettings.use_bake_selected_to_active -> use_bake_selected_to_active:    boolean    Bake shading on the surface of selected objects to the active object
RenderSettings.use_bake_to_vertex_color -> use_bake_to_vertex_color:    boolean    Bake to vertex colors instead of to a UV-mapped image
RenderSettings.use_bake_user_scale -> use_bake_user_scale:    boolean    Use a user scale for the derivative map
RenderSettings.use_border -> use_border:    boolean    Render a user-defined border region, within the frame size (note that this disables save_buffers and full_sample)
RenderSettings.use_compositing -> use_compositing:    boolean    Process the render result through the compositing pipeline, if compositing nodes are enabled
RenderSettings.use_crop_to_border -> use_crop_to_border:    boolean    Crop the rendered frame to the defined border size
RenderSettings.use_envmaps -> use_envmaps:    boolean    Calculate environment maps while rendering
RenderSettings.use_fields -> use_fields:    boolean    Render image to two fields per frame, for interlaced TV output
RenderSettings.use_fields_still -> use_fields_still:    boolean    Disable the time difference between fields
RenderSettings.use_file_extension -> use_file_extension:    boolean    Add the file format extensions to the rendered file name (eg: filename + .jpg)
RenderSettings.use_free_image_textures -> use_free_image_textures:    boolean    Free all image textures from memory after render, to save memory before compositing
RenderSettings.use_free_unused_nodes -> use_free_unused_nodes:    boolean    Free Nodes that are not used while compositing, to save memory
RenderSettings.use_freestyle -> use_freestyle:    boolean    Draw stylized strokes using Freestyle
RenderSettings.use_full_sample -> use_full_sample:    boolean    Save for every anti-aliasing sample the entire RenderLayer results (this solves anti-aliasing issues with compositing)
RenderSettings.use_game_engine -> use_game_engine:    boolean, (read-only)    Current rendering engine is a game engine
RenderSettings.use_instances -> use_instances:    boolean    Instance support leads to effective memory reduction when using duplicates
RenderSettings.use_local_coords -> use_local_coords:    boolean    Vertex coordinates are stored locally on each primitive (increases memory usage, but may have impact on speed)
RenderSettings.use_motion_blur -> use_motion_blur:    boolean    Use multi-sampled 3D scene motion blur
RenderSettings.use_overwrite -> use_overwrite:    boolean    Overwrite existing files while rendering
RenderSettings.use_persistent_data -> use_persistent_data:    boolean    Keep render data around for faster re-renders
RenderSettings.use_placeholder -> use_placeholder:    boolean    Create empty placeholder files while rendering frames (similar to Unix 'touch')
RenderSettings.use_raytrace -> use_raytrace:    boolean    Pre-calculate the raytrace accelerator and render raytracing effects
RenderSettings.use_save_buffers -> use_save_buffers:    boolean    Save tiles for all RenderLayers and SceneNodes to files in the temp directory (saves memory, required for Full Sample)
RenderSettings.use_sequencer -> use_sequencer:    boolean    Process the render (and composited) result through the video sequence editor pipeline, if sequencer strips exist
RenderSettings.use_sequencer_gl_preview -> use_sequencer_gl_preview:    boolean    
RenderSettings.use_sequencer_gl_textured_solid -> use_sequencer_gl_textured_solid:    boolean    Draw face-assigned textures in solid draw method
RenderSettings.use_shading_nodes -> use_shading_nodes:    boolean, (read-only)    Active render engine uses new shading nodes system
RenderSettings.use_shadows -> use_shadows:    boolean    Calculate shadows while rendering
RenderSettings.use_simplify -> use_simplify:    boolean    Enable simplification of scene for quicker preview renders
RenderSettings.use_simplify_triangulate -> use_simplify_triangulate:    boolean    Disable non-planar quads being triangulated
RenderSettings.use_single_layer -> use_single_layer:    boolean    Only render the active layer
RenderSettings.use_sss -> use_sss:    boolean    Calculate sub-surface scattering in materials rendering
RenderSettings.use_stamp -> use_stamp:    boolean    Render the stamp info text in the rendered image
RenderSettings.use_stamp_camera -> use_stamp_camera:    boolean    Include the name of the active camera in image metadata
RenderSettings.use_stamp_date -> use_stamp_date:    boolean    Include the current date in image metadata
RenderSettings.use_stamp_filename -> use_stamp_filename:    boolean    Include the .blend filename in image metadata
RenderSettings.use_stamp_frame -> use_stamp_frame:    boolean    Include the frame number in image metadata
RenderSettings.use_stamp_lens -> use_stamp_lens:    boolean    Include the active camera's lens in image metadata
RenderSettings.use_stamp_marker -> use_stamp_marker:    boolean    Include the name of the last marker in image metadata
RenderSettings.use_stamp_note -> use_stamp_note:    boolean    Include a custom note in image metadata
RenderSettings.use_stamp_render_time -> use_stamp_render_time:    boolean    Include the render time in image metadata
RenderSettings.use_stamp_scene -> use_stamp_scene:    boolean    Include the name of the active scene in image metadata
RenderSettings.use_stamp_sequencer_strip -> use_stamp_sequencer_strip:    boolean    Include the name of the foreground sequence strip in image metadata
RenderSettings.use_stamp_time -> use_stamp_time:    boolean    Include the rendered frame timecode as HH:MM:SS.FF in image metadata
RenderSettings.use_textures -> use_textures:    boolean    Use textures to affect material properties
RigidBodyConstraint.breaking_threshold -> breaking_threshold:    float    Impulse threshold that must be reached for the constraint to break
RigidBodyConstraint.disable_collisions -> disable_collisions:    boolean    Disable collisions between constrained rigid bodies
RigidBodyConstraint.enabled -> enabled:    boolean    Enable this constraint
RigidBodyConstraint.limit_ang_x_lower -> limit_ang_x_lower:    float    Lower limit of X axis rotation
RigidBodyConstraint.limit_ang_x_upper -> limit_ang_x_upper:    float    Upper limit of X axis rotation
RigidBodyConstraint.limit_ang_y_lower -> limit_ang_y_lower:    float    Lower limit of Y axis rotation
RigidBodyConstraint.limit_ang_y_upper -> limit_ang_y_upper:    float    Upper limit of Y axis rotation
RigidBodyConstraint.limit_ang_z_lower -> limit_ang_z_lower:    float    Lower limit of Z axis rotation
RigidBodyConstraint.limit_ang_z_upper -> limit_ang_z_upper:    float    Upper limit of Z axis rotation
RigidBodyConstraint.limit_lin_x_lower -> limit_lin_x_lower:    float    Lower limit of X axis translation
RigidBodyConstraint.limit_lin_x_upper -> limit_lin_x_upper:    float    Upper limit of X axis translation
RigidBodyConstraint.limit_lin_y_lower -> limit_lin_y_lower:    float    Lower limit of Y axis translation
RigidBodyConstraint.limit_lin_y_upper -> limit_lin_y_upper:    float    Upper limit of Y axis translation
RigidBodyConstraint.limit_lin_z_lower -> limit_lin_z_lower:    float    Lower limit of Z axis translation
RigidBodyConstraint.limit_lin_z_upper -> limit_lin_z_upper:    float    Upper limit of Z axis translation
RigidBodyConstraint.motor_ang_max_impulse -> motor_ang_max_impulse:    float    Maximum angular motor impulse
RigidBodyConstraint.motor_ang_target_velocity -> motor_ang_target_velocity:    float    Target angular motor velocity
RigidBodyConstraint.motor_lin_max_impulse -> motor_lin_max_impulse:    float    Maximum linear motor impulse
RigidBodyConstraint.motor_lin_target_velocity -> motor_lin_target_velocity:    float    Target linear motor velocity
RigidBodyConstraint.object1 -> object1:    pointer    First Rigid Body Object to be constrained
RigidBodyConstraint.object2 -> object2:    pointer    Second Rigid Body Object to be constrained
RigidBodyConstraint.solver_iterations -> solver_iterations:    int    Number of constraint solver iterations made per simulation step (higher values are more accurate but slower)
RigidBodyConstraint.spring_damping_x -> spring_damping_x:    float    Damping on the X axis
RigidBodyConstraint.spring_damping_y -> spring_damping_y:    float    Damping on the Y axis
RigidBodyConstraint.spring_damping_z -> spring_damping_z:    float    Damping on the Z axis
RigidBodyConstraint.spring_stiffness_x -> spring_stiffness_x:    float    Stiffness on the X axis
RigidBodyConstraint.spring_stiffness_y -> spring_stiffness_y:    float    Stiffness on the Y axis
RigidBodyConstraint.spring_stiffness_z -> spring_stiffness_z:    float    Stiffness on the Z axis
RigidBodyConstraint.type -> type:    enum    Type of Rigid Body Constraint
RigidBodyConstraint.use_breaking -> use_breaking:    boolean    Constraint can be broken if it receives an impulse above the threshold
RigidBodyConstraint.use_limit_ang_x -> use_limit_ang_x:    boolean    Limit rotation around X axis
RigidBodyConstraint.use_limit_ang_y -> use_limit_ang_y:    boolean    Limit rotation around Y axis
RigidBodyConstraint.use_limit_ang_z -> use_limit_ang_z:    boolean    Limit rotation around Z axis
RigidBodyConstraint.use_limit_lin_x -> use_limit_lin_x:    boolean    Limit translation on X axis
RigidBodyConstraint.use_limit_lin_y -> use_limit_lin_y:    boolean    Limit translation on Y axis
RigidBodyConstraint.use_limit_lin_z -> use_limit_lin_z:    boolean    Limit translation on Z axis
RigidBodyConstraint.use_motor_ang -> use_motor_ang:    boolean    Enable angular motor
RigidBodyConstraint.use_motor_lin -> use_motor_lin:    boolean    Enable linear motor
RigidBodyConstraint.use_override_solver_iterations -> use_override_solver_iterations:    boolean    Override the number of solver iterations for this constraint
RigidBodyConstraint.use_spring_x -> use_spring_x:    boolean    Enable spring on X axis
RigidBodyConstraint.use_spring_y -> use_spring_y:    boolean    Enable spring on Y axis
RigidBodyConstraint.use_spring_z -> use_spring_z:    boolean    Enable spring on Z axis
RigidBodyObject.angular_damping -> angular_damping:    float    Amount of angular velocity that is lost over time
RigidBodyObject.collision_groups -> collision_groups:    boolean[20]    Collision Groups Rigid Body belongs to
RigidBodyObject.collision_margin -> collision_margin:    float    Threshold of distance near surface where collisions are still considered (best results when non-zero)
RigidBodyObject.collision_shape -> collision_shape:    enum    Collision Shape of object in Rigid Body Simulations
RigidBodyObject.deactivate_angular_velocity -> deactivate_angular_velocity:    float    Angular Velocity below which simulation stops simulating object
RigidBodyObject.deactivate_linear_velocity -> deactivate_linear_velocity:    float    Linear Velocity below which simulation stops simulating object
RigidBodyObject.enabled -> enabled:    boolean    Rigid Body actively participates to the simulation
RigidBodyObject.friction -> friction:    float    Resistance of object to movement
RigidBodyObject.kinematic -> kinematic:    boolean    Allow rigid body to be controlled by the animation system
RigidBodyObject.linear_damping -> linear_damping:    float    Amount of linear velocity that is lost over time
RigidBodyObject.mass -> mass:    float    How much the object 'weighs' irrespective of gravity
RigidBodyObject.mesh_source -> mesh_source:    enum    Source of the mesh used to create collision shape
RigidBodyObject.restitution -> restitution:    float    Tendency of object to bounce after colliding with another (0 = stays still, 1 = perfectly elastic)
RigidBodyObject.type -> type:    enum    Role of object in Rigid Body Simulations
RigidBodyObject.use_deactivation -> use_deactivation:    boolean    Enable deactivation of resting rigid bodies (increases performance and stability but can cause glitches)
RigidBodyObject.use_deform -> use_deform:    boolean    Rigid body deforms during simulation
RigidBodyObject.use_margin -> use_margin:    boolean    Use custom collision margin (some shapes will have a visible gap around them)
RigidBodyObject.use_start_deactivated -> use_start_deactivated:    boolean    Deactivate rigid body at the start of the simulation
RigidBodyWorld.constraints -> constraints:    pointer    Group containing rigid body constraint objects
RigidBodyWorld.effector_weights -> effector_weights:    pointer, (read-only)    
RigidBodyWorld.enabled -> enabled:    boolean    Simulation will be evaluated
RigidBodyWorld.group -> group:    pointer    Group containing objects participating in this simulation
RigidBodyWorld.point_cache -> point_cache:    pointer, (read-only)    
RigidBodyWorld.solver_iterations -> solver_iterations:    int    Number of constraint solver iterations made per simulation step (higher values are more accurate but slower)
RigidBodyWorld.steps_per_second -> steps_per_second:    int    Number of simulation steps taken per second (higher values are more accurate but slower)
RigidBodyWorld.time_scale -> time_scale:    float    Change the speed of the simulation
RigidBodyWorld.use_split_impulse -> use_split_impulse:    boolean    Reduce extra velocity that can build up when objects collide (lowers simulation stability a little so use only when necessary)
SPHFluidSettings.buoyancy -> buoyancy:    float    Artificial buoyancy force in negative gravity direction based on pressure differences inside the fluid
SPHFluidSettings.factor_radius -> factor_radius:    boolean    Interaction radius is a factor of 4 * particle size
SPHFluidSettings.factor_repulsion -> factor_repulsion:    boolean    Repulsion is a factor of stiffness
SPHFluidSettings.factor_rest_length -> factor_rest_length:    boolean    Spring rest length is a factor of 2 * particle size
SPHFluidSettings.factor_stiff_viscosity -> factor_stiff_viscosity:    boolean    Stiff viscosity is a factor of normal viscosity
SPHFluidSettings.fluid_radius -> fluid_radius:    float    Fluid interaction radius
SPHFluidSettings.linear_viscosity -> linear_viscosity:    float    Linear viscosity
SPHFluidSettings.plasticity -> plasticity:    float    How much the spring rest length can change after the elastic limit is crossed
SPHFluidSettings.repulsion -> repulsion:    float    How strongly the fluid tries to keep from clustering (factor of stiffness)
SPHFluidSettings.rest_density -> rest_density:    float    Fluid rest density
SPHFluidSettings.rest_length -> rest_length:    float    Spring rest length (factor of particle radius)
SPHFluidSettings.solver -> solver:    enum    The code used to calculate internal forces on particles
SPHFluidSettings.spring_force -> spring_force:    float    Spring force
SPHFluidSettings.spring_frames -> spring_frames:    int    Create springs for this number of frames since particles birth (0 is always)
SPHFluidSettings.stiff_viscosity -> stiff_viscosity:    float    Creates viscosity for expanding fluid
SPHFluidSettings.stiffness -> stiffness:    float    How incompressible the fluid is (speed of sound)
SPHFluidSettings.use_factor_density -> use_factor_density:    boolean    Density is calculated as a factor of default density (depends on particle size)
SPHFluidSettings.use_initial_rest_length -> use_initial_rest_length:    boolean    Use the initial length as spring rest length instead of 2 * particle size
SPHFluidSettings.use_viscoelastic_springs -> use_viscoelastic_springs:    boolean    Use viscoelastic springs instead of Hooke's springs
SPHFluidSettings.yield_ratio -> yield_ratio:    float    How much the spring has to be stretched/compressed in order to change it's rest length
SceneBases.active -> active:    pointer    Active object base in the scene
SceneGameData.activity_culling_box_radius -> activity_culling_box_radius:    float    Radius of the activity bubble, in Manhattan length (objects outside the box are activity-culled)
SceneGameData.deactivation_angular_threshold -> deactivation_angular_threshold:    float    Angular velocity that an object must be below before the deactivation timer can start
SceneGameData.deactivation_linear_threshold -> deactivation_linear_threshold:    float    Linear velocity that an object must be below before the deactivation timer can start
SceneGameData.deactivation_time -> deactivation_time:    float    Amount of time (in seconds) after which objects with a velocity less than the given threshold will deactivate (0.0 means no deactivation)
SceneGameData.depth -> depth:    int    Display bit depth of full screen display
SceneGameData.dome_angle -> dome_angle:    int    Field of View of the Dome - it only works in mode Fisheye and Truncated
SceneGameData.dome_buffer_resolution -> dome_buffer_resolution:    float    Buffer Resolution - decrease it to increase speed
SceneGameData.dome_mode -> dome_mode:    enum    Dome physical configurations
SceneGameData.dome_tessellation -> dome_tessellation:    int    Tessellation level - check the generated mesh in wireframe mode
SceneGameData.dome_text -> dome_text:    pointer    Custom Warp Mesh data file
SceneGameData.dome_tilt -> dome_tilt:    int    Camera rotation in horizontal axis
SceneGameData.exit_key -> exit_key:    enum    The key that exits the Game Engine
SceneGameData.fps -> fps:    int    Nominal number of game frames per second (physics fixed timestep = 1/fps, independently of actual frame rate)
SceneGameData.frame_color -> frame_color:    float[3]    Set color of the bars
SceneGameData.frame_type -> frame_type:    enum    Select the type of Framing you want
SceneGameData.frequency -> frequency:    int    Display clock frequency of fullscreen display
SceneGameData.level_height -> level_height:    float    Max difference in heights of obstacles to enable their interaction
SceneGameData.logic_step_max -> logic_step_max:    int    Maximum number of logic frame per game frame if graphics slows down the game, higher value allows better synchronization with physics
SceneGameData.material_mode -> material_mode:    enum    Material mode to use for rendering
SceneGameData.obstacle_simulation -> obstacle_simulation:    enum    Simulation used for obstacle avoidance in the game engine
SceneGameData.occlusion_culling_resolution -> occlusion_culling_resolution:    int    Size of the occlusion buffer, use higher value for better precision (slower)
SceneGameData.physics_engine -> physics_engine:    enum    Physics engine used for physics simulation in the game engine
SceneGameData.physics_gravity -> physics_gravity:    float    Gravitational constant used for physics simulation in the game engine
SceneGameData.physics_step_max -> physics_step_max:    int    Maximum number of physics step per game frame if graphics slows down the game, higher value allows physics to keep up with realtime
SceneGameData.physics_step_sub -> physics_step_sub:    int    Number of simulation substep per physic timestep, higher value give better physics precision
SceneGameData.raster_storage -> raster_storage:    enum    Set the storage mode used by the rasterizer
SceneGameData.recast_data -> recast_data:    pointer, (read-only)    
SceneGameData.resolution_x -> resolution_x:    int    Number of horizontal pixels in the screen
SceneGameData.resolution_y -> resolution_y:    int    Number of vertical pixels in the screen
SceneGameData.samples -> samples:    enum    The number of AA Samples to use for MSAA
SceneGameData.show_debug_properties -> show_debug_properties:    boolean    Show properties marked for debugging while the game runs
SceneGameData.show_framerate_profile -> show_framerate_profile:    boolean    Show framerate and profiling information while the game runs
SceneGameData.show_fullscreen -> show_fullscreen:    boolean    Start player in a new fullscreen display
SceneGameData.show_mouse -> show_mouse:    boolean    Start player with a visible mouse cursor
SceneGameData.show_obstacle_simulation -> show_obstacle_simulation:    boolean    Enable debug visualization for obstacle simulation
SceneGameData.show_physics_visualization -> show_physics_visualization:    boolean    Show a visualization of physics bounds and interactions
SceneGameData.stereo -> stereo:    enum    
SceneGameData.stereo_eye_separation -> stereo_eye_separation:    float    Set the distance between the eyes - the camera focal distance/30 should be fine
SceneGameData.stereo_mode -> stereo_mode:    enum    Stereographic techniques
SceneGameData.use_activity_culling -> use_activity_culling:    boolean    Activity culling is enabled
SceneGameData.use_animation_record -> use_animation_record:    boolean    Record animation to F-Curves
SceneGameData.use_auto_start -> use_auto_start:    boolean    Automatically start game at load time
SceneGameData.use_deprecation_warnings -> use_deprecation_warnings:    boolean    Print warnings when using deprecated features in the python API
SceneGameData.use_desktop -> use_desktop:    boolean    Use the current desktop resolution in fullscreen mode
SceneGameData.use_display_lists -> use_display_lists:    boolean    Use display lists to speed up rendering by keeping geometry on the GPU
SceneGameData.use_frame_rate -> use_frame_rate:    boolean    Respect the frame rate from the Physics panel in the world properties rather than rendering as many frames as possible
SceneGameData.use_glsl_color_management -> use_glsl_color_management:    boolean    Use color management for GLSL rendering
SceneGameData.use_glsl_extra_textures -> use_glsl_extra_textures:    boolean    Use extra textures like normal or specular maps for GLSL rendering
SceneGameData.use_glsl_lights -> use_glsl_lights:    boolean    Use lights for GLSL rendering
SceneGameData.use_glsl_nodes -> use_glsl_nodes:    boolean    Use nodes for GLSL rendering
SceneGameData.use_glsl_ramps -> use_glsl_ramps:    boolean    Use ramps for GLSL rendering
SceneGameData.use_glsl_shaders -> use_glsl_shaders:    boolean    Use shaders for GLSL rendering
SceneGameData.use_glsl_shadows -> use_glsl_shadows:    boolean    Use shadows for GLSL rendering
SceneGameData.use_material_caching -> use_material_caching:    boolean    Cache materials in the converter (this is faster, but can cause problems with older Singletexture and Multitexture games)
SceneGameData.use_occlusion_culling -> use_occlusion_culling:    boolean    Use optimized Bullet DBVT tree for view frustum and occlusion culling (more efficient, but it can waste unnecessary CPU if the scene doesn't have occluder
objects)
SceneGameData.use_restrict_animation_updates -> use_restrict_animation_updates:    boolean    Restrict the number of animation updates to the animation FPS (this is better for performance, but can cause issues with smooth playback)
SceneGameData.vsync -> vsync:    enum    Change vsync settings
SceneGameRecastData.agent_height -> agent_height:    float    Minimum height where the agent can still walk
SceneGameRecastData.agent_radius -> agent_radius:    float    Radius of the agent
SceneGameRecastData.cell_height -> cell_height:    float    Rasterized cell height
SceneGameRecastData.cell_size -> cell_size:    float    Rasterized cell size
SceneGameRecastData.climb_max -> climb_max:    float    Maximum height between grid cells the agent can climb
SceneGameRecastData.edge_max_error -> edge_max_error:    float    Maximum distance error from contour to cells
SceneGameRecastData.edge_max_len -> edge_max_len:    float    Maximum contour edge length
SceneGameRecastData.region_merge_size -> region_merge_size:    float    Minimum regions size (smaller regions will be merged)
SceneGameRecastData.region_min_size -> region_min_size:    float    Minimum regions size (smaller regions will be deleted)
SceneGameRecastData.sample_dist -> sample_dist:    float    Detail mesh sample spacing
SceneGameRecastData.sample_max_error -> sample_max_error:    float    Detail mesh simplification max sample error
SceneGameRecastData.slope_max -> slope_max:    float    Maximum walkable slope angle
SceneGameRecastData.verts_per_poly -> verts_per_poly:    int    Max number of vertices per polygon
SceneObjects.active -> active:    pointer    Active object for this scene
SceneRenderLayer.exclude_ambient_occlusion -> exclude_ambient_occlusion:    boolean    Exclude AO pass from combined
SceneRenderLayer.exclude_emit -> exclude_emit:    boolean    Exclude emission pass from combined
SceneRenderLayer.exclude_environment -> exclude_environment:    boolean    Exclude environment pass from combined
SceneRenderLayer.exclude_indirect -> exclude_indirect:    boolean    Exclude indirect pass from combined
SceneRenderLayer.exclude_reflection -> exclude_reflection:    boolean    Exclude raytraced reflection pass from combined
SceneRenderLayer.exclude_refraction -> exclude_refraction:    boolean    Exclude raytraced refraction pass from combined
SceneRenderLayer.exclude_shadow -> exclude_shadow:    boolean    Exclude shadow pass from combined
SceneRenderLayer.exclude_specular -> exclude_specular:    boolean    Exclude specular pass from combined
SceneRenderLayer.freestyle_settings -> freestyle_settings:    pointer, (read-only)    
SceneRenderLayer.invert_zmask -> invert_zmask:    boolean    For Zmask, only render what is behind solid z values instead of in front
SceneRenderLayer.layers -> layers:    boolean[20]    Scene layers included in this render layer
SceneRenderLayer.layers_exclude -> layers_exclude:    boolean[20]    Exclude scene layers from having any influence
SceneRenderLayer.layers_zmask -> layers_zmask:    boolean[20]    Zmask scene layers for solid faces
SceneRenderLayer.light_override -> light_override:    pointer    Group to override all other lights in this render layer
SceneRenderLayer.material_override -> material_override:    pointer    Material to override all other materials in this render layer
SceneRenderLayer.name -> name:    string    Render layer name
SceneRenderLayer.samples -> samples:    int    Override number of render samples for this render layer, 0 will use the scene setting
SceneRenderLayer.use -> use:    boolean    Disable or enable the render layer
SceneRenderLayer.use_all_z -> use_all_z:    boolean    Fill in Z values for solid faces in invisible layers, for masking
SceneRenderLayer.use_freestyle -> use_freestyle:    boolean    Render stylized strokes in this Layer
SceneRenderLayer.use_halo -> use_halo:    boolean    Render Halos in this Layer (on top of Solid)
SceneRenderLayer.use_pass_ambient_occlusion -> use_pass_ambient_occlusion:    boolean    Deliver AO pass
SceneRenderLayer.use_pass_color -> use_pass_color:    boolean    Deliver shade-less color pass
SceneRenderLayer.use_pass_combined -> use_pass_combined:    boolean    Deliver full combined RGBA buffer
SceneRenderLayer.use_pass_diffuse -> use_pass_diffuse:    boolean    Deliver diffuse pass
SceneRenderLayer.use_pass_diffuse_color -> use_pass_diffuse_color:    boolean    Deliver diffuse color pass
SceneRenderLayer.use_pass_diffuse_direct -> use_pass_diffuse_direct:    boolean    Deliver diffuse direct pass
SceneRenderLayer.use_pass_diffuse_indirect -> use_pass_diffuse_indirect:    boolean    Deliver diffuse indirect pass
SceneRenderLayer.use_pass_emit -> use_pass_emit:    boolean    Deliver emission pass
SceneRenderLayer.use_pass_environment -> use_pass_environment:    boolean    Deliver environment lighting pass
SceneRenderLayer.use_pass_glossy_color -> use_pass_glossy_color:    boolean    Deliver glossy color pass
SceneRenderLayer.use_pass_glossy_direct -> use_pass_glossy_direct:    boolean    Deliver glossy direct pass
SceneRenderLayer.use_pass_glossy_indirect -> use_pass_glossy_indirect:    boolean    Deliver glossy indirect pass
SceneRenderLayer.use_pass_indirect -> use_pass_indirect:    boolean    Deliver indirect lighting pass
SceneRenderLayer.use_pass_material_index -> use_pass_material_index:    boolean    Deliver material index pass
SceneRenderLayer.use_pass_mist -> use_pass_mist:    boolean    Deliver mist factor pass (0.0-1.0)
SceneRenderLayer.use_pass_normal -> use_pass_normal:    boolean    Deliver normal pass
SceneRenderLayer.use_pass_object_index -> use_pass_object_index:    boolean    Deliver object index pass
SceneRenderLayer.use_pass_reflection -> use_pass_reflection:    boolean    Deliver raytraced reflection pass
SceneRenderLayer.use_pass_refraction -> use_pass_refraction:    boolean    Deliver raytraced refraction pass
SceneRenderLayer.use_pass_shadow -> use_pass_shadow:    boolean    Deliver shadow pass
SceneRenderLayer.use_pass_specular -> use_pass_specular:    boolean    Deliver specular pass
SceneRenderLayer.use_pass_subsurface_color -> use_pass_subsurface_color:    boolean    Deliver subsurface color pass
SceneRenderLayer.use_pass_subsurface_direct -> use_pass_subsurface_direct:    boolean    Deliver subsurface direct pass
SceneRenderLayer.use_pass_subsurface_indirect -> use_pass_subsurface_indirect:    boolean    Deliver subsurface indirect pass
SceneRenderLayer.use_pass_transmission_color -> use_pass_transmission_color:    boolean    Deliver transmission color pass
SceneRenderLayer.use_pass_transmission_direct -> use_pass_transmission_direct:    boolean    Deliver transmission direct pass
SceneRenderLayer.use_pass_transmission_indirect -> use_pass_transmission_indirect:    boolean    Deliver transmission indirect pass
SceneRenderLayer.use_pass_uv -> use_pass_uv:    boolean    Deliver texture UV pass
SceneRenderLayer.use_pass_vector -> use_pass_vector:    boolean    Deliver speed vector pass
SceneRenderLayer.use_pass_z -> use_pass_z:    boolean    Deliver Z values pass
SceneRenderLayer.use_sky -> use_sky:    boolean    Render Sky in this Layer
SceneRenderLayer.use_solid -> use_solid:    boolean    Render Solid faces in this Layer
SceneRenderLayer.use_strand -> use_strand:    boolean    Render Strands in this Layer
SceneRenderLayer.use_zmask -> use_zmask:    boolean    Only render what's in front of the solid z values
SceneRenderLayer.use_ztransp -> use_ztransp:    boolean    Render Z-Transparent faces in this Layer (on top of Solid and Halos)
Scopes.accuracy -> accuracy:    float    Proportion of original image source pixel lines to sample
Scopes.histogram -> histogram:    pointer, (read-only)    Histogram for viewing image statistics
Scopes.use_full_resolution -> use_full_resolution:    boolean    Sample every pixel of the image
Scopes.vectorscope_alpha -> vectorscope_alpha:    float    Opacity of the points
Scopes.waveform_alpha -> waveform_alpha:    float    Opacity of the points
Scopes.waveform_mode -> waveform_mode:    enum    
SculptToolCapabilities.has_accumulate -> has_accumulate:    boolean, (read-only)    
SculptToolCapabilities.has_auto_smooth -> has_auto_smooth:    boolean, (read-only)    
SculptToolCapabilities.has_gravity -> has_gravity:    boolean, (read-only)    
SculptToolCapabilities.has_height -> has_height:    boolean, (read-only)    
SculptToolCapabilities.has_jitter -> has_jitter:    boolean, (read-only)    
SculptToolCapabilities.has_normal_weight -> has_normal_weight:    boolean, (read-only)    
SculptToolCapabilities.has_persistence -> has_persistence:    boolean, (read-only)    
SculptToolCapabilities.has_pinch_factor -> has_pinch_factor:    boolean, (read-only)    
SculptToolCapabilities.has_plane_offset -> has_plane_offset:    boolean, (read-only)    
SculptToolCapabilities.has_random_texture_angle -> has_random_texture_angle:    boolean, (read-only)    
SculptToolCapabilities.has_sculpt_plane -> has_sculpt_plane:    boolean, (read-only)    
SculptToolCapabilities.has_secondary_color -> has_secondary_color:    boolean, (read-only)    
SculptToolCapabilities.has_smooth_stroke -> has_smooth_stroke:    boolean, (read-only)    
SculptToolCapabilities.has_space_attenuation -> has_space_attenuation:    boolean, (read-only)    
SculptToolCapabilities.has_strength -> has_strength:    boolean, (read-only)    
Sensor.controllers -> controllers:    collection, (read-only)    The list containing the controllers connected to the sensor
Sensor.frequency -> frequency:    int    Delay between repeated pulses(in logic tics, 0=no delay)
Sensor.invert -> invert:    boolean    Invert the level(output) of this sensor
Sensor.name -> name:    string    Sensor name
Sensor.pin -> pin:    boolean    Display when not linked to a visible states controller
Sensor.show_expanded -> show_expanded:    boolean    Set sensor expanded in the user interface
Sensor.type -> type:    enum    
Sensor.use_level -> use_level:    boolean    Level detector, trigger controllers of new states (only applicable upon logic state transition)
Sensor.use_pulse_false_level -> use_pulse_false_level:    boolean    Activate FALSE level triggering (pulse mode)
Sensor.use_pulse_true_level -> use_pulse_true_level:    boolean    Activate TRUE level triggering (pulse mode)
Sensor.use_tap -> use_tap:    boolean    Trigger controllers only for an instant, even while the sensor remains true
Sensor|ActuatorSensor.actuator -> actuator:    string    Actuator name, actuator active state modifications will be detected
Sensor|ArmatureSensor.bone -> bone:    string    Identify the bone to check value from
Sensor|ArmatureSensor.constraint -> constraint:    string    Identify the bone constraint to check value from
Sensor|ArmatureSensor.test_type -> test_type:    enum    Type of value and test
Sensor|ArmatureSensor.value -> value:    float    Value to be used in comparison
Sensor|CollisionSensor.material -> material:    string    Only look for objects with this material (blank = all objects)
Sensor|CollisionSensor.property -> property:    string    Only look for objects with this property (blank = all objects)
Sensor|CollisionSensor.use_material -> use_material:    boolean    Toggle collision on material or property
Sensor|CollisionSensor.use_pulse -> use_pulse:    boolean    Change to the set of colliding objects generates pulse
Sensor|DelaySensor.delay -> delay:    int    Delay in number of logic tics before the positive trigger (default 60 per second)
Sensor|DelaySensor.duration -> duration:    int    If >0, delay in number of logic tics before the negative trigger following the positive trigger
Sensor|DelaySensor.use_repeat -> use_repeat:    boolean    Toggle repeat option (if selected, the sensor restarts after Delay+Duration logic tics)
Sensor|JoystickSensor.axis_direction -> axis_direction:    enum    The direction of the axis
Sensor|JoystickSensor.axis_number -> axis_number:    int    Which axis pair to use, 1 is usually the main direction input
Sensor|JoystickSensor.axis_threshold -> axis_threshold:    int    Precision of the axis
Sensor|JoystickSensor.button_number -> button_number:    int    Which button to use
Sensor|JoystickSensor.event_type -> event_type:    enum    The type of event this joystick sensor is triggered on
Sensor|JoystickSensor.hat_direction -> hat_direction:    enum    Hat direction
Sensor|JoystickSensor.hat_number -> hat_number:    int    Which hat to use
Sensor|JoystickSensor.joystick_index -> joystick_index:    int    Which joystick to use
Sensor|JoystickSensor.single_axis_number -> single_axis_number:    int    Single axis (vertical/horizontal/other) to detect
Sensor|JoystickSensor.use_all_events -> use_all_events:    boolean    Triggered by all events on this joystick's current type (axis/button/hat)
Sensor|KeyboardSensor.key -> key:    enum    
Sensor|KeyboardSensor.log -> log:    string    Property that indicates whether to log keystrokes as a string
Sensor|KeyboardSensor.modifier_key_1 -> modifier_key_1:    enum    Modifier key code
Sensor|KeyboardSensor.modifier_key_2 -> modifier_key_2:    enum    Modifier key code
Sensor|KeyboardSensor.target -> target:    string    Property that receives the keystrokes in case a string is logged
Sensor|KeyboardSensor.use_all_keys -> use_all_keys:    boolean    Trigger this sensor on any keystroke
Sensor|MessageSensor.subject -> subject:    string    Optional subject filter: only accept messages with this subject, or empty to accept all
Sensor|MouseSensor.mouse_event -> mouse_event:    enum    Type of event this mouse sensor should trigger on
Sensor|MouseSensor.use_pulse -> use_pulse:    boolean    Moving the mouse over a different object generates a pulse
Sensor|NearSensor.distance -> distance:    float    Trigger distance
Sensor|NearSensor.property -> property:    string    Only look for objects with this property (blank = all objects)
Sensor|NearSensor.reset_distance -> reset_distance:    float    The distance where the sensor forgets the actor
Sensor|PropertySensor.evaluation_type -> evaluation_type:    enum    Type of property evaluation
Sensor|PropertySensor.property -> property:    string    
Sensor|PropertySensor.value -> value:    string    Check for this value in types in Equal or Not Equal types
Sensor|PropertySensor.value_max -> value_max:    string    Maximum value in Interval type
Sensor|PropertySensor.value_min -> value_min:    string    Minimum value in Interval type
Sensor|RadarSensor.angle -> angle:    float    Opening angle of the radar cone
Sensor|RadarSensor.axis -> axis:    enum    Along which axis the radar cone is cast
Sensor|RadarSensor.distance -> distance:    float    Depth of the radar cone
Sensor|RadarSensor.property -> property:    string    Only look for objects with this property (blank = all objects)
Sensor|RandomSensor.seed -> seed:    int    Initial seed of the generator (choose 0 for not random)
Sensor|RaySensor.axis -> axis:    enum    Along which axis the ray is cast
Sensor|RaySensor.material -> material:    string    Only look for objects with this material (blank = all objects)
Sensor|RaySensor.property -> property:    string    Only look for objects with this property (blank = all objects)
Sensor|RaySensor.range -> range:    float    Sense objects no farther than this distance
Sensor|RaySensor.ray_type -> ray_type:    enum    Toggle collision on material or property
Sensor|RaySensor.use_x_ray -> use_x_ray:    boolean    Toggle X-Ray option (see through objects that don't have the property)
Sequence.blend_alpha -> blend_alpha:    float    
Sequence.blend_type -> blend_type:    enum    
Sequence.channel -> channel:    int    Y position of the sequence strip
Sequence.effect_fader -> effect_fader:    float    
Sequence.frame_duration -> frame_duration:    int, (read-only)    The length of the contents of this strip before the handles are applied
Sequence.frame_final_duration -> frame_final_duration:    int    The length of the contents of this strip after the handles are applied
Sequence.frame_final_end -> frame_final_end:    int    End frame displayed in the sequence editor after offsets are applied
Sequence.frame_final_start -> frame_final_start:    int    Start frame displayed in the sequence editor after offsets are applied, setting this is equivalent to moving the handle, not the actual start frame
Sequence.frame_offset_end -> frame_offset_end:    int    
Sequence.frame_offset_start -> frame_offset_start:    int    
Sequence.frame_start -> frame_start:    int    
Sequence.frame_still_end -> frame_still_end:    int    
Sequence.frame_still_start -> frame_still_start:    int    
Sequence.lock -> lock:    boolean    Lock strip so that it can't be transformed
Sequence.modifiers -> modifiers:    collection, (read-only)    Modifiers affecting this strip
Sequence.mute -> mute:    boolean    
Sequence.name -> name:    string    
Sequence.select -> select:    boolean    
Sequence.select_left_handle -> select_left_handle:    boolean    
Sequence.select_right_handle -> select_right_handle:    boolean    
Sequence.speed_factor -> speed_factor:    float    Multiply the current speed of the sequence with this number or remap current frame to this frame
Sequence.type -> type:    enum, (read-only)    
Sequence.use_default_fade -> use_default_fade:    boolean    Fade effect using the built-in default (usually make transition as long as effect strip)
Sequence.use_linear_modifiers -> use_linear_modifiers:    boolean    Calculate modifiers in linear space instead of sequencer's space
SequenceColorBalanceData.gain -> gain:    float[3]    Color balance gain (highlights)
SequenceColorBalanceData.gamma -> gamma:    float[3]    Color balance gamma (midtones)
SequenceColorBalanceData.invert_gain -> invert_gain:    boolean    
SequenceColorBalanceData.invert_gamma -> invert_gamma:    boolean    
SequenceColorBalanceData.invert_lift -> invert_lift:    boolean    
SequenceColorBalanceData.lift -> lift:    float[3]    Color balance lift (shadows)
SequenceCrop.max_x -> max_x:    int    
SequenceCrop.max_y -> max_y:    int    
SequenceCrop.min_x -> min_x:    int    
SequenceCrop.min_y -> min_y:    int    
SequenceEditor.active_strip -> active_strip:    pointer    Sequencer's active strip
SequenceEditor.meta_stack -> meta_stack:    collection, (read-only)    Meta strip stack, last is currently edited meta strip
SequenceEditor.overlay_frame -> overlay_frame:    int    
SequenceEditor.sequences -> sequences:    collection, (read-only)    
SequenceEditor.sequences_all -> sequences_all:    collection, (read-only)    
SequenceEditor.show_overlay -> show_overlay:    boolean    Partial overlay on top of the sequencer
SequenceEditor.use_overlay_lock -> use_overlay_lock:    boolean    
SequenceElement.filename -> filename:    string    
SequenceElement.orig_height -> orig_height:    int, (read-only)    Original image height
SequenceElement.orig_width -> orig_width:    int, (read-only)    Original image width
SequenceModifier.input_mask_id -> input_mask_id:    pointer    Mask ID used as mask input for the modifier
SequenceModifier.input_mask_strip -> input_mask_strip:    pointer    Strip used as mask input for the modifier
SequenceModifier.input_mask_type -> input_mask_type:    enum    Type of input data used for mask
SequenceModifier.mute -> mute:    boolean    Mute this modifier
SequenceModifier.name -> name:    string    
SequenceModifier.show_expanded -> show_expanded:    boolean    Mute expanded settings for the modifier
SequenceModifier.type -> type:    enum, (read-only)    
SequenceModifier|BrightContrastModifier.bright -> bright:    float    
SequenceModifier|BrightContrastModifier.contrast -> contrast:    float    
SequenceModifier|ColorBalanceModifier.color_balance -> color_balance:    pointer, (read-only)    
SequenceModifier|ColorBalanceModifier.color_multiply -> color_multiply:    float    
SequenceModifier|CurvesModifier.curve_mapping -> curve_mapping:    pointer, (read-only)    
SequenceModifier|HueCorrectModifier.curve_mapping -> curve_mapping:    pointer, (read-only)    
SequenceProxy.build_100 -> build_100:    boolean    Build 100% proxy resolution
SequenceProxy.build_25 -> build_25:    boolean    Build 25% proxy resolution
SequenceProxy.build_50 -> build_50:    boolean    Build 50% proxy resolution
SequenceProxy.build_75 -> build_75:    boolean    Build 75% proxy resolution
SequenceProxy.build_free_run -> build_free_run:    boolean    Build free run time code index
SequenceProxy.build_free_run_rec_date -> build_free_run_rec_date:    boolean    Build free run time code index using Record Date/Time
SequenceProxy.build_record_run -> build_record_run:    boolean    Build record run time code index
SequenceProxy.directory -> directory:    string    Location to store the proxy files
SequenceProxy.filepath -> filepath:    string    Location of custom proxy file
SequenceProxy.quality -> quality:    int    JPEG Quality of proxies to build
SequenceProxy.timecode -> timecode:    enum    
SequenceTransform.offset_x -> offset_x:    int    
SequenceTransform.offset_y -> offset_y:    int    
Sequence|EffectSequence.alpha_mode -> alpha_mode:    enum    Representation of alpha information in the RGBA pixels
Sequence|EffectSequence.color_multiply -> color_multiply:    float    
Sequence|EffectSequence.color_saturation -> color_saturation:    float    
Sequence|EffectSequence.crop -> crop:    pointer, (read-only)    
Sequence|EffectSequence.proxy -> proxy:    pointer, (read-only)    
Sequence|EffectSequence.strobe -> strobe:    float    Only display every nth frame
Sequence|EffectSequence.transform -> transform:    pointer, (read-only)    
Sequence|EffectSequence.use_crop -> use_crop:    boolean    Crop image before processing
Sequence|EffectSequence.use_deinterlace -> use_deinterlace:    boolean    For video movies to remove fields
Sequence|EffectSequence.use_flip_x -> use_flip_x:    boolean    Flip on the X axis
Sequence|EffectSequence.use_flip_y -> use_flip_y:    boolean    Flip on the Y axis
Sequence|EffectSequence.use_float -> use_float:    boolean    Convert input to float data
Sequence|EffectSequence.use_proxy -> use_proxy:    boolean    Use a preview proxy and/or timecode index for this strip
Sequence|EffectSequence.use_proxy_custom_directory -> use_proxy_custom_directory:    boolean    Use a custom directory to store data
Sequence|EffectSequence.use_proxy_custom_file -> use_proxy_custom_file:    boolean    Use a custom file to read proxy data from
Sequence|EffectSequence.use_reverse_frames -> use_reverse_frames:    boolean    Reverse frame order
Sequence|EffectSequence.use_translation -> use_translation:    boolean    Translate image before processing
Sequence|EffectSequence|AddSequence.input_1 -> input_1:    pointer    First input for the effect strip
Sequence|EffectSequence|AddSequence.input_2 -> input_2:    pointer    Second input for the effect strip
Sequence|EffectSequence|AddSequence.input_count -> input_count:    int, (read-only)    
Sequence|EffectSequence|AdjustmentSequence.animation_offset_end -> animation_offset_end:    int    Animation end offset (trim end)
Sequence|EffectSequence|AdjustmentSequence.animation_offset_start -> animation_offset_start:    int    Animation start offset (trim start)
Sequence|EffectSequence|AdjustmentSequence.input_count -> input_count:    int, (read-only)    
Sequence|EffectSequence|AlphaOverSequence.input_1 -> input_1:    pointer    First input for the effect strip
Sequence|EffectSequence|AlphaOverSequence.input_2 -> input_2:    pointer    Second input for the effect strip
Sequence|EffectSequence|AlphaOverSequence.input_count -> input_count:    int, (read-only)    
Sequence|EffectSequence|AlphaUnderSequence.input_1 -> input_1:    pointer    First input for the effect strip
Sequence|EffectSequence|AlphaUnderSequence.input_2 -> input_2:    pointer    Second input for the effect strip
Sequence|EffectSequence|AlphaUnderSequence.input_count -> input_count:    int, (read-only)    
Sequence|EffectSequence|ColorSequence.color -> color:    float[3]    
Sequence|EffectSequence|ColorSequence.input_count -> input_count:    int, (read-only)    
Sequence|EffectSequence|CrossSequence.input_1 -> input_1:    pointer    First input for the effect strip
Sequence|EffectSequence|CrossSequence.input_2 -> input_2:    pointer    Second input for the effect strip
Sequence|EffectSequence|CrossSequence.input_count -> input_count:    int, (read-only)    
Sequence|EffectSequence|GammaCrossSequence.input_1 -> input_1:    pointer    First input for the effect strip
Sequence|EffectSequence|GammaCrossSequence.input_2 -> input_2:    pointer    Second input for the effect strip
Sequence|EffectSequence|GammaCrossSequence.input_count -> input_count:    int, (read-only)    
Sequence|EffectSequence|GlowSequence.blur_radius -> blur_radius:    float    Radius of glow effect
Sequence|EffectSequence|GlowSequence.boost_factor -> boost_factor:    float    Brightness multiplier
Sequence|EffectSequence|GlowSequence.clamp -> clamp:    float    Brightness limit of intensity
Sequence|EffectSequence|GlowSequence.input_1 -> input_1:    pointer    First input for the effect strip
Sequence|EffectSequence|GlowSequence.input_count -> input_count:    int, (read-only)    
Sequence|EffectSequence|GlowSequence.quality -> quality:    int    Accuracy of the blur effect
Sequence|EffectSequence|GlowSequence.threshold -> threshold:    float    Minimum intensity to trigger a glow
Sequence|EffectSequence|GlowSequence.use_only_boost -> use_only_boost:    boolean    Show the glow buffer only
Sequence|EffectSequence|MulticamSequence.animation_offset_end -> animation_offset_end:    int    Animation end offset (trim end)
Sequence|EffectSequence|MulticamSequence.animation_offset_start -> animation_offset_start:    int    Animation start offset (trim start)
Sequence|EffectSequence|MulticamSequence.input_count -> input_count:    int, (read-only)    
Sequence|EffectSequence|MulticamSequence.multicam_source -> multicam_source:    int    
Sequence|EffectSequence|MultiplySequence.input_1 -> input_1:    pointer    First input for the effect strip
Sequence|EffectSequence|MultiplySequence.input_2 -> input_2:    pointer    Second input for the effect strip
Sequence|EffectSequence|MultiplySequence.input_count -> input_count:    int, (read-only)    
Sequence|EffectSequence|OverDropSequence.input_1 -> input_1:    pointer    First input for the effect strip
Sequence|EffectSequence|OverDropSequence.input_2 -> input_2:    pointer    Second input for the effect strip
Sequence|EffectSequence|OverDropSequence.input_count -> input_count:    int, (read-only)    
Sequence|EffectSequence|SpeedControlSequence.input_1 -> input_1:    pointer    First input for the effect strip
Sequence|EffectSequence|SpeedControlSequence.input_count -> input_count:    int, (read-only)    
Sequence|EffectSequence|SpeedControlSequence.multiply_speed -> multiply_speed:    float    Multiply the resulting speed after the speed factor
Sequence|EffectSequence|SpeedControlSequence.scale_to_length -> scale_to_length:    boolean    Scale values from 0.0 to 1.0 to target sequence length
Sequence|EffectSequence|SpeedControlSequence.use_as_speed -> use_as_speed:    boolean    Interpret the value as speed instead of a frame number
Sequence|EffectSequence|SubtractSequence.input_1 -> input_1:    pointer    First input for the effect strip
Sequence|EffectSequence|SubtractSequence.input_2 -> input_2:    pointer    Second input for the effect strip
Sequence|EffectSequence|SubtractSequence.input_count -> input_count:    int, (read-only)    
Sequence|EffectSequence|TransformSequence.input_1 -> input_1:    pointer    First input for the effect strip
Sequence|EffectSequence|TransformSequence.input_count -> input_count:    int, (read-only)    
Sequence|EffectSequence|TransformSequence.interpolation -> interpolation:    enum    
Sequence|EffectSequence|TransformSequence.rotation_start -> rotation_start:    float    
Sequence|EffectSequence|TransformSequence.scale_start_x -> scale_start_x:    float    
Sequence|EffectSequence|TransformSequence.scale_start_y -> scale_start_y:    float    
Sequence|EffectSequence|TransformSequence.translate_start_x -> translate_start_x:    float    
Sequence|EffectSequence|TransformSequence.translate_start_y -> translate_start_y:    float    
Sequence|EffectSequence|TransformSequence.translation_unit -> translation_unit:    enum    
Sequence|EffectSequence|TransformSequence.use_uniform_scale -> use_uniform_scale:    boolean    Scale uniformly, preserving aspect ratio
Sequence|EffectSequence|WipeSequence.angle -> angle:    float    Edge angle
Sequence|EffectSequence|WipeSequence.blur_width -> blur_width:    float    Width of the blur edge, in percentage relative to the image size
Sequence|EffectSequence|WipeSequence.direction -> direction:    enum    Wipe direction
Sequence|EffectSequence|WipeSequence.input_1 -> input_1:    pointer    First input for the effect strip
Sequence|EffectSequence|WipeSequence.input_count -> input_count:    int, (read-only)    
Sequence|EffectSequence|WipeSequence.transition_type -> transition_type:    enum    
Sequence|ImageSequence.alpha_mode -> alpha_mode:    enum    Representation of alpha information in the RGBA pixels
Sequence|ImageSequence.animation_offset_end -> animation_offset_end:    int    Animation end offset (trim end)
Sequence|ImageSequence.animation_offset_start -> animation_offset_start:    int    Animation start offset (trim start)
Sequence|ImageSequence.color_multiply -> color_multiply:    float    
Sequence|ImageSequence.color_saturation -> color_saturation:    float    
Sequence|ImageSequence.colorspace_settings -> colorspace_settings:    pointer, (read-only)    Input color space settings
Sequence|ImageSequence.crop -> crop:    pointer, (read-only)    
Sequence|ImageSequence.directory -> directory:    string    
Sequence|ImageSequence.elements -> elements:    collection, (read-only)    
Sequence|ImageSequence.proxy -> proxy:    pointer, (read-only)    
Sequence|ImageSequence.strobe -> strobe:    float    Only display every nth frame
Sequence|ImageSequence.transform -> transform:    pointer, (read-only)    
Sequence|ImageSequence.use_crop -> use_crop:    boolean    Crop image before processing
Sequence|ImageSequence.use_deinterlace -> use_deinterlace:    boolean    For video movies to remove fields
Sequence|ImageSequence.use_flip_x -> use_flip_x:    boolean    Flip on the X axis
Sequence|ImageSequence.use_flip_y -> use_flip_y:    boolean    Flip on the Y axis
Sequence|ImageSequence.use_float -> use_float:    boolean    Convert input to float data
Sequence|ImageSequence.use_proxy -> use_proxy:    boolean    Use a preview proxy and/or timecode index for this strip
Sequence|ImageSequence.use_proxy_custom_directory -> use_proxy_custom_directory:    boolean    Use a custom directory to store data
Sequence|ImageSequence.use_proxy_custom_file -> use_proxy_custom_file:    boolean    Use a custom file to read proxy data from
Sequence|ImageSequence.use_reverse_frames -> use_reverse_frames:    boolean    Reverse frame order
Sequence|ImageSequence.use_translation -> use_translation:    boolean    Translate image before processing
Sequence|MaskSequence.alpha_mode -> alpha_mode:    enum    Representation of alpha information in the RGBA pixels
Sequence|MaskSequence.animation_offset_end -> animation_offset_end:    int    Animation end offset (trim end)
Sequence|MaskSequence.animation_offset_start -> animation_offset_start:    int    Animation start offset (trim start)
Sequence|MaskSequence.color_multiply -> color_multiply:    float    
Sequence|MaskSequence.color_saturation -> color_saturation:    float    
Sequence|MaskSequence.crop -> crop:    pointer, (read-only)    
Sequence|MaskSequence.mask -> mask:    pointer    Mask that this sequence uses
Sequence|MaskSequence.strobe -> strobe:    float    Only display every nth frame
Sequence|MaskSequence.transform -> transform:    pointer, (read-only)    
Sequence|MaskSequence.use_crop -> use_crop:    boolean    Crop image before processing
Sequence|MaskSequence.use_deinterlace -> use_deinterlace:    boolean    For video movies to remove fields
Sequence|MaskSequence.use_flip_x -> use_flip_x:    boolean    Flip on the X axis
Sequence|MaskSequence.use_flip_y -> use_flip_y:    boolean    Flip on the Y axis
Sequence|MaskSequence.use_float -> use_float:    boolean    Convert input to float data
Sequence|MaskSequence.use_reverse_frames -> use_reverse_frames:    boolean    Reverse frame order
Sequence|MaskSequence.use_translation -> use_translation:    boolean    Translate image before processing
Sequence|MetaSequence.alpha_mode -> alpha_mode:    enum    Representation of alpha information in the RGBA pixels
Sequence|MetaSequence.animation_offset_end -> animation_offset_end:    int    Animation end offset (trim end)
Sequence|MetaSequence.animation_offset_start -> animation_offset_start:    int    Animation start offset (trim start)
Sequence|MetaSequence.color_multiply -> color_multiply:    float    
Sequence|MetaSequence.color_saturation -> color_saturation:    float    
Sequence|MetaSequence.crop -> crop:    pointer, (read-only)    
Sequence|MetaSequence.proxy -> proxy:    pointer, (read-only)    
Sequence|MetaSequence.sequences -> sequences:    collection, (read-only)    
Sequence|MetaSequence.strobe -> strobe:    float    Only display every nth frame
Sequence|MetaSequence.transform -> transform:    pointer, (read-only)    
Sequence|MetaSequence.use_crop -> use_crop:    boolean    Crop image before processing
Sequence|MetaSequence.use_deinterlace -> use_deinterlace:    boolean    For video movies to remove fields
Sequence|MetaSequence.use_flip_x -> use_flip_x:    boolean    Flip on the X axis
Sequence|MetaSequence.use_flip_y -> use_flip_y:    boolean    Flip on the Y axis
Sequence|MetaSequence.use_float -> use_float:    boolean    Convert input to float data
Sequence|MetaSequence.use_proxy -> use_proxy:    boolean    Use a preview proxy and/or timecode index for this strip
Sequence|MetaSequence.use_proxy_custom_directory -> use_proxy_custom_directory:    boolean    Use a custom directory to store data
Sequence|MetaSequence.use_proxy_custom_file -> use_proxy_custom_file:    boolean    Use a custom file to read proxy data from
Sequence|MetaSequence.use_reverse_frames -> use_reverse_frames:    boolean    Reverse frame order
Sequence|MetaSequence.use_translation -> use_translation:    boolean    Translate image before processing
Sequence|MovieClipSequence.alpha_mode -> alpha_mode:    enum    Representation of alpha information in the RGBA pixels
Sequence|MovieClipSequence.animation_offset_end -> animation_offset_end:    int    Animation end offset (trim end)
Sequence|MovieClipSequence.animation_offset_start -> animation_offset_start:    int    Animation start offset (trim start)
Sequence|MovieClipSequence.color_multiply -> color_multiply:    float    
Sequence|MovieClipSequence.color_saturation -> color_saturation:    float    
Sequence|MovieClipSequence.crop -> crop:    pointer, (read-only)    
Sequence|MovieClipSequence.stabilize2d -> stabilize2d:    boolean    Use the 2D stabilized version of the clip
Sequence|MovieClipSequence.strobe -> strobe:    float    Only display every nth frame
Sequence|MovieClipSequence.transform -> transform:    pointer, (read-only)    
Sequence|MovieClipSequence.undistort -> undistort:    boolean    Use the undistorted version of the clip
Sequence|MovieClipSequence.use_crop -> use_crop:    boolean    Crop image before processing
Sequence|MovieClipSequence.use_deinterlace -> use_deinterlace:    boolean    For video movies to remove fields
Sequence|MovieClipSequence.use_flip_x -> use_flip_x:    boolean    Flip on the X axis
Sequence|MovieClipSequence.use_flip_y -> use_flip_y:    boolean    Flip on the Y axis
Sequence|MovieClipSequence.use_float -> use_float:    boolean    Convert input to float data
Sequence|MovieClipSequence.use_reverse_frames -> use_reverse_frames:    boolean    Reverse frame order
Sequence|MovieClipSequence.use_translation -> use_translation:    boolean    Translate image before processing
Sequence|MovieSequence.alpha_mode -> alpha_mode:    enum    Representation of alpha information in the RGBA pixels
Sequence|MovieSequence.animation_offset_end -> animation_offset_end:    int    Animation end offset (trim end)
Sequence|MovieSequence.animation_offset_start -> animation_offset_start:    int    Animation start offset (trim start)
Sequence|MovieSequence.color_multiply -> color_multiply:    float    
Sequence|MovieSequence.color_saturation -> color_saturation:    float    
Sequence|MovieSequence.colorspace_settings -> colorspace_settings:    pointer, (read-only)    Input color space settings
Sequence|MovieSequence.crop -> crop:    pointer, (read-only)    
Sequence|MovieSequence.elements -> elements:    collection, (read-only)    
Sequence|MovieSequence.filepath -> filepath:    string    
Sequence|MovieSequence.mpeg_preseek -> mpeg_preseek:    int    For MPEG movies, preseek this many frames
Sequence|MovieSequence.proxy -> proxy:    pointer, (read-only)    
Sequence|MovieSequence.stream_index -> stream_index:    int    For files with several movie streams, use the stream with the given index
Sequence|MovieSequence.strobe -> strobe:    float    Only display every nth frame
Sequence|MovieSequence.transform -> transform:    pointer, (read-only)    
Sequence|MovieSequence.use_crop -> use_crop:    boolean    Crop image before processing
Sequence|MovieSequence.use_deinterlace -> use_deinterlace:    boolean    For video movies to remove fields
Sequence|MovieSequence.use_flip_x -> use_flip_x:    boolean    Flip on the X axis
Sequence|MovieSequence.use_flip_y -> use_flip_y:    boolean    Flip on the Y axis
Sequence|MovieSequence.use_float -> use_float:    boolean    Convert input to float data
Sequence|MovieSequence.use_proxy -> use_proxy:    boolean    Use a preview proxy and/or timecode index for this strip
Sequence|MovieSequence.use_proxy_custom_directory -> use_proxy_custom_directory:    boolean    Use a custom directory to store data
Sequence|MovieSequence.use_proxy_custom_file -> use_proxy_custom_file:    boolean    Use a custom file to read proxy data from
Sequence|MovieSequence.use_reverse_frames -> use_reverse_frames:    boolean    Reverse frame order
Sequence|MovieSequence.use_translation -> use_translation:    boolean    Translate image before processing
Sequence|SceneSequence.alpha_mode -> alpha_mode:    enum    Representation of alpha information in the RGBA pixels
Sequence|SceneSequence.animation_offset_end -> animation_offset_end:    int    Animation end offset (trim end)
Sequence|SceneSequence.animation_offset_start -> animation_offset_start:    int    Animation start offset (trim start)
Sequence|SceneSequence.color_multiply -> color_multiply:    float    
Sequence|SceneSequence.color_saturation -> color_saturation:    float    
Sequence|SceneSequence.crop -> crop:    pointer, (read-only)    
Sequence|SceneSequence.proxy -> proxy:    pointer, (read-only)    
Sequence|SceneSequence.scene -> scene:    pointer    Scene that this sequence uses
Sequence|SceneSequence.scene_camera -> scene_camera:    pointer    Override the scenes active camera
Sequence|SceneSequence.strobe -> strobe:    float    Only display every nth frame
Sequence|SceneSequence.transform -> transform:    pointer, (read-only)    
Sequence|SceneSequence.use_crop -> use_crop:    boolean    Crop image before processing
Sequence|SceneSequence.use_deinterlace -> use_deinterlace:    boolean    For video movies to remove fields
Sequence|SceneSequence.use_flip_x -> use_flip_x:    boolean    Flip on the X axis
Sequence|SceneSequence.use_flip_y -> use_flip_y:    boolean    Flip on the Y axis
Sequence|SceneSequence.use_float -> use_float:    boolean    Convert input to float data
Sequence|SceneSequence.use_proxy -> use_proxy:    boolean    Use a preview proxy and/or timecode index for this strip
Sequence|SceneSequence.use_proxy_custom_directory -> use_proxy_custom_directory:    boolean    Use a custom directory to store data
Sequence|SceneSequence.use_proxy_custom_file -> use_proxy_custom_file:    boolean    Use a custom file to read proxy data from
Sequence|SceneSequence.use_reverse_frames -> use_reverse_frames:    boolean    Reverse frame order
Sequence|SceneSequence.use_translation -> use_translation:    boolean    Translate image before processing
Sequence|SoundSequence.animation_offset_end -> animation_offset_end:    int    Animation end offset (trim end)
Sequence|SoundSequence.animation_offset_start -> animation_offset_start:    int    Animation start offset (trim start)
Sequence|SoundSequence.filepath -> filepath:    string    
Sequence|SoundSequence.pan -> pan:    float    Playback panning of the sound (only for Mono sources)
Sequence|SoundSequence.pitch -> pitch:    float    Playback pitch of the sound
Sequence|SoundSequence.show_waveform -> show_waveform:    boolean    Whether to draw the sound's waveform
Sequence|SoundSequence.sound -> sound:    pointer, (read-only)    Sound datablock used by this sequence
Sequence|SoundSequence.volume -> volume:    float    Playback volume of the sound
ShapeKey.data -> data:    collection, (read-only)    
ShapeKey.frame -> frame:    float, (read-only)    Frame for absolute keys
ShapeKey.interpolation -> interpolation:    enum    Interpolation type for absolute shape keys
ShapeKey.mute -> mute:    boolean    Mute this shape key
ShapeKey.name -> name:    string    Name of Shape Key
ShapeKey.relative_key -> relative_key:    pointer    Shape used as a relative key
ShapeKey.slider_max -> slider_max:    float    Maximum for slider
ShapeKey.slider_min -> slider_min:    float    Minimum for slider
ShapeKey.value -> value:    float    Value of shape key at the current frame
ShapeKey.vertex_group -> vertex_group:    string    Vertex weight group, to blend with basis shape
ShapeKeyBezierPoint.co -> co:    float[3]    
ShapeKeyBezierPoint.handle_left -> handle_left:    float[3]    
ShapeKeyBezierPoint.handle_right -> handle_right:    float[3]    
ShapeKeyCurvePoint.co -> co:    float[3]    
ShapeKeyCurvePoint.tilt -> tilt:    float    
ShapeKeyPoint.co -> co:    float[3]    
SmokeCollSettings.collision_type -> collision_type:    enum    Collision type
SmokeDomainSettings.adapt_margin -> adapt_margin:    int    Margin added around fluid to minimize boundary interference
SmokeDomainSettings.adapt_threshold -> adapt_threshold:    float    Maximum amount of fluid cell can contain before it is considered empty
SmokeDomainSettings.additional_res -> additional_res:    int    Maximum number of additional cells
SmokeDomainSettings.alpha -> alpha:    float    How much density affects smoke motion (higher value results in faster rising smoke)
SmokeDomainSettings.amplify -> amplify:    int    Enhance the resolution of smoke by this factor using noise
SmokeDomainSettings.beta -> beta:    float    How much heat affects smoke motion (higher value results in faster rising smoke)
SmokeDomainSettings.burning_rate -> burning_rate:    float    Speed of the burning reaction (use larger values for smaller flame)
SmokeDomainSettings.cell_size -> cell_size:    float[3], (read-only)    Cell Size
SmokeDomainSettings.collision_extents -> collision_extents:    enum    Select which domain border will be treated as collision object
SmokeDomainSettings.collision_group -> collision_group:    pointer    Limit collisions to this group
SmokeDomainSettings.density -> density:    float[32], (read-only)    Smoke density
SmokeDomainSettings.dissolve_speed -> dissolve_speed:    int    Dissolve Speed
SmokeDomainSettings.domain_resolution -> domain_resolution:    int[3], (read-only)    Smoke Grid Resolution
SmokeDomainSettings.effector_group -> effector_group:    pointer    Limit effectors to this group
SmokeDomainSettings.effector_weights -> effector_weights:    pointer, (read-only)    
SmokeDomainSettings.flame_ignition -> flame_ignition:    float    Minimum temperature of flames
SmokeDomainSettings.flame_max_temp -> flame_max_temp:    float    Maximum temperature of flames
SmokeDomainSettings.flame_smoke -> flame_smoke:    float    Amount of smoke created by burning fuel
SmokeDomainSettings.flame_smoke_color -> flame_smoke_color:    float[3]    Color of smoke emitted from burning fuel
SmokeDomainSettings.flame_vorticity -> flame_vorticity:    float    Additional vorticity for the flames
SmokeDomainSettings.fluid_group -> fluid_group:    pointer    Limit fluid objects to this group
SmokeDomainSettings.highres_sampling -> highres_sampling:    enum    Method for sampling the high resolution flow
SmokeDomainSettings.noise_type -> noise_type:    enum    Noise method which is used for creating the high resolution
SmokeDomainSettings.point_cache -> point_cache:    pointer, (read-only)    
SmokeDomainSettings.point_cache_compress_type -> point_cache_compress_type:    enum    Compression method to be used
SmokeDomainSettings.resolution_max -> resolution_max:    int    Maximal resolution used in the fluid domain
SmokeDomainSettings.show_high_resolution -> show_high_resolution:    boolean    Show high resolution (using amplification)
SmokeDomainSettings.start_point -> start_point:    float[3], (read-only)    Start point
SmokeDomainSettings.strength -> strength:    float    Strength of noise
SmokeDomainSettings.time_scale -> time_scale:    float    Adjust simulation speed
SmokeDomainSettings.use_adaptive_domain -> use_adaptive_domain:    boolean    Adapt simulation resolution and size to fluid
SmokeDomainSettings.use_dissolve_smoke -> use_dissolve_smoke:    boolean    Enable smoke to disappear over time
SmokeDomainSettings.use_dissolve_smoke_log -> use_dissolve_smoke_log:    boolean    Using 1/x
SmokeDomainSettings.use_high_resolution -> use_high_resolution:    boolean    Enable high resolution (using amplification)
SmokeDomainSettings.vorticity -> vorticity:    float    Amount of turbulence/rotation in fluid
SmokeFlowSettings.density -> density:    float    
SmokeFlowSettings.density_vertex_group -> density_vertex_group:    string    Name of vertex group which determines surface emission rate
SmokeFlowSettings.fuel_amount -> fuel_amount:    float    
SmokeFlowSettings.noise_texture -> noise_texture:    pointer    Texture that controls emission strength
SmokeFlowSettings.particle_size -> particle_size:    float    Particle size in simulation cells
SmokeFlowSettings.particle_system -> particle_system:    pointer    Particle systems emitted from the object
SmokeFlowSettings.smoke_color -> smoke_color:    float[3]    Color of smoke
SmokeFlowSettings.smoke_flow_source -> smoke_flow_source:    enum    Change how smoke is emitted
SmokeFlowSettings.smoke_flow_type -> smoke_flow_type:    enum    Change how flow affects the simulation
SmokeFlowSettings.subframes -> subframes:    int    Number of additional samples to take between frames to improve quality of fast moving flows
SmokeFlowSettings.surface_distance -> surface_distance:    float    Maximum distance from mesh surface to emit smoke
SmokeFlowSettings.temperature -> temperature:    float    Temperature difference to ambient temperature
SmokeFlowSettings.texture_map_type -> texture_map_type:    enum    Texture mapping type
SmokeFlowSettings.texture_offset -> texture_offset:    float    Z-offset of texture mapping
SmokeFlowSettings.texture_size -> texture_size:    float    Size of texture mapping
SmokeFlowSettings.use_absolute -> use_absolute:    boolean    Only allow given density value in emitter area
SmokeFlowSettings.use_initial_velocity -> use_initial_velocity:    boolean    Smoke has some initial velocity when it is emitted
SmokeFlowSettings.use_particle_size -> use_particle_size:    boolean    Set particle size in simulation cells or use nearest cell
SmokeFlowSettings.use_texture -> use_texture:    boolean    Use a texture to control emission strength
SmokeFlowSettings.uv_layer -> uv_layer:    string    UV map name
SmokeFlowSettings.velocity_factor -> velocity_factor:    float    Multiplier of source velocity passed to smoke
SmokeFlowSettings.velocity_normal -> velocity_normal:    float    Amount of normal directional velocity
SmokeFlowSettings.velocity_random -> velocity_random:    float    Amount of random velocity
SmokeFlowSettings.volume_density -> volume_density:    float    Factor for smoke emitted from inside the mesh volume
SoftBodySettings.aero -> aero:    int    Make edges 'sail'
SoftBodySettings.aerodynamics_type -> aerodynamics_type:    enum    Method of calculating aerodynamic interaction
SoftBodySettings.ball_damp -> ball_damp:    float    Blending to inelastic collision
SoftBodySettings.ball_size -> ball_size:    float    Absolute ball size or factor if not manually adjusted
SoftBodySettings.ball_stiff -> ball_stiff:    float    Ball inflating pressure
SoftBodySettings.bend -> bend:    float    Bending Stiffness
SoftBodySettings.choke -> choke:    int    'Viscosity' inside collision target
SoftBodySettings.collision_type -> collision_type:    enum    Choose Collision Type
SoftBodySettings.damping -> damping:    float    Edge spring friction
SoftBodySettings.effector_weights -> effector_weights:    pointer, (read-only)    
SoftBodySettings.error_threshold -> error_threshold:    float    The Runge-Kutta ODE solver error limit, low value gives more precision, high values speed
SoftBodySettings.friction -> friction:    float    General media friction for point movements
SoftBodySettings.fuzzy -> fuzzy:    int    Fuzziness while on collision, high values make collision handling faster but less stable
SoftBodySettings.goal_default -> goal_default:    float    Default Goal (vertex target position) value, when no Vertex Group used
SoftBodySettings.goal_friction -> goal_friction:    float    Goal (vertex target position) friction
SoftBodySettings.goal_max -> goal_max:    float    Goal maximum, vertex weights are scaled to match this range
SoftBodySettings.goal_min -> goal_min:    float    Goal minimum, vertex weights are scaled to match this range
SoftBodySettings.goal_spring -> goal_spring:    float    Goal (vertex target position) spring stiffness
SoftBodySettings.gravity -> gravity:    float    Apply gravitation to point movement
SoftBodySettings.location_mass_center -> location_mass_center:    float[3]    Location of Center of mass
SoftBodySettings.mass -> mass:    float    General Mass value
SoftBodySettings.plastic -> plastic:    int    Permanent deform
SoftBodySettings.pull -> pull:    float    Edge spring stiffness when longer than rest length
SoftBodySettings.push -> push:    float    Edge spring stiffness when shorter than rest length
SoftBodySettings.rotation_estimate -> rotation_estimate:    float[9]    Estimated rotation matrix
SoftBodySettings.scale_estimate -> scale_estimate:    float[9]    Estimated scale matrix
SoftBodySettings.shear -> shear:    float    Shear Stiffness
SoftBodySettings.speed -> speed:    float    Tweak timing for physics to control frequency and speed
SoftBodySettings.spring_length -> spring_length:    int    Alter spring length to shrink/blow up (unit %) 0 to disable
SoftBodySettings.step_max -> step_max:    int    Maximal # solver steps/frame
SoftBodySettings.step_min -> step_min:    int    Minimal # solver steps/frame
SoftBodySettings.use_auto_step -> use_auto_step:    boolean    Use velocities for automagic step sizes
SoftBodySettings.use_diagnose -> use_diagnose:    boolean    Turn on SB diagnose console prints
SoftBodySettings.use_edge_collision -> use_edge_collision:    boolean    Edges collide too
SoftBodySettings.use_edges -> use_edges:    boolean    Use Edges as springs
SoftBodySettings.use_estimate_matrix -> use_estimate_matrix:    boolean    Estimate matrix... split to COM, ROT, SCALE
SoftBodySettings.use_face_collision -> use_face_collision:    boolean    Faces collide too, can be very slow
SoftBodySettings.use_goal -> use_goal:    boolean    Define forces for vertices to stick to animated position
SoftBodySettings.use_self_collision -> use_self_collision:    boolean    Enable naive vertex ball self collision
SoftBodySettings.use_stiff_quads -> use_stiff_quads:    boolean    Add diagonal springs on 4-gons
SoftBodySettings.vertex_group_goal -> vertex_group_goal:    string    Control point weight values
SoftBodySettings.vertex_group_mass -> vertex_group_mass:    string    Control point mass values
SoftBodySettings.vertex_group_spring -> vertex_group_spring:    string    Control point spring strength values
Space.type -> type:    enum, (read-only)    Space data type
SpaceNodeEditorPath.to_string -> to_string:    string, (read-only)    
SpaceUVEditor.draw_stretch_type -> draw_stretch_type:    enum    Type of stretch to draw
SpaceUVEditor.edge_draw_type -> edge_draw_type:    enum    Draw type for drawing UV edges
SpaceUVEditor.lock_bounds -> lock_bounds:    boolean    Constraint to stay within the image bounds while editing
SpaceUVEditor.show_faces -> show_faces:    boolean    Draw faces over the image
SpaceUVEditor.show_modified_edges -> show_modified_edges:    boolean    Draw edges after modifiers are applied
SpaceUVEditor.show_normalized_coords -> show_normalized_coords:    boolean    Display UV coordinates from 0.0 to 1.0 rather than in pixels
SpaceUVEditor.show_other_objects -> show_other_objects:    boolean    Draw other selected objects that share the same image
SpaceUVEditor.show_smooth_edges -> show_smooth_edges:    boolean    Draw UV edges anti-aliased
SpaceUVEditor.show_stretch -> show_stretch:    boolean    Draw faces colored according to the difference in shape between UVs and their 3D coordinates (blue for low distortion, red for high distortion)
SpaceUVEditor.sticky_select_mode -> sticky_select_mode:    enum    Automatically select also UVs sharing the same vertex as the ones being selected
SpaceUVEditor.use_live_unwrap -> use_live_unwrap:    boolean    Continuously unwrap the selected UV island while transforming pinned vertices
SpaceUVEditor.use_snap_to_pixels -> use_snap_to_pixels:    boolean    Snap UVs to pixel locations while editing
Space|SpaceClipEditor.clip -> clip:    pointer    Movie clip displayed and edited in this space
Space|SpaceClipEditor.clip_user -> clip_user:    pointer, (read-only)    Parameters defining which frame of the movie clip is displayed
Space|SpaceClipEditor.grease_pencil_source -> grease_pencil_source:    enum    Where the grease pencil comes from
Space|SpaceClipEditor.lock_selection -> lock_selection:    boolean    Lock viewport to selected markers during playback
Space|SpaceClipEditor.lock_time_cursor -> lock_time_cursor:    boolean    Lock curves view to time cursor during playback and tracking
Space|SpaceClipEditor.mask -> mask:    pointer    Mask displayed and edited in this space
Space|SpaceClipEditor.mask_draw_type -> mask_draw_type:    enum    Draw type for mask splines
Space|SpaceClipEditor.mask_overlay_mode -> mask_overlay_mode:    enum    Overlay mode of rasterized mask
Space|SpaceClipEditor.mode -> mode:    enum    Editing context being displayed
Space|SpaceClipEditor.path_length -> path_length:    int    Length of displaying path, in frames
Space|SpaceClipEditor.pivot_point -> pivot_point:    enum    Pivot center for rotation/scaling
Space|SpaceClipEditor.scopes -> scopes:    pointer, (read-only)    Scopes to visualize movie clip statistics
Space|SpaceClipEditor.show_blue_channel -> show_blue_channel:    boolean    Show blue channel in the frame
Space|SpaceClipEditor.show_bundles -> show_bundles:    boolean    Show projection of 3D markers into footage
Space|SpaceClipEditor.show_disabled -> show_disabled:    boolean    Show disabled tracks from the footage
Space|SpaceClipEditor.show_filters -> show_filters:    boolean    Show filters for graph editor
Space|SpaceClipEditor.show_graph_frames -> show_graph_frames:    boolean    Show curve for per-frame average error (camera motion should be solved first)
Space|SpaceClipEditor.show_graph_hidden -> show_graph_hidden:    boolean    Include channels from objects/bone that aren't visible
Space|SpaceClipEditor.show_graph_only_selected -> show_graph_only_selected:    boolean    Only include channels relating to selected objects and data
Space|SpaceClipEditor.show_graph_tracks_error -> show_graph_tracks_error:    boolean    Display the reprojection error curve for selected tracks
Space|SpaceClipEditor.show_graph_tracks_motion -> show_graph_tracks_motion:    boolean    Display the speed curves (in "x" direction red, in "y" direction green) for the selected tracks
Space|SpaceClipEditor.show_grease_pencil -> show_grease_pencil:    boolean    Show grease pencil for this view
Space|SpaceClipEditor.show_green_channel -> show_green_channel:    boolean    Show green channel in the frame
Space|SpaceClipEditor.show_grid -> show_grid:    boolean    Show grid showing lens distortion
Space|SpaceClipEditor.show_marker_pattern -> show_marker_pattern:    boolean    Show pattern boundbox for markers
Space|SpaceClipEditor.show_marker_search -> show_marker_search:    boolean    Show search boundbox for markers
Space|SpaceClipEditor.show_mask_overlay -> show_mask_overlay:    boolean    
Space|SpaceClipEditor.show_mask_smooth -> show_mask_smooth:    boolean    
Space|SpaceClipEditor.show_names -> show_names:    boolean    Show track names and status
Space|SpaceClipEditor.show_red_channel -> show_red_channel:    boolean    Show red channel in the frame
Space|SpaceClipEditor.show_seconds -> show_seconds:    boolean    Show timing in seconds not frames
Space|SpaceClipEditor.show_stable -> show_stable:    boolean    Show stable footage in editor (if stabilization is enabled)
Space|SpaceClipEditor.show_tiny_markers -> show_tiny_markers:    boolean    Show markers in a more compact manner
Space|SpaceClipEditor.show_track_path -> show_track_path:    boolean    Show path of how track moves
Space|SpaceClipEditor.use_grayscale_preview -> use_grayscale_preview:    boolean    Display frame in grayscale mode
Space|SpaceClipEditor.use_manual_calibration -> use_manual_calibration:    boolean    Use manual calibration helpers
Space|SpaceClipEditor.use_mute_footage -> use_mute_footage:    boolean    Mute footage and show black background instead
Space|SpaceClipEditor.view -> view:    enum    Type of the clip editor view
Space|SpaceConsole.font_size -> font_size:    int    Font size to use for displaying the text
Space|SpaceConsole.history -> history:    collection, (read-only)    Command history
Space|SpaceConsole.language -> language:    string    Command line prompt language
Space|SpaceConsole.prompt -> prompt:    string    Command line prompt
Space|SpaceConsole.scrollback -> scrollback:    collection, (read-only)    Command output
Space|SpaceConsole.select_end -> select_end:    int    
Space|SpaceConsole.select_start -> select_start:    int    
Space|SpaceDopeSheetEditor.action -> action:    pointer    Action displayed and edited in this space
Space|SpaceDopeSheetEditor.auto_snap -> auto_snap:    enum    Automatic time snapping settings for transformations
Space|SpaceDopeSheetEditor.dopesheet -> dopesheet:    pointer, (read-only)    Settings for filtering animation data
Space|SpaceDopeSheetEditor.mode -> mode:    enum    Editing context being displayed
Space|SpaceDopeSheetEditor.show_frame_indicator -> show_frame_indicator:    boolean    Show frame number beside the current frame indicator line
Space|SpaceDopeSheetEditor.show_group_colors -> show_group_colors:    boolean    Draw groups and channels with colors matching their corresponding groups
Space|SpaceDopeSheetEditor.show_pose_markers -> show_pose_markers:    boolean    Show markers belonging to the active action instead of Scene markers (Action and Shape Key Editors only)
Space|SpaceDopeSheetEditor.show_seconds -> show_seconds:    boolean    Show timing in seconds not frames
Space|SpaceDopeSheetEditor.show_sliders -> show_sliders:    boolean    Show sliders beside F-Curve channels
Space|SpaceDopeSheetEditor.use_auto_merge_keyframes -> use_auto_merge_keyframes:    boolean    Automatically merge nearby keyframes
Space|SpaceDopeSheetEditor.use_marker_sync -> use_marker_sync:    boolean    Sync Markers with keyframe edits
Space|SpaceDopeSheetEditor.use_realtime_update -> use_realtime_update:    boolean    When transforming keyframes, changes to the animation data are flushed to other views
Space|SpaceFileBrowser.active_operator -> active_operator:    pointer, (read-only)    
Space|SpaceFileBrowser.operator -> operator:    pointer, (read-only)    
Space|SpaceFileBrowser.params -> params:    pointer, (read-only)    Parameters and Settings for the Filebrowser
Space|SpaceGraphEditor.auto_snap -> auto_snap:    enum    Automatic time snapping settings for transformations
Space|SpaceGraphEditor.cursor_position_y -> cursor_position_y:    float    Graph Editor 2D-Value cursor - Y-Value component
Space|SpaceGraphEditor.dopesheet -> dopesheet:    pointer, (read-only)    Settings for filtering animation data
Space|SpaceGraphEditor.has_ghost_curves -> has_ghost_curves:    boolean    Graph Editor instance has some ghost curves stored
Space|SpaceGraphEditor.mode -> mode:    enum    Editing context being displayed
Space|SpaceGraphEditor.pivot_point -> pivot_point:    enum    Pivot center for rotation/scaling
Space|SpaceGraphEditor.show_cursor -> show_cursor:    boolean    Show 2D cursor
Space|SpaceGraphEditor.show_frame_indicator -> show_frame_indicator:    boolean    Show frame number beside the current frame indicator line
Space|SpaceGraphEditor.show_group_colors -> show_group_colors:    boolean    Draw groups and channels with colors matching their corresponding groups
Space|SpaceGraphEditor.show_handles -> show_handles:    boolean    Show handles of Bezier control points
Space|SpaceGraphEditor.show_seconds -> show_seconds:    boolean    Show timing in seconds not frames
Space|SpaceGraphEditor.show_sliders -> show_sliders:    boolean    Show sliders beside F-Curve channels
Space|SpaceGraphEditor.use_auto_merge_keyframes -> use_auto_merge_keyframes:    boolean    Automatically merge nearby keyframes
Space|SpaceGraphEditor.use_auto_normalization -> use_auto_normalization:    boolean    Automatically recalculate curve normalization on every curve edit
Space|SpaceGraphEditor.use_beauty_drawing -> use_beauty_drawing:    boolean    Draw F-Curves using Anti-Aliasing and other fancy effects (disable for better performance)
Space|SpaceGraphEditor.use_normalization -> use_normalization:    boolean    Display curves in normalized to -1..1 range, for easier editing of multiple curves with different ranges
Space|SpaceGraphEditor.use_only_selected_curves_handles -> use_only_selected_curves_handles:    boolean    Only keyframes of selected F-Curves are visible and editable
Space|SpaceGraphEditor.use_only_selected_keyframe_handles -> use_only_selected_keyframe_handles:    boolean    Only show and edit handles of selected keyframes
Space|SpaceGraphEditor.use_realtime_update -> use_realtime_update:    boolean    When transforming keyframes, changes to the animation data are flushed to other views
Space|SpaceImageEditor.cursor_location -> cursor_location:    float[2]    2D cursor location for this view
Space|SpaceImageEditor.draw_channels -> draw_channels:    enum    Channels of the image to draw
Space|SpaceImageEditor.grease_pencil -> grease_pencil:    pointer    Grease pencil data for this space
Space|SpaceImageEditor.image -> image:    pointer    Image displayed and edited in this space
Space|SpaceImageEditor.image_user -> image_user:    pointer, (read-only)    Parameters defining which layer, pass and frame of the image is displayed
Space|SpaceImageEditor.mask -> mask:    pointer    Mask displayed and edited in this space
Space|SpaceImageEditor.mask_draw_type -> mask_draw_type:    enum    Draw type for mask splines
Space|SpaceImageEditor.mask_overlay_mode -> mask_overlay_mode:    enum    Overlay mode of rasterized mask
Space|SpaceImageEditor.mode -> mode:    enum    Editing context being displayed
Space|SpaceImageEditor.pivot_point -> pivot_point:    enum    Rotation/Scaling Pivot
Space|SpaceImageEditor.sample_histogram -> sample_histogram:    pointer, (read-only)    Sampled colors along line
Space|SpaceImageEditor.scopes -> scopes:    pointer, (read-only)    Scopes to visualize image statistics
Space|SpaceImageEditor.show_grease_pencil -> show_grease_pencil:    boolean    Show grease pencil for this view
Space|SpaceImageEditor.show_mask_overlay -> show_mask_overlay:    boolean    
Space|SpaceImageEditor.show_mask_smooth -> show_mask_smooth:    boolean    
Space|SpaceImageEditor.show_maskedit -> show_maskedit:    boolean, (read-only)    Show Mask editing related properties
Space|SpaceImageEditor.show_paint -> show_paint:    boolean, (read-only)    Show paint related properties
Space|SpaceImageEditor.show_render -> show_render:    boolean, (read-only)    Show render related properties
Space|SpaceImageEditor.show_repeat -> show_repeat:    boolean    Draw the image repeated outside of the main view
Space|SpaceImageEditor.show_uvedit -> show_uvedit:    boolean, (read-only)    Show UV editing related properties
Space|SpaceImageEditor.use_image_pin -> use_image_pin:    boolean    Display current image regardless of object selection
Space|SpaceImageEditor.use_realtime_update -> use_realtime_update:    boolean    Update other affected window spaces automatically to reflect changes during interactive operations such as transform
Space|SpaceImageEditor.uv_editor -> uv_editor:    pointer, (read-only)    UV editor settings
Space|SpaceImageEditor.zoom -> zoom:    float[2], (read-only)    Zoom factor
Space|SpaceInfo.show_report_debug -> show_report_debug:    boolean    Display debug reporting info
Space|SpaceInfo.show_report_error -> show_report_error:    boolean    Display error text
Space|SpaceInfo.show_report_info -> show_report_info:    boolean    Display general information
Space|SpaceInfo.show_report_operator -> show_report_operator:    boolean    Display the operator log
Space|SpaceInfo.show_report_warning -> show_report_warning:    boolean    Display warnings
Space|SpaceLogicEditor.show_actuators_active_object -> show_actuators_active_object:    boolean    Show actuators of active object
Space|SpaceLogicEditor.show_actuators_active_states -> show_actuators_active_states:    boolean    Show only actuators connected to active states
Space|SpaceLogicEditor.show_actuators_linked_controller -> show_actuators_linked_controller:    boolean    Show linked objects to the actuator
Space|SpaceLogicEditor.show_actuators_selected_objects -> show_actuators_selected_objects:    boolean    Show actuators of all selected objects
Space|SpaceLogicEditor.show_controllers_active_object -> show_controllers_active_object:    boolean    Show controllers of active object
Space|SpaceLogicEditor.show_controllers_linked_controller -> show_controllers_linked_controller:    boolean    Show linked objects to sensor/actuator
Space|SpaceLogicEditor.show_controllers_selected_objects -> show_controllers_selected_objects:    boolean    Show controllers of all selected objects
Space|SpaceLogicEditor.show_sensors_active_object -> show_sensors_active_object:    boolean    Show sensors of active object
Space|SpaceLogicEditor.show_sensors_active_states -> show_sensors_active_states:    boolean    Show only sensors connected to active states
Space|SpaceLogicEditor.show_sensors_linked_controller -> show_sensors_linked_controller:    boolean    Show linked objects to the controller
Space|SpaceLogicEditor.show_sensors_selected_objects -> show_sensors_selected_objects:    boolean    Show sensors of all selected objects
Space|SpaceNLA.auto_snap -> auto_snap:    enum    Automatic time snapping settings for transformations
Space|SpaceNLA.dopesheet -> dopesheet:    pointer, (read-only)    Settings for filtering animation data
Space|SpaceNLA.show_frame_indicator -> show_frame_indicator:    boolean    Show frame number beside the current frame indicator line
Space|SpaceNLA.show_seconds -> show_seconds:    boolean    Show timing in seconds not frames
Space|SpaceNLA.show_strip_curves -> show_strip_curves:    boolean    Show influence F-Curves on strips
Space|SpaceNLA.use_realtime_update -> use_realtime_update:    boolean    When transforming strips, changes to the animation data are flushed to other views
Space|SpaceNodeEditor.backdrop_channels -> backdrop_channels:    enum    Channels of the image to draw
Space|SpaceNodeEditor.backdrop_x -> backdrop_x:    float    Backdrop X offset
Space|SpaceNodeEditor.backdrop_y -> backdrop_y:    float    Backdrop Y offset
Space|SpaceNodeEditor.backdrop_zoom -> backdrop_zoom:    float    Backdrop zoom factor
Space|SpaceNodeEditor.cursor_location -> cursor_location:    float[2]    Location for adding new nodes
Space|SpaceNodeEditor.edit_tree -> edit_tree:    pointer, (read-only)    Node tree being displayed and edited
Space|SpaceNodeEditor.id -> id:    pointer, (read-only)    Datablock whose nodes are being edited
Space|SpaceNodeEditor.id_from -> id_from:    pointer, (read-only)    Datablock from which the edited datablock is linked
Space|SpaceNodeEditor.node_tree -> node_tree:    pointer    Base node tree from context
Space|SpaceNodeEditor.path -> path:    collection, (read-only)    Path from the data block to the currently edited node tree
Space|SpaceNodeEditor.pin -> pin:    boolean    Use the pinned node tree
Space|SpaceNodeEditor.shader_type -> shader_type:    enum    Type of data to take shader from
Space|SpaceNodeEditor.show_backdrop -> show_backdrop:    boolean    Use active Viewer Node output as backdrop for compositing nodes
Space|SpaceNodeEditor.show_grease_pencil -> show_grease_pencil:    boolean    Show grease pencil for this view
Space|SpaceNodeEditor.show_highlight -> show_highlight:    boolean    Highlight nodes that are being calculated
Space|SpaceNodeEditor.texture_type -> texture_type:    enum    Type of data to take texture from
Space|SpaceNodeEditor.tree_type -> tree_type:    enum    Node tree type to display and edit
Space|SpaceNodeEditor.use_auto_render -> use_auto_render:    boolean    Re-render and composite changed layers on 3D edits
Space|SpaceOutliner.display_mode -> display_mode:    enum    Type of information to display
Space|SpaceOutliner.filter_text -> filter_text:    string    Live search filtering string
Space|SpaceOutliner.show_restrict_columns -> show_restrict_columns:    boolean    Show column
Space|SpaceOutliner.use_filter_case_sensitive -> use_filter_case_sensitive:    boolean    Only use case sensitive matches of search string
Space|SpaceOutliner.use_filter_complete -> use_filter_complete:    boolean    Only use complete matches of search string
Space|SpaceProperties.align -> align:    enum    Arrangement of the panels
Space|SpaceProperties.context -> context:    enum    Type of active data to display and edit
Space|SpaceProperties.pin_id -> pin_id:    pointer    
Space|SpaceProperties.texture_context -> texture_context:    enum    Type of texture data to display and edit
Space|SpaceProperties.use_limited_texture_context -> use_limited_texture_context:    boolean    Use the limited version of texture user (for 'old shading' mode)
Space|SpaceProperties.use_pin_id -> use_pin_id:    boolean    Use the pinned context
Space|SpaceSequenceEditor.display_channel -> display_channel:    int    The channel number shown in the image preview. 0 is the result of all strips combined
Space|SpaceSequenceEditor.display_mode -> display_mode:    enum    View mode to use for displaying sequencer output
Space|SpaceSequenceEditor.draw_overexposed -> draw_overexposed:    int    Show overexposed areas with zebra stripes
Space|SpaceSequenceEditor.grease_pencil -> grease_pencil:    pointer    Grease pencil data for this space
Space|SpaceSequenceEditor.overlay_type -> overlay_type:    enum    Overlay draw type
Space|SpaceSequenceEditor.preview_channels -> preview_channels:    enum    Channels of the preview to draw
Space|SpaceSequenceEditor.proxy_render_size -> proxy_render_size:    enum    Draw preview using full resolution or different proxy resolutions
Space|SpaceSequenceEditor.show_frame_indicator -> show_frame_indicator:    boolean    Show frame number beside the current frame indicator line
Space|SpaceSequenceEditor.show_frames -> show_frames:    boolean    Draw frames rather than seconds
Space|SpaceSequenceEditor.show_grease_pencil -> show_grease_pencil:    boolean    Show grease pencil for this view
Space|SpaceSequenceEditor.show_safe_margin -> show_safe_margin:    boolean    Draw title safe margins in preview
Space|SpaceSequenceEditor.show_seconds -> show_seconds:    boolean    Show timing in seconds not frames
Space|SpaceSequenceEditor.show_separate_color -> show_separate_color:    boolean    Separate color channels in preview
Space|SpaceSequenceEditor.use_marker_sync -> use_marker_sync:    boolean    Transform markers as well as strips
Space|SpaceSequenceEditor.view_type -> view_type:    enum    Type of the Sequencer view (sequencer, preview or both)
Space|SpaceTextEditor.find_text -> find_text:    string    Text to search for with the find tool
Space|SpaceTextEditor.font_size -> font_size:    int    Font size to use for displaying the text
Space|SpaceTextEditor.margin_column -> margin_column:    int    Column number to show right margin at
Space|SpaceTextEditor.replace_text -> replace_text:    string    Text to replace selected text with using the replace tool
Space|SpaceTextEditor.show_line_highlight -> show_line_highlight:    boolean    Highlight the current line
Space|SpaceTextEditor.show_line_numbers -> show_line_numbers:    boolean    Show line numbers next to the text
Space|SpaceTextEditor.show_margin -> show_margin:    boolean    Show right margin
Space|SpaceTextEditor.show_syntax_highlight -> show_syntax_highlight:    boolean    Syntax highlight for scripting
Space|SpaceTextEditor.show_word_wrap -> show_word_wrap:    boolean    Wrap words if there is not enough horizontal space
Space|SpaceTextEditor.tab_width -> tab_width:    int    Number of spaces to display tabs with
Space|SpaceTextEditor.text -> text:    pointer    Text displayed and edited in this space
Space|SpaceTextEditor.top -> top:    int, (read-only)    Top line visible
Space|SpaceTextEditor.use_find_all -> use_find_all:    boolean    Search in all text datablocks, instead of only the active one
Space|SpaceTextEditor.use_find_wrap -> use_find_wrap:    boolean    Search again from the start of the file when reaching the end
Space|SpaceTextEditor.use_live_edit -> use_live_edit:    boolean    Run python while editing
Space|SpaceTextEditor.use_match_case -> use_match_case:    boolean    Search string is sensitive to uppercase and lowercase letters
Space|SpaceTextEditor.use_overwrite -> use_overwrite:    boolean    Overwrite characters when typing rather than inserting them
Space|SpaceTextEditor.visible_lines -> visible_lines:    int, (read-only)    Amount of lines that can be visible in current editor
Space|SpaceTimeline.cache_cloth -> cache_cloth:    boolean    Show the active object's cloth point cache
Space|SpaceTimeline.cache_dynamicpaint -> cache_dynamicpaint:    boolean    Show the active object's Dynamic Paint cache
Space|SpaceTimeline.cache_particles -> cache_particles:    boolean    Show the active object's particle point cache
Space|SpaceTimeline.cache_rigidbody -> cache_rigidbody:    boolean    Show the active object's Rigid Body cache
Space|SpaceTimeline.cache_smoke -> cache_smoke:    boolean    Show the active object's smoke cache
Space|SpaceTimeline.cache_softbody -> cache_softbody:    boolean    Show the active object's softbody point cache
Space|SpaceTimeline.show_cache -> show_cache:    boolean    Show the status of cached frames in the timeline
Space|SpaceTimeline.show_frame_indicator -> show_frame_indicator:    boolean    Show frame number beside the current frame indicator line
Space|SpaceTimeline.show_only_selected -> show_only_selected:    boolean    Show keyframes for active Object and/or its selected bones only
Space|SpaceTimeline.show_seconds -> show_seconds:    boolean    Show timing in seconds not frames
Space|SpaceUserPreferences.filter_text -> filter_text:    string    Search term for filtering in the UI
Space|SpaceUserPreferences.filter_type -> filter_type:    enum    Filter method
Space|SpaceView3D.background_images -> background_images:    collection, (read-only)    List of background images
Space|SpaceView3D.camera -> camera:    pointer    Active camera used in this view (when unlocked from the scene's active camera)
Space|SpaceView3D.clip_end -> clip_end:    float    3D View far clipping distance
Space|SpaceView3D.clip_start -> clip_start:    float    3D View near clipping distance (perspective view only)
Space|SpaceView3D.current_orientation -> current_orientation:    pointer, (read-only)    Current transformation orientation
Space|SpaceView3D.cursor_location -> cursor_location:    float[3]    3D cursor location for this view (dependent on local view setting)
Space|SpaceView3D.grid_lines -> grid_lines:    int    Number of grid lines to display in perspective view
Space|SpaceView3D.grid_scale -> grid_scale:    float    Distance between 3D View grid lines
Space|SpaceView3D.grid_scale_unit -> grid_scale_unit:    float, (read-only)    Grid cell size scaled by scene unit system settings
Space|SpaceView3D.grid_subdivisions -> grid_subdivisions:    int    Number of subdivisions between grid lines
Space|SpaceView3D.layers -> layers:    boolean[20]    Layers visible in this 3D View
Space|SpaceView3D.layers_local_view -> layers_local_view:    boolean[8], (read-only)    Local view layers visible in this 3D View
Space|SpaceView3D.layers_used -> layers_used:    boolean[20], (read-only)    Layers that contain something
Space|SpaceView3D.lens -> lens:    float    Viewport lens angle
Space|SpaceView3D.local_view -> local_view:    pointer, (read-only)    Display an isolated sub-set of objects, apart from the scene visibility
Space|SpaceView3D.lock_bone -> lock_bone:    string    3D View center is locked to this bone's position
Space|SpaceView3D.lock_camera -> lock_camera:    boolean    Enable view navigation within the camera view
Space|SpaceView3D.lock_camera_and_layers -> lock_camera_and_layers:    boolean    Use the scene's active camera and layers in this view, rather than local layers
Space|SpaceView3D.lock_cursor -> lock_cursor:    boolean    3D View center is locked to the cursor's position
Space|SpaceView3D.lock_object -> lock_object:    pointer    3D View center is locked to this object's position
Space|SpaceView3D.matcap_icon -> matcap_icon:    enum    Image to use for Material Capture, active objects only
Space|SpaceView3D.pivot_point -> pivot_point:    enum    Pivot center for rotation/scaling
Space|SpaceView3D.region_3d -> region_3d:    pointer, (read-only)    3D region in this space, in case of quad view the camera region
Space|SpaceView3D.region_quadview -> region_quadview:    pointer, (read-only)    3D region that defines the quad view settings
Space|SpaceView3D.render_border_max_x -> render_border_max_x:    float    Maximum X value for the render border
Space|SpaceView3D.render_border_max_y -> render_border_max_y:    float    Maximum Y value for the render border
Space|SpaceView3D.render_border_min_x -> render_border_min_x:    float    Minimum X value to for the render border
Space|SpaceView3D.render_border_min_y -> render_border_min_y:    float    Minimum Y value for the render border
Space|SpaceView3D.show_all_objects_origin -> show_all_objects_origin:    boolean    Show the object origin center dot for all (selected and unselected) objects
Space|SpaceView3D.show_axis_x -> show_axis_x:    boolean    Show the X axis line in perspective view
Space|SpaceView3D.show_axis_y -> show_axis_y:    boolean    Show the Y axis line in perspective view
Space|SpaceView3D.show_axis_z -> show_axis_z:    boolean    Show the Z axis line in perspective view
Space|SpaceView3D.show_backface_culling -> show_backface_culling:    boolean    Use back face culling to hide the back side of faces
Space|SpaceView3D.show_background_images -> show_background_images:    boolean    Display reference images behind objects in the 3D View
Space|SpaceView3D.show_bundle_names -> show_bundle_names:    boolean    Show names for reconstructed tracks objects
Space|SpaceView3D.show_camera_path -> show_camera_path:    boolean    Show reconstructed camera path
Space|SpaceView3D.show_floor -> show_floor:    boolean    Show the ground plane grid in perspective view
Space|SpaceView3D.show_grease_pencil -> show_grease_pencil:    boolean    Show grease pencil for this view
Space|SpaceView3D.show_manipulator -> show_manipulator:    boolean    Use a 3D manipulator widget for controlling transforms
Space|SpaceView3D.show_occlude_wire -> show_occlude_wire:    boolean    Use hidden wireframe display
Space|SpaceView3D.show_only_render -> show_only_render:    boolean    Display only objects which will be rendered
Space|SpaceView3D.show_outline_selected -> show_outline_selected:    boolean    Show an outline highlight around selected objects in non-wireframe views
Space|SpaceView3D.show_reconstruction -> show_reconstruction:    boolean    Display reconstruction data from active movie clip
Space|SpaceView3D.show_relationship_lines -> show_relationship_lines:    boolean    Show dashed lines indicating parent or constraint relationships
Space|SpaceView3D.show_textured_shadeless -> show_textured_shadeless:    boolean    Show shadeless texture without lighting in textured draw mode
Space|SpaceView3D.show_textured_solid -> show_textured_solid:    boolean    Display face-assigned textures in solid view
Space|SpaceView3D.tracks_draw_size -> tracks_draw_size:    float    Display size of tracks from reconstructed data
Space|SpaceView3D.tracks_draw_type -> tracks_draw_type:    enum    Viewport display style for tracks
Space|SpaceView3D.transform_manipulators -> transform_manipulators:    enum    Transformation manipulators
Space|SpaceView3D.transform_orientation -> transform_orientation:    enum    Transformation orientation
Space|SpaceView3D.use_matcap -> use_matcap:    boolean    Active Objects draw images mapped on normals, enhancing Solid Draw Mode
Space|SpaceView3D.use_occlude_geometry -> use_occlude_geometry:    boolean    Limit selection to visible (clipped with depth buffer)
Space|SpaceView3D.use_pivot_point_align -> use_pivot_point_align:    boolean    Manipulate center points (object and pose mode only)
Space|SpaceView3D.use_render_border -> use_render_border:    boolean    Use a region within the frame size for rendered viewport (when not viewing through the camera)
Space|SpaceView3D.viewport_shade -> viewport_shade:    enum    Method to display/shade objects in the 3D View
Spline.bezier_points -> bezier_points:    collection, (read-only)    Collection of points for Bezier curves only
Spline.character_index -> character_index:    int, (read-only)    Location of this character in the text data (only for text curves)
Spline.hide -> hide:    boolean    Hide this curve in Edit mode
Spline.material_index -> material_index:    int    
Spline.order_u -> order_u:    int    NURBS order in the U direction (for splines and surfaces, higher values let points influence a greater area)
Spline.order_v -> order_v:    int    NURBS order in the V direction (for surfaces only, higher values let points influence a greater area)
Spline.point_count_u -> point_count_u:    int, (read-only)    Total number points for the curve or surface in the U direction
Spline.point_count_v -> point_count_v:    int, (read-only)    Total number points for the surface on the V direction
Spline.points -> points:    collection, (read-only)    Collection of points that make up this poly or nurbs spline
Spline.radius_interpolation -> radius_interpolation:    enum    The type of radius interpolation for Bezier curves
Spline.resolution_u -> resolution_u:    int    Curve or Surface subdivisions per segment
Spline.resolution_v -> resolution_v:    int    Surface subdivisions per segment
Spline.tilt_interpolation -> tilt_interpolation:    enum    The type of tilt interpolation for 3D, Bezier curves
Spline.type -> type:    enum    The interpolation type for this curve element
Spline.use_bezier_u -> use_bezier_u:    boolean    Make this nurbs curve or surface act like a Bezier spline in the U direction (Order U must be 3 or 4, Cyclic U must be disabled)
Spline.use_bezier_v -> use_bezier_v:    boolean    Make this nurbs surface act like a Bezier spline in the V direction (Order V must be 3 or 4, Cyclic V must be disabled)
Spline.use_cyclic_u -> use_cyclic_u:    boolean    Make this curve or surface a closed loop in the U direction
Spline.use_cyclic_v -> use_cyclic_v:    boolean    Make this surface a closed loop in the V direction
Spline.use_endpoint_u -> use_endpoint_u:    boolean    Make this nurbs curve or surface meet the endpoints in the U direction (Cyclic U must be disabled)
Spline.use_endpoint_v -> use_endpoint_v:    boolean    Make this nurbs surface meet the endpoints in the V direction (Cyclic V must be disabled)
Spline.use_smooth -> use_smooth:    boolean    Smooth the normals of the surface or beveled curve
SplinePoint.co -> co:    float[4]    Point coordinates
SplinePoint.hide -> hide:    boolean    Visibility status
SplinePoint.radius -> radius:    float    Radius for beveling
SplinePoint.select -> select:    boolean    Selection status
SplinePoint.tilt -> tilt:    float    Tilt in 3D View
SplinePoint.weight -> weight:    float    NURBS weight
SplinePoint.weight_softbody -> weight_softbody:    float    Softbody goal weight
Struct.base -> base:    pointer, (read-only)    Struct definition this is derived from
Struct.description -> description:    string, (read-only)    Description of the Struct's purpose
Struct.functions -> functions:    collection, (read-only)    
Struct.identifier -> identifier:    string, (read-only)    Unique name used in the code and scripting
Struct.name -> name:    string, (read-only)    Human readable name
Struct.name_property -> name_property:    pointer, (read-only)    Property that gives the name of the struct
Struct.nested -> nested:    pointer, (read-only)    Struct in which this struct is always nested, and to which it logically belongs
Struct.properties -> properties:    collection, (read-only)    Properties in the struct
Struct.translation_context -> translation_context:    string, (read-only)    Translation context of the struct's name
TessfaceUVTextures.active -> active:    pointer, (read-only)    Active UV Map
TessfaceUVTextures.active_index -> active_index:    int    Active UV Map index
TexMapping.mapping -> mapping:    enum    
TexMapping.mapping_x -> mapping_x:    enum    
TexMapping.mapping_y -> mapping_y:    enum    
TexMapping.mapping_z -> mapping_z:    enum    
TexMapping.max -> max:    float[3]    Maximum value for clipping
TexMapping.min -> min:    float[3]    Minimum value for clipping
TexMapping.rotation -> rotation:    float[3]    
TexMapping.scale -> scale:    float[3]    
TexMapping.translation -> translation:    float[3]    
TexMapping.use_max -> use_max:    boolean    Whether to use maximum clipping value
TexMapping.use_min -> use_min:    boolean    Whether to use minimum clipping value
TexMapping.vector_type -> vector_type:    enum    Type of vector that the mapping transforms
TextBox.height -> height:    float    
TextBox.width -> width:    float    
TextBox.x -> x:    float    
TextBox.y -> y:    float    
TextCharacterFormat.use_bold -> use_bold:    boolean    
TextCharacterFormat.use_italic -> use_italic:    boolean    
TextCharacterFormat.use_small_caps -> use_small_caps:    boolean    
TextCharacterFormat.use_underline -> use_underline:    boolean    
TextLine.body -> body:    string    Text in the line
TextureSlot.blend_type -> blend_type:    enum    Mode used to apply the texture
TextureSlot.color -> color:    float[3]    Default color for textures that don't return RGB or when RGB to intensity is enabled
TextureSlot.default_value -> default_value:    float    Value to use for Ref, Spec, Amb, Emit, Alpha, RayMir, TransLu and Hard
TextureSlot.invert -> invert:    boolean    Invert the values of the texture to reverse its effect
TextureSlot.name -> name:    string, (read-only)    Texture slot name
TextureSlot.offset -> offset:    float[3]    Fine tune of the texture mapping X, Y and Z locations
TextureSlot.output_node -> output_node:    enum    Which output node to use, for node-based textures
TextureSlot.scale -> scale:    float[3]    Set scaling for the texture's X, Y and Z sizes
TextureSlot.texture -> texture:    pointer    Texture datablock used by this texture slot
TextureSlot.use_rgb_to_intensity -> use_rgb_to_intensity:    boolean    Convert texture RGB values to intensity (gray) values
TextureSlot.use_stencil -> use_stencil:    boolean    Use this texture as a blending value on the next texture
TextureSlot|BrushTextureSlot.angle -> angle:    float    Brush texture rotation
TextureSlot|BrushTextureSlot.map_mode -> map_mode:    enum    
TextureSlot|BrushTextureSlot.mask_map_mode -> mask_map_mode:    enum    
TextureSlot|BrushTextureSlot.tex_paint_map_mode -> tex_paint_map_mode:    enum    
TextureSlot|LampTextureSlot.color_factor -> color_factor:    float    Amount texture affects color values
TextureSlot|LampTextureSlot.object -> object:    pointer    Object to use for mapping with Object texture coordinates
TextureSlot|LampTextureSlot.shadow_factor -> shadow_factor:    float    Amount texture affects shadow
TextureSlot|LampTextureSlot.texture_coords -> texture_coords:    enum    
TextureSlot|LampTextureSlot.use_map_color -> use_map_color:    boolean    Let the texture affect the basic color of the lamp
TextureSlot|LampTextureSlot.use_map_shadow -> use_map_shadow:    boolean    Let the texture affect the shadow color of the lamp
TextureSlot|MaterialTextureSlot.alpha_factor -> alpha_factor:    float    Amount texture affects alpha
TextureSlot|MaterialTextureSlot.ambient_factor -> ambient_factor:    float    Amount texture affects ambient
TextureSlot|MaterialTextureSlot.bump_method -> bump_method:    enum    Method to use for bump mapping
TextureSlot|MaterialTextureSlot.bump_objectspace -> bump_objectspace:    enum    Space to apply bump mapping in
TextureSlot|MaterialTextureSlot.density_factor -> density_factor:    float    Amount texture affects density
TextureSlot|MaterialTextureSlot.diffuse_color_factor -> diffuse_color_factor:    float    Amount texture affects diffuse color
TextureSlot|MaterialTextureSlot.diffuse_factor -> diffuse_factor:    float    Amount texture affects diffuse reflectivity
TextureSlot|MaterialTextureSlot.displacement_factor -> displacement_factor:    float    Amount texture displaces the surface
TextureSlot|MaterialTextureSlot.emission_color_factor -> emission_color_factor:    float    Amount texture affects emission color
TextureSlot|MaterialTextureSlot.emission_factor -> emission_factor:    float    Amount texture affects emission
TextureSlot|MaterialTextureSlot.emit_factor -> emit_factor:    float    Amount texture affects emission
TextureSlot|MaterialTextureSlot.hardness_factor -> hardness_factor:    float    Amount texture affects hardness
TextureSlot|MaterialTextureSlot.mapping -> mapping:    enum    
TextureSlot|MaterialTextureSlot.mapping_x -> mapping_x:    enum    
TextureSlot|MaterialTextureSlot.mapping_y -> mapping_y:    enum    
TextureSlot|MaterialTextureSlot.mapping_z -> mapping_z:    enum    
TextureSlot|MaterialTextureSlot.mirror_factor -> mirror_factor:    float    Amount texture affects mirror color
TextureSlot|MaterialTextureSlot.normal_factor -> normal_factor:    float    Amount texture affects normal values
TextureSlot|MaterialTextureSlot.normal_map_space -> normal_map_space:    enum    Set space of normal map image
TextureSlot|MaterialTextureSlot.object -> object:    pointer    Object to use for mapping with Object texture coordinates
TextureSlot|MaterialTextureSlot.raymir_factor -> raymir_factor:    float    Amount texture affects ray mirror
TextureSlot|MaterialTextureSlot.reflection_color_factor -> reflection_color_factor:    float    Amount texture affects color of out-scattered light
TextureSlot|MaterialTextureSlot.reflection_factor -> reflection_factor:    float    Amount texture affects brightness of out-scattered light
TextureSlot|MaterialTextureSlot.scattering_factor -> scattering_factor:    float    Amount texture affects scattering
TextureSlot|MaterialTextureSlot.specular_color_factor -> specular_color_factor:    float    Amount texture affects specular color
TextureSlot|MaterialTextureSlot.specular_factor -> specular_factor:    float    Amount texture affects specular reflectivity
TextureSlot|MaterialTextureSlot.texture_coords -> texture_coords:    enum    
TextureSlot|MaterialTextureSlot.translucency_factor -> translucency_factor:    float    Amount texture affects translucency
TextureSlot|MaterialTextureSlot.transmission_color_factor -> transmission_color_factor:    float    Amount texture affects result color after light has been scattered/absorbed
TextureSlot|MaterialTextureSlot.use -> use:    boolean    Enable this material texture slot
TextureSlot|MaterialTextureSlot.use_from_dupli -> use_from_dupli:    boolean    Dupli's instanced from verts, faces or particles, inherit texture coordinate from their parent
TextureSlot|MaterialTextureSlot.use_from_original -> use_from_original:    boolean    Dupli's derive their object coordinates from the original object's transformation
TextureSlot|MaterialTextureSlot.use_map_alpha -> use_map_alpha:    boolean    The texture affects the alpha value
TextureSlot|MaterialTextureSlot.use_map_ambient -> use_map_ambient:    boolean    The texture affects the value of ambient
TextureSlot|MaterialTextureSlot.use_map_color_diffuse -> use_map_color_diffuse:    boolean    The texture affects basic color of the material
TextureSlot|MaterialTextureSlot.use_map_color_emission -> use_map_color_emission:    boolean    The texture affects the color of emission
TextureSlot|MaterialTextureSlot.use_map_color_reflection -> use_map_color_reflection:    boolean    The texture affects the color of scattered light
TextureSlot|MaterialTextureSlot.use_map_color_spec -> use_map_color_spec:    boolean    The texture affects the specularity color
TextureSlot|MaterialTextureSlot.use_map_color_transmission -> use_map_color_transmission:    boolean    The texture affects the result color after other light has been scattered/absorbed
TextureSlot|MaterialTextureSlot.use_map_density -> use_map_density:    boolean    The texture affects the volume's density
TextureSlot|MaterialTextureSlot.use_map_diffuse -> use_map_diffuse:    boolean    The texture affects the value of diffuse reflectivity
TextureSlot|MaterialTextureSlot.use_map_displacement -> use_map_displacement:    boolean    Let the texture displace the surface
TextureSlot|MaterialTextureSlot.use_map_emission -> use_map_emission:    boolean    The texture affects the volume's emission
TextureSlot|MaterialTextureSlot.use_map_emit -> use_map_emit:    boolean    The texture affects the emit value
TextureSlot|MaterialTextureSlot.use_map_hardness -> use_map_hardness:    boolean    The texture affects the hardness value
TextureSlot|MaterialTextureSlot.use_map_mirror -> use_map_mirror:    boolean    The texture affects the mirror color
TextureSlot|MaterialTextureSlot.use_map_normal -> use_map_normal:    boolean    The texture affects the rendered normal
TextureSlot|MaterialTextureSlot.use_map_raymir -> use_map_raymir:    boolean    The texture affects the ray-mirror value
TextureSlot|MaterialTextureSlot.use_map_reflect -> use_map_reflect:    boolean    The texture affects the reflected light's brightness
TextureSlot|MaterialTextureSlot.use_map_scatter -> use_map_scatter:    boolean    The texture affects the volume's scattering
TextureSlot|MaterialTextureSlot.use_map_specular -> use_map_specular:    boolean    The texture affects the value of specular reflectivity
TextureSlot|MaterialTextureSlot.use_map_to_bounds -> use_map_to_bounds:    boolean    Map coordinates in object bounds
TextureSlot|MaterialTextureSlot.use_map_translucency -> use_map_translucency:    boolean    The texture affects the translucency value
TextureSlot|MaterialTextureSlot.use_map_warp -> use_map_warp:    boolean    Let the texture warp texture coordinates of next channels
TextureSlot|MaterialTextureSlot.uv_layer -> uv_layer:    string    UV map to use for mapping with UV texture coordinates
TextureSlot|MaterialTextureSlot.warp_factor -> warp_factor:    float    Amount texture affects texture coordinates of next channels
TextureSlot|ParticleSettingsTextureSlot.clump_factor -> clump_factor:    float    Amount texture affects child clump
TextureSlot|ParticleSettingsTextureSlot.damp_factor -> damp_factor:    float    Amount texture affects particle damping
TextureSlot|ParticleSettingsTextureSlot.density_factor -> density_factor:    float    Amount texture affects particle density
TextureSlot|ParticleSettingsTextureSlot.field_factor -> field_factor:    float    Amount texture affects particle force fields
TextureSlot|ParticleSettingsTextureSlot.gravity_factor -> gravity_factor:    float    Amount texture affects particle gravity
TextureSlot|ParticleSettingsTextureSlot.kink_factor -> kink_factor:    float    Amount texture affects child kink
TextureSlot|ParticleSettingsTextureSlot.length_factor -> length_factor:    float    Amount texture affects child hair length
TextureSlot|ParticleSettingsTextureSlot.life_factor -> life_factor:    float    Amount texture affects particle life time
TextureSlot|ParticleSettingsTextureSlot.mapping -> mapping:    enum    
TextureSlot|ParticleSettingsTextureSlot.mapping_x -> mapping_x:    enum    
TextureSlot|ParticleSettingsTextureSlot.mapping_y -> mapping_y:    enum    
TextureSlot|ParticleSettingsTextureSlot.mapping_z -> mapping_z:    enum    
TextureSlot|ParticleSettingsTextureSlot.object -> object:    pointer    Object to use for mapping with Object texture coordinates
TextureSlot|ParticleSettingsTextureSlot.rough_factor -> rough_factor:    float    Amount texture affects child roughness
TextureSlot|ParticleSettingsTextureSlot.size_factor -> size_factor:    float    Amount texture affects physical particle size
TextureSlot|ParticleSettingsTextureSlot.texture_coords -> texture_coords:    enum    Texture coordinates used to map the texture onto the background
TextureSlot|ParticleSettingsTextureSlot.time_factor -> time_factor:    float    Amount texture affects particle emission time
TextureSlot|ParticleSettingsTextureSlot.use_map_clump -> use_map_clump:    boolean    Affect the child clumping
TextureSlot|ParticleSettingsTextureSlot.use_map_damp -> use_map_damp:    boolean    Affect the particle velocity damping
TextureSlot|ParticleSettingsTextureSlot.use_map_density -> use_map_density:    boolean    Affect the density of the particles
TextureSlot|ParticleSettingsTextureSlot.use_map_field -> use_map_field:    boolean    Affect the particle force fields
TextureSlot|ParticleSettingsTextureSlot.use_map_gravity -> use_map_gravity:    boolean    Affect the particle gravity
TextureSlot|ParticleSettingsTextureSlot.use_map_kink -> use_map_kink:    boolean    Affect the child kink
TextureSlot|ParticleSettingsTextureSlot.use_map_length -> use_map_length:    boolean    Affect the child hair length
TextureSlot|ParticleSettingsTextureSlot.use_map_life -> use_map_life:    boolean    Affect the life time of the particles
TextureSlot|ParticleSettingsTextureSlot.use_map_rough -> use_map_rough:    boolean    Affect the child rough
TextureSlot|ParticleSettingsTextureSlot.use_map_size -> use_map_size:    boolean    Affect the particle size
TextureSlot|ParticleSettingsTextureSlot.use_map_time -> use_map_time:    boolean    Affect the emission time of the particles
TextureSlot|ParticleSettingsTextureSlot.use_map_velocity -> use_map_velocity:    boolean    Affect the particle initial velocity
TextureSlot|ParticleSettingsTextureSlot.uv_layer -> uv_layer:    string    UV map to use for mapping with UV texture coordinates
TextureSlot|ParticleSettingsTextureSlot.velocity_factor -> velocity_factor:    float    Amount texture affects particle initial velocity
TextureSlot|WorldTextureSlot.blend_factor -> blend_factor:    float    Amount texture affects color progression of the background
TextureSlot|WorldTextureSlot.horizon_factor -> horizon_factor:    float    Amount texture affects color of the horizon
TextureSlot|WorldTextureSlot.object -> object:    pointer    Object to use for mapping with Object texture coordinates
TextureSlot|WorldTextureSlot.texture_coords -> texture_coords:    enum    Texture coordinates used to map the texture onto the background
TextureSlot|WorldTextureSlot.use_map_blend -> use_map_blend:    boolean    Affect the color progression of the background
TextureSlot|WorldTextureSlot.use_map_horizon -> use_map_horizon:    boolean    Affect the color of the horizon
TextureSlot|WorldTextureSlot.use_map_zenith_down -> use_map_zenith_down:    boolean    Affect the color of the zenith below
TextureSlot|WorldTextureSlot.use_map_zenith_up -> use_map_zenith_up:    boolean    Affect the color of the zenith above
TextureSlot|WorldTextureSlot.zenith_down_factor -> zenith_down_factor:    float    Amount texture affects color of the zenith below
TextureSlot|WorldTextureSlot.zenith_up_factor -> zenith_up_factor:    float    Amount texture affects color of the zenith above
Theme.bone_color_sets -> bone_color_sets:    collection, (read-only)    
Theme.clip_editor -> clip_editor:    pointer, (read-only)    
Theme.console -> console:    pointer, (read-only)    
Theme.dopesheet_editor -> dopesheet_editor:    pointer, (read-only)    
Theme.file_browser -> file_browser:    pointer, (read-only)    
Theme.graph_editor -> graph_editor:    pointer, (read-only)    
Theme.image_editor -> image_editor:    pointer, (read-only)    
Theme.info -> info:    pointer, (read-only)    
Theme.logic_editor -> logic_editor:    pointer, (read-only)    
Theme.name -> name:    string    Name of the theme
Theme.nla_editor -> nla_editor:    pointer, (read-only)    
Theme.node_editor -> node_editor:    pointer, (read-only)    
Theme.outliner -> outliner:    pointer, (read-only)    
Theme.properties -> properties:    pointer, (read-only)    
Theme.sequence_editor -> sequence_editor:    pointer, (read-only)    
Theme.text_editor -> text_editor:    pointer, (read-only)    
Theme.theme_area -> theme_area:    enum    
Theme.timeline -> timeline:    pointer, (read-only)    
Theme.user_interface -> user_interface:    pointer, (read-only)    
Theme.user_preferences -> user_preferences:    pointer, (read-only)    
Theme.view_3d -> view_3d:    pointer, (read-only)    
ThemeBoneColorSet.active -> active:    float[3]    Color used for active bones
ThemeBoneColorSet.normal -> normal:    float[3]    Color used for the surface of bones
ThemeBoneColorSet.select -> select:    float[3]    Color used for selected bones
ThemeBoneColorSet.show_colored_constraints -> show_colored_constraints:    boolean    Allow the use of colors indicating constraints/keyed status
ThemeClipEditor.active_marker -> active_marker:    float[3]    Color of active marker
ThemeClipEditor.disabled_marker -> disabled_marker:    float[3]    Color of disabled marker
ThemeClipEditor.frame_current -> frame_current:    float[3]    
ThemeClipEditor.grid -> grid:    float[3]    
ThemeClipEditor.handle_vertex -> handle_vertex:    float[3]    
ThemeClipEditor.handle_vertex_select -> handle_vertex_select:    float[3]    
ThemeClipEditor.handle_vertex_size -> handle_vertex_size:    int    
ThemeClipEditor.locked_marker -> locked_marker:    float[3]    Color of locked marker
ThemeClipEditor.marker -> marker:    float[3]    Color of marker
ThemeClipEditor.marker_outline -> marker_outline:    float[3]    Color of marker's outline
ThemeClipEditor.path_after -> path_after:    float[3]    Color of path after current frame
ThemeClipEditor.path_before -> path_before:    float[3]    Color of path before current frame
ThemeClipEditor.selected_marker -> selected_marker:    float[3]    Color of selected marker
ThemeClipEditor.space -> space:    pointer, (read-only)    Settings for space
ThemeClipEditor.space_list -> space_list:    pointer, (read-only)    Settings for space list
ThemeClipEditor.strips -> strips:    float[3]    
ThemeClipEditor.strips_selected -> strips_selected:    float[3]    
ThemeConsole.cursor -> cursor:    float[3]    
ThemeConsole.line_error -> line_error:    float[3]    
ThemeConsole.line_info -> line_info:    float[3]    
ThemeConsole.line_input -> line_input:    float[3]    
ThemeConsole.line_output -> line_output:    float[3]    
ThemeConsole.select -> select:    float[4]    
ThemeConsole.space -> space:    pointer, (read-only)    Settings for space
ThemeDopeSheet.active_channels_group -> active_channels_group:    float[3]    
ThemeDopeSheet.channel_group -> channel_group:    float[3]    
ThemeDopeSheet.channels -> channels:    float[3]    
ThemeDopeSheet.channels_selected -> channels_selected:    float[3]    
ThemeDopeSheet.dopesheet_channel -> dopesheet_channel:    float[3]    
ThemeDopeSheet.dopesheet_subchannel -> dopesheet_subchannel:    float[3]    
ThemeDopeSheet.frame_current -> frame_current:    float[3]    
ThemeDopeSheet.grid -> grid:    float[3]    
ThemeDopeSheet.long_key -> long_key:    float[3]    
ThemeDopeSheet.long_key_selected -> long_key_selected:    float[3]    
ThemeDopeSheet.space -> space:    pointer, (read-only)    Settings for space
ThemeDopeSheet.space_list -> space_list:    pointer, (read-only)    Settings for space list
ThemeDopeSheet.summary -> summary:    float[4]    Color of summary channel
ThemeDopeSheet.value_sliders -> value_sliders:    float[3]    
ThemeDopeSheet.view_sliders -> view_sliders:    float[3]    
ThemeFileBrowser.active_file -> active_file:    float[3]    
ThemeFileBrowser.active_file_text -> active_file_text:    float[3]    
ThemeFileBrowser.scroll_handle -> scroll_handle:    float[3]    
ThemeFileBrowser.scrollbar -> scrollbar:    float[3]    
ThemeFileBrowser.selected_file -> selected_file:    float[3]    
ThemeFileBrowser.space -> space:    pointer, (read-only)    Settings for space
ThemeFileBrowser.space_list -> space_list:    pointer, (read-only)    Settings for space list
ThemeFontStyle.font_kerning_style -> font_kerning_style:    enum    Which style to use for font kerning
ThemeFontStyle.points -> points:    int    
ThemeFontStyle.shadow -> shadow:    int    Shadow size (0, 3 and 5 supported)
ThemeFontStyle.shadow_alpha -> shadow_alpha:    float    
ThemeFontStyle.shadow_offset_x -> shadow_offset_x:    int    Shadow offset in pixels
ThemeFontStyle.shadow_offset_y -> shadow_offset_y:    int    Shadow offset in pixels
ThemeFontStyle.shadow_value -> shadow_value:    float    Shadow color in gray value
ThemeGradientColors.gradient -> gradient:    float[3]    
ThemeGradientColors.high_gradient -> high_gradient:    float[3]    
ThemeGradientColors.show_grad -> show_grad:    boolean    Do a gradient for the background of the viewport working area
ThemeGraphEditor.active_channels_group -> active_channels_group:    float[3]    
ThemeGraphEditor.channel_group -> channel_group:    float[3]    
ThemeGraphEditor.channels_region -> channels_region:    float[3]    
ThemeGraphEditor.dopesheet_channel -> dopesheet_channel:    float[3]    
ThemeGraphEditor.dopesheet_subchannel -> dopesheet_subchannel:    float[3]    
ThemeGraphEditor.frame_current -> frame_current:    float[3]    
ThemeGraphEditor.grid -> grid:    float[3]    
ThemeGraphEditor.handle_align -> handle_align:    float[3]    
ThemeGraphEditor.handle_auto -> handle_auto:    float[3]    
ThemeGraphEditor.handle_auto_clamped -> handle_auto_clamped:    float[3]    
ThemeGraphEditor.handle_free -> handle_free:    float[3]    
ThemeGraphEditor.handle_sel_align -> handle_sel_align:    float[3]    
ThemeGraphEditor.handle_sel_auto -> handle_sel_auto:    float[3]    
ThemeGraphEditor.handle_sel_auto_clamped -> handle_sel_auto_clamped:    float[3]    
ThemeGraphEditor.handle_sel_free -> handle_sel_free:    float[3]    
ThemeGraphEditor.handle_sel_vect -> handle_sel_vect:    float[3]    
ThemeGraphEditor.handle_vect -> handle_vect:    float[3]    
ThemeGraphEditor.handle_vertex -> handle_vertex:    float[3]    
ThemeGraphEditor.handle_vertex_select -> handle_vertex_select:    float[3]    
ThemeGraphEditor.handle_vertex_size -> handle_vertex_size:    int    
ThemeGraphEditor.lastsel_point -> lastsel_point:    float[3]    
ThemeGraphEditor.space -> space:    pointer, (read-only)    Settings for space
ThemeGraphEditor.space_list -> space_list:    pointer, (read-only)    Settings for space list
ThemeGraphEditor.vertex -> vertex:    float[3]    
ThemeGraphEditor.vertex_select -> vertex_select:    float[3]    
ThemeGraphEditor.vertex_size -> vertex_size:    int    
ThemeGraphEditor.vertex_unreferenced -> vertex_unreferenced:    float[3]    
ThemeGraphEditor.window_sliders -> window_sliders:    float[3]    
ThemeImageEditor.edge_select -> edge_select:    float[3]    
ThemeImageEditor.editmesh_active -> editmesh_active:    float[4]    
ThemeImageEditor.face -> face:    float[4]    
ThemeImageEditor.face_dot -> face_dot:    float[3]    
ThemeImageEditor.face_select -> face_select:    float[4]    
ThemeImageEditor.facedot_size -> facedot_size:    int    
ThemeImageEditor.freestyle_face_mark -> freestyle_face_mark:    float[4]    
ThemeImageEditor.preview_stitch_active -> preview_stitch_active:    float[4]    
ThemeImageEditor.preview_stitch_edge -> preview_stitch_edge:    float[4]    
ThemeImageEditor.preview_stitch_face -> preview_stitch_face:    float[4]    
ThemeImageEditor.preview_stitch_stitchable -> preview_stitch_stitchable:    float[4]    
ThemeImageEditor.preview_stitch_unstitchable -> preview_stitch_unstitchable:    float[4]    
ThemeImageEditor.preview_stitch_vert -> preview_stitch_vert:    float[4]    
ThemeImageEditor.scope_back -> scope_back:    float[4]    
ThemeImageEditor.space -> space:    pointer, (read-only)    Settings for space
ThemeImageEditor.uv_others -> uv_others:    float[4]    
ThemeImageEditor.uv_shadow -> uv_shadow:    float[4]    
ThemeImageEditor.vertex -> vertex:    float[3]    
ThemeImageEditor.vertex_select -> vertex_select:    float[3]    
ThemeImageEditor.vertex_size -> vertex_size:    int    
ThemeImageEditor.vertex_unreferenced -> vertex_unreferenced:    float[3]    
ThemeImageEditor.wire_edit -> wire_edit:    float[3]    
ThemeInfo.info_debug -> info_debug:    float[3]    
ThemeInfo.info_debug_text -> info_debug_text:    float[3]    
ThemeInfo.info_error -> info_error:    float[3]    
ThemeInfo.info_error_text -> info_error_text:    float[3]    
ThemeInfo.info_info -> info_info:    float[3]    
ThemeInfo.info_info_text -> info_info_text:    float[3]    
ThemeInfo.info_selected -> info_selected:    float[3]    
ThemeInfo.info_selected_text -> info_selected_text:    float[3]    
ThemeInfo.info_warning -> info_warning:    float[3]    
ThemeInfo.info_warning_text -> info_warning_text:    float[3]    
ThemeInfo.space -> space:    pointer, (read-only)    Settings for space
ThemeLogicEditor.space -> space:    pointer, (read-only)    Settings for space
ThemeNLAEditor.active_action -> active_action:    float[4]    Animation data block has active action
ThemeNLAEditor.active_action_unset -> active_action_unset:    float[4]    Animation data block doesn't have active action
ThemeNLAEditor.frame_current -> frame_current:    float[3]    
ThemeNLAEditor.grid -> grid:    float[3]    
ThemeNLAEditor.meta_strips -> meta_strips:    float[3]    Meta Strip - Unselected (for grouping related strips)
ThemeNLAEditor.meta_strips_selected -> meta_strips_selected:    float[3]    Meta Strip - Selected (for grouping related strips)
ThemeNLAEditor.sound_strips -> sound_strips:    float[3]    Sound Strip - Unselected (for timing speaker sounds)
ThemeNLAEditor.sound_strips_selected -> sound_strips_selected:    float[3]    Sound Strip - Selected (for timing speaker sounds)
ThemeNLAEditor.space -> space:    pointer, (read-only)    Settings for space
ThemeNLAEditor.space_list -> space_list:    pointer, (read-only)    Settings for space list
ThemeNLAEditor.strips -> strips:    float[3]    Action-Clip Strip - Unselected
ThemeNLAEditor.strips_selected -> strips_selected:    float[3]    Action-Clip Strip - Selected
ThemeNLAEditor.transition_strips -> transition_strips:    float[3]    Transition Strip - Unselected
ThemeNLAEditor.transition_strips_selected -> transition_strips_selected:    float[3]    Transition Strip - Selected
ThemeNLAEditor.tweak -> tweak:    float[3]    Color for strip/action being 'tweaked' or edited
ThemeNLAEditor.tweak_duplicate -> tweak_duplicate:    float[3]    Warning/error indicator color for strips referencing the strip being tweaked
ThemeNLAEditor.view_sliders -> view_sliders:    float[3]    
ThemeNodeEditor.color_node -> color_node:    float[3]    
ThemeNodeEditor.converter_node -> converter_node:    float[3]    
ThemeNodeEditor.distor_node -> distor_node:    float[3]    
ThemeNodeEditor.filter_node -> filter_node:    float[3]    
ThemeNodeEditor.frame_node -> frame_node:    float[4]    
ThemeNodeEditor.group_node -> group_node:    float[3]    
ThemeNodeEditor.group_socket_node -> group_socket_node:    float[3]    
ThemeNodeEditor.input_node -> input_node:    float[3]    
ThemeNodeEditor.layout_node -> layout_node:    float[3]    
ThemeNodeEditor.matte_node -> matte_node:    float[3]    
ThemeNodeEditor.node_active -> node_active:    float[3]    
ThemeNodeEditor.node_backdrop -> node_backdrop:    float[4]    
ThemeNodeEditor.node_selected -> node_selected:    float[3]    
ThemeNodeEditor.noodle_curving -> noodle_curving:    int    Curving of the noodle
ThemeNodeEditor.output_node -> output_node:    float[3]    
ThemeNodeEditor.pattern_node -> pattern_node:    float[3]    
ThemeNodeEditor.script_node -> script_node:    float[3]    
ThemeNodeEditor.selected_text -> selected_text:    float[3]    
ThemeNodeEditor.shader_node -> shader_node:    float[3]    
ThemeNodeEditor.space -> space:    pointer, (read-only)    Settings for space
ThemeNodeEditor.space_list -> space_list:    pointer, (read-only)    Settings for space list
ThemeNodeEditor.texture_node -> texture_node:    float[3]    
ThemeNodeEditor.vector_node -> vector_node:    float[3]    
ThemeNodeEditor.wire -> wire:    float[3]    
ThemeNodeEditor.wire_select -> wire_select:    float[3]    
ThemeOutliner.match -> match:    float[3]    
ThemeOutliner.selected_highlight -> selected_highlight:    float[3]    
ThemeOutliner.space -> space:    pointer, (read-only)    Settings for space
ThemePanelColors.back -> back:    float[4]    
ThemePanelColors.header -> header:    float[4]    
ThemePanelColors.show_back -> show_back:    boolean    
ThemePanelColors.show_header -> show_header:    boolean    
ThemeProperties.space -> space:    pointer, (read-only)    Settings for space
ThemeSequenceEditor.audio_strip -> audio_strip:    float[3]    
ThemeSequenceEditor.draw_action -> draw_action:    float[3]    
ThemeSequenceEditor.effect_strip -> effect_strip:    float[3]    
ThemeSequenceEditor.frame_current -> frame_current:    float[3]    
ThemeSequenceEditor.grid -> grid:    float[3]    
ThemeSequenceEditor.image_strip -> image_strip:    float[3]    
ThemeSequenceEditor.keyframe -> keyframe:    float[3]    
ThemeSequenceEditor.meta_strip -> meta_strip:    float[3]    
ThemeSequenceEditor.movie_strip -> movie_strip:    float[3]    
ThemeSequenceEditor.movieclip_strip -> movieclip_strip:    float[3]    
ThemeSequenceEditor.preview_back -> preview_back:    float[3]    
ThemeSequenceEditor.scene_strip -> scene_strip:    float[3]    
ThemeSequenceEditor.space -> space:    pointer, (read-only)    Settings for space
ThemeSequenceEditor.transition_strip -> transition_strip:    float[3]    
ThemeSequenceEditor.window_sliders -> window_sliders:    float[3]    
ThemeSpaceGeneric.back -> back:    float[3]    
ThemeSpaceGeneric.button -> button:    float[4]    
ThemeSpaceGeneric.button_text -> button_text:    float[3]    
ThemeSpaceGeneric.button_text_hi -> button_text_hi:    float[3]    
ThemeSpaceGeneric.button_title -> button_title:    float[3]    
ThemeSpaceGeneric.header -> header:    float[3]    
ThemeSpaceGeneric.header_text -> header_text:    float[3]    
ThemeSpaceGeneric.header_text_hi -> header_text_hi:    float[3]    
ThemeSpaceGeneric.panelcolors -> panelcolors:    pointer, (read-only)    
ThemeSpaceGeneric.text -> text:    float[3]    
ThemeSpaceGeneric.text_hi -> text_hi:    float[3]    
ThemeSpaceGeneric.title -> title:    float[3]    
ThemeSpaceGradient.button -> button:    float[4]    
ThemeSpaceGradient.button_text -> button_text:    float[3]    
ThemeSpaceGradient.button_text_hi -> button_text_hi:    float[3]    
ThemeSpaceGradient.button_title -> button_title:    float[3]    
ThemeSpaceGradient.gradients -> gradients:    pointer, (read-only)    
ThemeSpaceGradient.header -> header:    float[3]    
ThemeSpaceGradient.header_text -> header_text:    float[3]    
ThemeSpaceGradient.header_text_hi -> header_text_hi:    float[3]    
ThemeSpaceGradient.panelcolors -> panelcolors:    pointer, (read-only)    
ThemeSpaceGradient.text -> text:    float[3]    
ThemeSpaceGradient.text_hi -> text_hi:    float[3]    
ThemeSpaceGradient.title -> title:    float[3]    
ThemeSpaceListGeneric.list -> list:    float[3]    
ThemeSpaceListGeneric.list_text -> list_text:    float[3]    
ThemeSpaceListGeneric.list_text_hi -> list_text_hi:    float[3]    
ThemeSpaceListGeneric.list_title -> list_title:    float[3]    
ThemeStyle.panel_title -> panel_title:    pointer, (read-only)    
ThemeStyle.widget -> widget:    pointer, (read-only)    
ThemeStyle.widget_label -> widget_label:    pointer, (read-only)    
ThemeTextEditor.cursor -> cursor:    float[3]    
ThemeTextEditor.line_numbers_background -> line_numbers_background:    float[3]    
ThemeTextEditor.selected_text -> selected_text:    float[3]    
ThemeTextEditor.space -> space:    pointer, (read-only)    Settings for space
ThemeTextEditor.syntax_builtin -> syntax_builtin:    float[3]    
ThemeTextEditor.syntax_comment -> syntax_comment:    float[3]    
ThemeTextEditor.syntax_numbers -> syntax_numbers:    float[3]    
ThemeTextEditor.syntax_preprocessor -> syntax_preprocessor:    float[3]    
ThemeTextEditor.syntax_reserved -> syntax_reserved:    float[3]    
ThemeTextEditor.syntax_special -> syntax_special:    float[3]    
ThemeTextEditor.syntax_string -> syntax_string:    float[3]    
ThemeTextEditor.syntax_symbols -> syntax_symbols:    float[3]    
ThemeTimeline.frame_current -> frame_current:    float[3]    
ThemeTimeline.grid -> grid:    float[3]    
ThemeTimeline.space -> space:    pointer, (read-only)    Settings for space
ThemeUserInterface.axis_x -> axis_x:    float[3]    
ThemeUserInterface.axis_y -> axis_y:    float[3]    
ThemeUserInterface.axis_z -> axis_z:    float[3]    
ThemeUserInterface.icon_alpha -> icon_alpha:    float    Transparency of icons in the interface, to reduce contrast
ThemeUserInterface.icon_file -> icon_file:    string    
ThemeUserInterface.menu_shadow_fac -> menu_shadow_fac:    float    Blending factor for menu shadows
ThemeUserInterface.menu_shadow_width -> menu_shadow_width:    int    Width of menu shadows, set to zero to disable
ThemeUserInterface.wcol_box -> wcol_box:    pointer, (read-only)    
ThemeUserInterface.wcol_list_item -> wcol_list_item:    pointer, (read-only)    
ThemeUserInterface.wcol_menu -> wcol_menu:    pointer, (read-only)    
ThemeUserInterface.wcol_menu_back -> wcol_menu_back:    pointer, (read-only)    
ThemeUserInterface.wcol_menu_item -> wcol_menu_item:    pointer, (read-only)    
ThemeUserInterface.wcol_num -> wcol_num:    pointer, (read-only)    
ThemeUserInterface.wcol_numslider -> wcol_numslider:    pointer, (read-only)    
ThemeUserInterface.wcol_option -> wcol_option:    pointer, (read-only)    
ThemeUserInterface.wcol_progress -> wcol_progress:    pointer, (read-only)    
ThemeUserInterface.wcol_pulldown -> wcol_pulldown:    pointer, (read-only)    
ThemeUserInterface.wcol_radio -> wcol_radio:    pointer, (read-only)    
ThemeUserInterface.wcol_regular -> wcol_regular:    pointer, (read-only)    
ThemeUserInterface.wcol_scroll -> wcol_scroll:    pointer, (read-only)    
ThemeUserInterface.wcol_state -> wcol_state:    pointer, (read-only)    
ThemeUserInterface.wcol_text -> wcol_text:    pointer, (read-only)    
ThemeUserInterface.wcol_toggle -> wcol_toggle:    pointer, (read-only)    
ThemeUserInterface.wcol_tool -> wcol_tool:    pointer, (read-only)    
ThemeUserInterface.wcol_tooltip -> wcol_tooltip:    pointer, (read-only)    
ThemeUserPreferences.space -> space:    pointer, (read-only)    Settings for space
ThemeView3D.act_spline -> act_spline:    float[3]    
ThemeView3D.bone_pose -> bone_pose:    float[3]    
ThemeView3D.bone_pose_active -> bone_pose_active:    float[3]    
ThemeView3D.bone_solid -> bone_solid:    float[3]    
ThemeView3D.bundle_solid -> bundle_solid:    float[3]    
ThemeView3D.camera -> camera:    float[3]    
ThemeView3D.camera_path -> camera_path:    float[3]    
ThemeView3D.edge_crease -> edge_crease:    float[3]    
ThemeView3D.edge_facesel -> edge_facesel:    float[3]    
ThemeView3D.edge_seam -> edge_seam:    float[3]    
ThemeView3D.edge_select -> edge_select:    float[3]    
ThemeView3D.edge_sharp -> edge_sharp:    float[3]    
ThemeView3D.editmesh_active -> editmesh_active:    float[4]    
ThemeView3D.empty -> empty:    float[3]    
ThemeView3D.extra_edge_angle -> extra_edge_angle:    float[3]    
ThemeView3D.extra_edge_len -> extra_edge_len:    float[3]    
ThemeView3D.extra_face_angle -> extra_face_angle:    float[3]    
ThemeView3D.extra_face_area -> extra_face_area:    float[3]    
ThemeView3D.face -> face:    float[4]    
ThemeView3D.face_dot -> face_dot:    float[3]    
ThemeView3D.face_select -> face_select:    float[4]    
ThemeView3D.facedot_size -> facedot_size:    int    
ThemeView3D.frame_current -> frame_current:    float[3]    
ThemeView3D.freestyle_edge_mark -> freestyle_edge_mark:    float[3]    
ThemeView3D.freestyle_face_mark -> freestyle_face_mark:    float[4]    
ThemeView3D.grid -> grid:    float[3]    
ThemeView3D.handle_align -> handle_align:    float[3]    
ThemeView3D.handle_auto -> handle_auto:    float[3]    
ThemeView3D.handle_free -> handle_free:    float[3]    
ThemeView3D.handle_sel_align -> handle_sel_align:    float[3]    
ThemeView3D.handle_sel_auto -> handle_sel_auto:    float[3]    
ThemeView3D.handle_sel_free -> handle_sel_free:    float[3]    
ThemeView3D.handle_sel_vect -> handle_sel_vect:    float[3]    
ThemeView3D.handle_vect -> handle_vect:    float[3]    
ThemeView3D.lamp -> lamp:    float[4]    
ThemeView3D.lastsel_point -> lastsel_point:    float[3]    
ThemeView3D.normal -> normal:    float[3]    
ThemeView3D.nurb_sel_uline -> nurb_sel_uline:    float[3]    
ThemeView3D.nurb_sel_vline -> nurb_sel_vline:    float[3]    
ThemeView3D.nurb_uline -> nurb_uline:    float[3]    
ThemeView3D.nurb_vline -> nurb_vline:    float[3]    
ThemeView3D.object_active -> object_active:    float[3]    
ThemeView3D.object_grouped -> object_grouped:    float[3]    
ThemeView3D.object_grouped_active -> object_grouped_active:    float[3]    
ThemeView3D.object_selected -> object_selected:    float[3]    
ThemeView3D.outline_width -> outline_width:    int    
ThemeView3D.skin_root -> skin_root:    float[3]    
ThemeView3D.space -> space:    pointer, (read-only)    Settings for space
ThemeView3D.speaker -> speaker:    float[3]    
ThemeView3D.transform -> transform:    float[3]    
ThemeView3D.vertex -> vertex:    float[3]    
ThemeView3D.vertex_normal -> vertex_normal:    float[3]    
ThemeView3D.vertex_select -> vertex_select:    float[3]    
ThemeView3D.vertex_size -> vertex_size:    int    
ThemeView3D.vertex_unreferenced -> vertex_unreferenced:    float[3]    
ThemeView3D.wire -> wire:    float[3]    
ThemeView3D.wire_edit -> wire_edit:    float[3]    
ThemeWidgetColors.inner -> inner:    float[4]    
ThemeWidgetColors.inner_sel -> inner_sel:    float[4]    
ThemeWidgetColors.item -> item:    float[4]    
ThemeWidgetColors.outline -> outline:    float[3]    
ThemeWidgetColors.shadedown -> shadedown:    int    
ThemeWidgetColors.shadetop -> shadetop:    int    
ThemeWidgetColors.show_shaded -> show_shaded:    boolean    
ThemeWidgetColors.text -> text:    float[3]    
ThemeWidgetColors.text_sel -> text_sel:    float[3]    
ThemeWidgetStateColors.blend -> blend:    float    
ThemeWidgetStateColors.inner_anim -> inner_anim:    float[3]    
ThemeWidgetStateColors.inner_anim_sel -> inner_anim_sel:    float[3]    
ThemeWidgetStateColors.inner_driven -> inner_driven:    float[3]    
ThemeWidgetStateColors.inner_driven_sel -> inner_driven_sel:    float[3]    
ThemeWidgetStateColors.inner_key -> inner_key:    float[3]    
ThemeWidgetStateColors.inner_key_sel -> inner_key_sel:    float[3]    
TimelineMarker.camera -> camera:    pointer    Camera this timeline sets to active
TimelineMarker.frame -> frame:    int    The frame on which the timeline marker appears
TimelineMarker.name -> name:    string    
TimelineMarker.select -> select:    boolean    Marker selection state
Timer.time_delta -> time_delta:    float, (read-only)    Time since last step in seconds
Timer.time_duration -> time_duration:    float, (read-only)    Time since last step in seconds
Timer.time_step -> time_step:    float, (read-only)    
ToolSettings.auto_keying_mode -> auto_keying_mode:    enum    Mode of automatic keyframe insertion for Objects and Bones
ToolSettings.double_threshold -> double_threshold:    float    Limit for removing duplicates and 'Auto Merge'
ToolSettings.edge_path_live_unwrap -> edge_path_live_unwrap:    boolean    Changing edges seam re-calculates UV unwrap
ToolSettings.edge_path_mode -> edge_path_mode:    enum    The edge flag to tag when selecting the shortest path
ToolSettings.etch_adaptive_limit -> etch_adaptive_limit:    float    Correlation threshold for number of bones in the subdivided stroke
ToolSettings.etch_convert_mode -> etch_convert_mode:    enum    Method used to convert stroke to bones
ToolSettings.etch_length_limit -> etch_length_limit:    float    Maximum length of the subdivided bones
ToolSettings.etch_number -> etch_number:    string    Text to replace &N with (e.g. 'Finger.&N' -> 'Finger.1' or 'Finger.One')
ToolSettings.etch_roll_mode -> etch_roll_mode:    enum    Method used to adjust the roll of bones when retargeting
ToolSettings.etch_side -> etch_side:    string    Text to replace &S with (e.g. 'Arm.&S' -> 'Arm.R' or 'Arm.Right')
ToolSettings.etch_subdivision_number -> etch_subdivision_number:    int    Number of bones in the subdivided stroke
ToolSettings.etch_template -> etch_template:    pointer    Template armature that will be retargeted to the stroke
ToolSettings.image_paint -> image_paint:    pointer, (read-only)    
ToolSettings.mesh_select_mode -> mesh_select_mode:    boolean[3]    Which mesh elements selection works on
ToolSettings.normal_size -> normal_size:    float    Display size for normals in the 3D view
ToolSettings.particle_edit -> particle_edit:    pointer, (read-only)    
ToolSettings.proportional_edit -> proportional_edit:    enum    Proportional Editing mode, allows transforms with distance fall-off
ToolSettings.proportional_edit_falloff -> proportional_edit_falloff:    enum    Falloff type for proportional editing mode
ToolSettings.proportional_size -> proportional_size:    float    Display size for proportional editing circle
ToolSettings.sculpt -> sculpt:    pointer, (read-only)    
ToolSettings.show_uv_local_view -> show_uv_local_view:    boolean    Draw only faces with the currently displayed image assigned
ToolSettings.snap_element -> snap_element:    enum    Type of element to snap to
ToolSettings.snap_node_element -> snap_node_element:    enum    Type of element to snap to
ToolSettings.snap_target -> snap_target:    enum    Which part to snap onto the target
ToolSettings.snap_uv_element -> snap_uv_element:    enum    Type of element to snap to
ToolSettings.statvis -> statvis:    pointer, (read-only)    
ToolSettings.unified_paint_settings -> unified_paint_settings:    pointer, (read-only)    
ToolSettings.use_auto_normalize -> use_auto_normalize:    boolean    Ensure all bone-deforming vertex groups add up to 1.0 while weight painting
ToolSettings.use_bone_sketching -> use_bone_sketching:    boolean    Use sketching to create and edit bones
ToolSettings.use_etch_autoname -> use_etch_autoname:    boolean    Automatically generate values to replace &N and &S suffix placeholders in template names
ToolSettings.use_etch_overdraw -> use_etch_overdraw:    boolean    Adjust strokes by drawing near them
ToolSettings.use_etch_quick -> use_etch_quick:    boolean    Automatically convert and delete on stroke end
ToolSettings.use_grease_pencil_sessions -> use_grease_pencil_sessions:    boolean    Allow drawing multiple strokes at a time with Grease Pencil
ToolSettings.use_keyframe_insert_auto -> use_keyframe_insert_auto:    boolean    Automatic keyframe insertion for Objects and Bones
ToolSettings.use_keyframe_insert_keyingset -> use_keyframe_insert_keyingset:    boolean    Automatic keyframe insertion using active Keying Set only
ToolSettings.use_mesh_automerge -> use_mesh_automerge:    boolean    Automatically merge vertices moved to the same location
ToolSettings.use_multipaint -> use_multipaint:    boolean    Paint across all selected bones while weight painting
ToolSettings.use_proportional_edit_mask -> use_proportional_edit_mask:    boolean    Proportional editing mask mode
ToolSettings.use_proportional_edit_objects -> use_proportional_edit_objects:    boolean    Proportional editing object mode
ToolSettings.use_record_with_nla -> use_record_with_nla:    boolean    Add a new NLA Track + Strip for every loop/pass made over the animation to allow non-destructive tweaking
ToolSettings.use_snap -> use_snap:    boolean    Snap during transform
ToolSettings.use_snap_align_rotation -> use_snap_align_rotation:    boolean    Align rotation with the snapping target
ToolSettings.use_snap_peel_object -> use_snap_peel_object:    boolean    Consider objects as whole when finding volume center
ToolSettings.use_snap_project -> use_snap_project:    boolean    Project individual elements on the surface of other objects
ToolSettings.use_snap_self -> use_snap_self:    boolean    Snap onto itself (editmode)
ToolSettings.use_uv_sculpt -> use_uv_sculpt:    boolean    Enable brush for UV sculpting
ToolSettings.use_uv_select_sync -> use_uv_select_sync:    boolean    Keep UV and edit mode mesh selection in sync
ToolSettings.uv_relax_method -> uv_relax_method:    enum    Algorithm used for UV relaxation
ToolSettings.uv_sculpt -> uv_sculpt:    pointer, (read-only)    
ToolSettings.uv_sculpt_all_islands -> uv_sculpt_all_islands:    boolean    Brush operates on all islands
ToolSettings.uv_sculpt_lock_borders -> uv_sculpt_lock_borders:    boolean    Disable editing of boundary edges
ToolSettings.uv_sculpt_tool -> uv_sculpt_tool:    enum    Select Tools for the UV sculpt brushes
ToolSettings.uv_select_mode -> uv_select_mode:    enum    UV selection and display mode
ToolSettings.vertex_group_subset -> vertex_group_subset:    enum    Filter Vertex groups for Display
ToolSettings.vertex_group_user -> vertex_group_user:    enum    Display unweighted vertices (multi-paint overrides)
ToolSettings.vertex_group_weight -> vertex_group_weight:    float    Weight to assign in vertex groups
ToolSettings.vertex_paint -> vertex_paint:    pointer, (read-only)    
ToolSettings.weight_paint -> weight_paint:    pointer, (read-only)    
TransformOrientation.matrix -> matrix:    float[9]    
TransformOrientation.name -> name:    string    Name of the custom transform orientation
UILayout.active -> active:    boolean    
UILayout.alert -> alert:    boolean    
UILayout.alignment -> alignment:    enum    
UILayout.enabled -> enabled:    boolean    When false, this (sub)layout is grayed out
UILayout.operator_context -> operator_context:    enum    
UILayout.scale_x -> scale_x:    float    Scale factor along the X for items in this (sub)layout
UILayout.scale_y -> scale_y:    float    Scale factor along the Y for items in this (sub)layout
UIList.bitflag_filter_item -> bitflag_filter_item:    int, (read-only)    The value of the reserved bitflag 'FILTER_ITEM' (in filter_flags values)
UIList.bl_idname -> bl_idname:    string    If this is set, the uilist gets a custom ID, otherwise it takes the name of the class used to define the uilist (for example, if the class name is "OBJECT_UL_vgroups", and bl_idname is not
set by the script, then bl_idname = "OBJECT_UL_vgroups")
UIList.filter_name -> filter_name:    string    Only show items matching this name (use '*' as wildcard)
UIList.layout_type -> layout_type:    enum, (read-only)    
UIList.use_filter_invert -> use_filter_invert:    boolean    Invert filtering (show hidden items, and vice-versa)
UIList.use_filter_show -> use_filter_show:    boolean    Show filtering options
UIList.use_filter_sort_alpha -> use_filter_sort_alpha:    boolean    Sort items by their name
UIList.use_filter_sort_reverse -> use_filter_sort_reverse:    boolean    Invert the order of shown items
UIPopupMenu.layout -> layout:    pointer, (read-only)    
UVLoopLayers.active -> active:    pointer    Active UV loop layer
UVLoopLayers.active_index -> active_index:    int    Active UV loop layer index
UVProjector.object -> object:    pointer    Object to use as projector transform
UVTextures.active -> active:    pointer    Active UV Map
UVTextures.active_index -> active_index:    int    Active UV Map index
UnifiedPaintSettings.size -> size:    int    Radius of the brush
UnifiedPaintSettings.strength -> strength:    float    How powerful the effect of the brush is when applied
UnifiedPaintSettings.unprojected_radius -> unprojected_radius:    float    Radius of brush in Blender units
UnifiedPaintSettings.use_locked_size -> use_locked_size:    boolean    When locked brush stays same size relative to object; when unlocked brush size is given in pixels
UnifiedPaintSettings.use_pressure_size -> use_pressure_size:    boolean    Enable tablet pressure sensitivity for size
UnifiedPaintSettings.use_pressure_strength -> use_pressure_strength:    boolean    Enable tablet pressure sensitivity for strength
UnifiedPaintSettings.use_unified_size -> use_unified_size:    boolean    Instead of per-brush radius, the radius is shared across brushes
UnifiedPaintSettings.use_unified_strength -> use_unified_strength:    boolean    Instead of per-brush strength, the strength is shared across brushes
UnifiedPaintSettings.use_unified_weight -> use_unified_weight:    boolean    Instead of per-brush weight, the weight is shared across brushes
UnifiedPaintSettings.weight -> weight:    float    Weight to assign in vertex groups
UnitSettings.scale_length -> scale_length:    float    Scale to use when converting between blender units and dimensions
UnitSettings.system -> system:    enum    The unit system to use for button display
UnitSettings.system_rotation -> system_rotation:    enum    Unit to use for displaying/editing rotation values
UnitSettings.use_separate -> use_separate:    boolean    Display units in pairs (e.g. 1m 0cm)
UserPreferences.active_section -> active_section:    enum    Active section of the user preferences shown in the user interface
UserPreferences.addons -> addons:    collection, (read-only)    
UserPreferences.autoexec_paths -> autoexec_paths:    collection, (read-only)    
UserPreferences.edit -> edit:    pointer, (read-only)    Settings for interacting with Blender data
UserPreferences.filepaths -> filepaths:    pointer, (read-only)    Default paths for external files
UserPreferences.inputs -> inputs:    pointer, (read-only)    Settings for input devices
UserPreferences.system -> system:    pointer, (read-only)    Graphics driver and operating system settings
UserPreferences.themes -> themes:    collection, (read-only)    
UserPreferences.ui_styles -> ui_styles:    collection, (read-only)    
UserPreferences.view -> view:    pointer, (read-only)    Preferences related to viewing data
UserPreferencesEdit.auto_keying_mode -> auto_keying_mode:    enum    Mode of automatic keyframe insertion for Objects and Bones (default setting used for new Scenes)
UserPreferencesEdit.fcurve_unselected_alpha -> fcurve_unselected_alpha:    float    Amount that unselected F-Curves stand out from the background (Graph Editor)
UserPreferencesEdit.grease_pencil_default_color -> grease_pencil_default_color:    float[4]    Color of new Grease Pencil layers
UserPreferencesEdit.grease_pencil_eraser_radius -> grease_pencil_eraser_radius:    int    Radius of eraser 'brush'
UserPreferencesEdit.grease_pencil_euclidean_distance -> grease_pencil_euclidean_distance:    int    Distance moved by mouse when drawing stroke to include
UserPreferencesEdit.grease_pencil_manhattan_distance -> grease_pencil_manhattan_distance:    int    Pixels moved by mouse per axis when drawing stroke
UserPreferencesEdit.keyframe_new_handle_type -> keyframe_new_handle_type:    enum    Handle type for handles of new keyframes
UserPreferencesEdit.keyframe_new_interpolation_type -> keyframe_new_interpolation_type:    enum    Interpolation mode used for first keyframe on newly added F-Curves (subsequent keyframes take interpolation from preceding keyframe)
UserPreferencesEdit.material_link -> material_link:    enum    Toggle whether the material is linked to object data or the object block
UserPreferencesEdit.object_align -> object_align:    enum    When adding objects from a 3D View menu, either align them with that view or with the world
UserPreferencesEdit.sculpt_paint_overlay_color -> sculpt_paint_overlay_color:    float[3]    Color of texture overlay
UserPreferencesEdit.undo_memory_limit -> undo_memory_limit:    int    Maximum memory usage in megabytes (0 means unlimited)
UserPreferencesEdit.undo_steps -> undo_steps:    int    Number of undo steps available (smaller values conserve memory)
UserPreferencesEdit.use_auto_keying -> use_auto_keying:    boolean    Automatic keyframe insertion for Objects and Bones (default setting used for new Scenes)
UserPreferencesEdit.use_auto_keying_warning -> use_auto_keying_warning:    boolean    Show warning indicators when transforming objects and bones if auto keying is enabled
UserPreferencesEdit.use_drag_immediately -> use_drag_immediately:    boolean    Moving things with a mouse drag confirms when releasing the button
UserPreferencesEdit.use_duplicate_action -> use_duplicate_action:    boolean    Causes actions to be duplicated with the object
UserPreferencesEdit.use_duplicate_armature -> use_duplicate_armature:    boolean    Causes armature data to be duplicated with the object
UserPreferencesEdit.use_duplicate_curve -> use_duplicate_curve:    boolean    Causes curve data to be duplicated with the object
UserPreferencesEdit.use_duplicate_fcurve -> use_duplicate_fcurve:    boolean    Causes F-curve data to be duplicated with the object
UserPreferencesEdit.use_duplicate_lamp -> use_duplicate_lamp:    boolean    Causes lamp data to be duplicated with the object
UserPreferencesEdit.use_duplicate_material -> use_duplicate_material:    boolean    Causes material data to be duplicated with the object
UserPreferencesEdit.use_duplicate_mesh -> use_duplicate_mesh:    boolean    Causes mesh data to be duplicated with the object
UserPreferencesEdit.use_duplicate_metaball -> use_duplicate_metaball:    boolean    Causes metaball data to be duplicated with the object
UserPreferencesEdit.use_duplicate_particle -> use_duplicate_particle:    boolean    Causes particle systems to be duplicated with the object
UserPreferencesEdit.use_duplicate_surface -> use_duplicate_surface:    boolean    Causes surface data to be duplicated with the object
UserPreferencesEdit.use_duplicate_text -> use_duplicate_text:    boolean    Causes text data to be duplicated with the object
UserPreferencesEdit.use_duplicate_texture -> use_duplicate_texture:    boolean    Causes texture data to be duplicated with the object
UserPreferencesEdit.use_enter_edit_mode -> use_enter_edit_mode:    boolean    Enter Edit Mode automatically after adding a new object
UserPreferencesEdit.use_global_undo -> use_global_undo:    boolean    Global undo works by keeping a full copy of the file itself in memory, so takes extra memory
UserPreferencesEdit.use_grease_pencil_simplify_stroke -> use_grease_pencil_simplify_stroke:    boolean    Simplify the final stroke
UserPreferencesEdit.use_grease_pencil_smooth_stroke -> use_grease_pencil_smooth_stroke:    boolean    Smooth the final stroke
UserPreferencesEdit.use_insertkey_xyz_to_rgb -> use_insertkey_xyz_to_rgb:    boolean    Color for newly added transformation F-Curves (Location, Rotation, Scale) and also Color is based on the transform axis
UserPreferencesEdit.use_keyframe_insert_available -> use_keyframe_insert_available:    boolean    Automatic keyframe insertion in available F-Curves
UserPreferencesEdit.use_keyframe_insert_needed -> use_keyframe_insert_needed:    boolean    Keyframe insertion only when keyframe needed
UserPreferencesEdit.use_negative_frames -> use_negative_frames:    boolean    Current frame number can be manually set to a negative value
UserPreferencesEdit.use_visual_keying -> use_visual_keying:    boolean    Use Visual keying automatically for constrained objects
UserPreferencesFilePaths.animation_player -> animation_player:    string    Path to a custom animation/frame sequence player
UserPreferencesFilePaths.animation_player_preset -> animation_player_preset:    enum    Preset configs for external animation players
UserPreferencesFilePaths.auto_save_time -> auto_save_time:    int    The time (in minutes) to wait between automatic temporary saves
UserPreferencesFilePaths.font_directory -> font_directory:    string    The default directory to search for loading fonts
UserPreferencesFilePaths.hide_recent_locations -> hide_recent_locations:    boolean    Hide recent locations in the file selector
UserPreferencesFilePaths.hide_system_bookmarks -> hide_system_bookmarks:    boolean    Hide system bookmarks in the file selector
UserPreferencesFilePaths.i18n_branches_directory -> i18n_branches_directory:    string    The path to the '/branches' directory of your local svn-translation copy, to allow translating from the UI
UserPreferencesFilePaths.image_editor -> image_editor:    string    Path to an image editor
UserPreferencesFilePaths.recent_files -> recent_files:    int    Maximum number of recently opened files to remember
UserPreferencesFilePaths.render_output_directory -> render_output_directory:    string    The default directory for rendering output, for new scenes
UserPreferencesFilePaths.save_version -> save_version:    int    The number of old versions to maintain in the current directory, when manually saving
UserPreferencesFilePaths.script_directory -> script_directory:    string    Alternate script path, matching the default layout with subdirs: startup, addons & modules (requires restart)
UserPreferencesFilePaths.show_hidden_files_datablocks -> show_hidden_files_datablocks:    boolean    Hide files/datablocks that start with a dot (.*)
UserPreferencesFilePaths.show_thumbnails -> show_thumbnails:    boolean    Open in thumbnail view for images and movies
UserPreferencesFilePaths.sound_directory -> sound_directory:    string    The default directory to search for sounds
UserPreferencesFilePaths.temporary_directory -> temporary_directory:    string    The directory for storing temporary save files
UserPreferencesFilePaths.texture_directory -> texture_directory:    string    The default directory to search for textures
UserPreferencesFilePaths.use_auto_save_temporary_files -> use_auto_save_temporary_files:    boolean    Automatic saving of temporary files in temp directory, uses process ID
UserPreferencesFilePaths.use_file_compression -> use_file_compression:    boolean    Enable file compression when saving .blend files
UserPreferencesFilePaths.use_filter_files -> use_filter_files:    boolean    Display only files with extensions in the image select window
UserPreferencesFilePaths.use_keep_session -> use_keep_session:    boolean    Always load session recovery and save it after quitting Blender
UserPreferencesFilePaths.use_load_ui -> use_load_ui:    boolean    Load user interface setup when loading .blend files
UserPreferencesFilePaths.use_relative_paths -> use_relative_paths:    boolean    Default relative path option for the file selector
UserPreferencesFilePaths.use_save_preview_images -> use_save_preview_images:    boolean    Enables automatic saving of preview images in the .blend file
UserPreferencesInput.active_keyconfig -> active_keyconfig:    string    The name of the active key configuration
UserPreferencesInput.drag_threshold -> drag_threshold:    int    Amount of pixels you have to drag before dragging UI items happens
UserPreferencesInput.invert_mouse_zoom -> invert_mouse_zoom:    boolean    Invert the axis of mouse movement for zooming
UserPreferencesInput.invert_zoom_wheel -> invert_zoom_wheel:    boolean    Swap the Mouse Wheel zoom direction
UserPreferencesInput.mouse_double_click_time -> mouse_double_click_time:    int    Time/delay (in ms) for a double click
UserPreferencesInput.navigation_mode -> navigation_mode:    enum    Which method to use for viewport navigation
UserPreferencesInput.ndof_fly_helicopter -> ndof_fly_helicopter:    boolean    Device up/down directly controls your Z position
UserPreferencesInput.ndof_lock_horizon -> ndof_lock_horizon:    boolean    Keep horizon level while flying with 3D Mouse
UserPreferencesInput.ndof_orbit_sensitivity -> ndof_orbit_sensitivity:    float    Overall sensitivity of the 3D Mouse for orbiting
UserPreferencesInput.ndof_panx_invert_axis -> ndof_panx_invert_axis:    boolean    Invert x axis
UserPreferencesInput.ndof_pany_invert_axis -> ndof_pany_invert_axis:    boolean    Invert y axis
UserPreferencesInput.ndof_panz_invert_axis -> ndof_panz_invert_axis:    boolean    Invert z axis
UserPreferencesInput.ndof_roll_invert_axis -> ndof_roll_invert_axis:    boolean    Invert roll axis
UserPreferencesInput.ndof_rotate_invert_axis -> ndof_rotate_invert_axis:    boolean    Invert rotation axis
UserPreferencesInput.ndof_sensitivity -> ndof_sensitivity:    float    Overall sensitivity of the 3D Mouse for panning
UserPreferencesInput.ndof_show_guide -> ndof_show_guide:    boolean    Display the center and axis during rotation
UserPreferencesInput.ndof_tilt_invert_axis -> ndof_tilt_invert_axis:    boolean    Invert tilt axis
UserPreferencesInput.ndof_view_rotate_method -> ndof_view_rotate_method:    enum    Rotation style in the viewport
UserPreferencesInput.ndof_zoom_invert -> ndof_zoom_invert:    boolean    Zoom using opposite direction
UserPreferencesInput.ndof_zoom_updown -> ndof_zoom_updown:    boolean    Zoom using up/down on the device (otherwise forward/backward)
UserPreferencesInput.select_mouse -> select_mouse:    enum    Mouse button used for selection
UserPreferencesInput.tweak_threshold -> tweak_threshold:    int    Number of pixels you have to drag before tweak event is triggered
UserPreferencesInput.use_emulate_numpad -> use_emulate_numpad:    boolean    Main 1 to 0 keys act as the numpad ones (useful for laptops)
UserPreferencesInput.use_mouse_continuous -> use_mouse_continuous:    boolean    Allow moving the mouse outside the view on some manipulations (transform, ui control drag)
UserPreferencesInput.use_mouse_emulate_3_button -> use_mouse_emulate_3_button:    boolean    Emulate Middle Mouse with Alt+Left Mouse (doesn't work with Left Mouse Select option)
UserPreferencesInput.use_mouse_mmb_paste -> use_mouse_mmb_paste:    boolean    In text window, paste with middle mouse button instead of panning
UserPreferencesInput.use_trackpad_natural -> use_trackpad_natural:    boolean    If your system uses 'natural' scrolling, this option keeps consistent trackpad usage throughout the UI
UserPreferencesInput.view_rotate_method -> view_rotate_method:    enum    Rotation style in the viewport
UserPreferencesInput.view_zoom_axis -> view_zoom_axis:    enum    Axis of mouse movement to zoom in or out on
UserPreferencesInput.view_zoom_method -> view_zoom_method:    enum    Which style to use for viewport scaling
UserPreferencesInput.walk_navigation -> walk_navigation:    pointer, (read-only)    Settings for walk navigation mode
UserPreferencesInput.wheel_scroll_lines -> wheel_scroll_lines:    int    Number of lines scrolled at a time with the mouse wheel
UserPreferencesSystem.anisotropic_filter -> anisotropic_filter:    enum    Quality of the anisotropic filtering (values greater than 1.0 enable anisotropic filtering)
UserPreferencesSystem.audio_channels -> audio_channels:    enum    Audio channel count
UserPreferencesSystem.audio_device -> audio_device:    enum    Audio output device
UserPreferencesSystem.audio_mixing_buffer -> audio_mixing_buffer:    enum    Number of samples used by the audio mixing buffer
UserPreferencesSystem.audio_sample_format -> audio_sample_format:    enum    Audio sample format
UserPreferencesSystem.audio_sample_rate -> audio_sample_rate:    enum    Audio sample rate
UserPreferencesSystem.author -> author:    string    Name that will be used in exported files when format supports such feature
UserPreferencesSystem.color_picker_type -> color_picker_type:    enum    Different styles of displaying the color picker widget
UserPreferencesSystem.compute_device -> compute_device:    enum    Device to use for computation
UserPreferencesSystem.compute_device_type -> compute_device_type:    enum    Device to use for computation (rendering with Cycles)
UserPreferencesSystem.dpi -> dpi:    int    Font size and resolution for display
UserPreferencesSystem.frame_server_port -> frame_server_port:    int    Frameserver Port for Frameserver Rendering
UserPreferencesSystem.gl_clip_alpha -> gl_clip_alpha:    float    Clip alpha below this threshold in the 3D textured view
UserPreferencesSystem.gl_texture_limit -> gl_texture_limit:    enum    Limit the texture size to save graphics memory
UserPreferencesSystem.image_draw_method -> image_draw_method:    enum    Method used for displaying images on the screen
UserPreferencesSystem.language -> language:    enum    Language used for translation
UserPreferencesSystem.memory_cache_limit -> memory_cache_limit:    int    Memory cache limit (in megabytes)
UserPreferencesSystem.multi_sample -> multi_sample:    enum    Enable OpenGL multi-sampling, only for systems that support it, requires restart
UserPreferencesSystem.prefetch_frames -> prefetch_frames:    int    Number of frames to render ahead during playback (sequencer only)
UserPreferencesSystem.screencast_fps -> screencast_fps:    int    Frame rate for the screencast to be played back
UserPreferencesSystem.screencast_wait_time -> screencast_wait_time:    int    Time in milliseconds between each frame recorded for screencast
UserPreferencesSystem.scrollback -> scrollback:    int    Maximum number of lines to store for the console buffer
UserPreferencesSystem.solid_lights -> solid_lights:    collection, (read-only)    Lights user to display objects in solid draw mode
UserPreferencesSystem.texture_collection_rate -> texture_collection_rate:    int    Number of seconds between each run of the GL texture garbage collector
UserPreferencesSystem.texture_time_out -> texture_time_out:    int    Time since last access of a GL texture in seconds after which it is freed (set to 0 to keep textures allocated)
UserPreferencesSystem.use_16bit_textures -> use_16bit_textures:    boolean    Use 16 bit per component texture for float images
UserPreferencesSystem.use_gpu_mipmap -> use_gpu_mipmap:    boolean    Generate Image Mipmaps on the GPU
UserPreferencesSystem.use_international_fonts -> use_international_fonts:    boolean    Use international fonts
UserPreferencesSystem.use_mipmaps -> use_mipmaps:    boolean    Scale textures for the 3D View (looks nicer but uses more memory and slows image reloading)
UserPreferencesSystem.use_preview_images -> use_preview_images:    boolean    Allow user to choose any codec (Windows only, might generate instability)
UserPreferencesSystem.use_region_overlap -> use_region_overlap:    boolean    Draw tool/property regions over the main region, when using Triple Buffer
UserPreferencesSystem.use_scripts_auto_execute -> use_scripts_auto_execute:    boolean    Allow any .blend file to run scripts automatically (unsafe with blend files from an untrusted source)
UserPreferencesSystem.use_tabs_as_spaces -> use_tabs_as_spaces:    boolean    Automatically convert all new tabs into spaces for new and loaded text files
UserPreferencesSystem.use_text_antialiasing -> use_text_antialiasing:    boolean    Draw user interface text anti-aliased
UserPreferencesSystem.use_textured_fonts -> use_textured_fonts:    boolean    Use textures for drawing international fonts
UserPreferencesSystem.use_translate_interface -> use_translate_interface:    boolean    Translate interface
UserPreferencesSystem.use_translate_new_dataname -> use_translate_new_dataname:    boolean    Translate new data names (when adding/creating some)
UserPreferencesSystem.use_translate_tooltips -> use_translate_tooltips:    boolean    Translate tooltips
UserPreferencesSystem.use_vertex_buffer_objects -> use_vertex_buffer_objects:    boolean    Use Vertex Buffer Objects (or Vertex Arrays, if unsupported) for viewport rendering
UserPreferencesSystem.use_weight_color_range -> use_weight_color_range:    boolean    Enable color range used for weight visualization in weight painting mode
UserPreferencesSystem.weight_color_range -> weight_color_range:    pointer, (read-only)    Color range used for weight visualization in weight painting mode
UserPreferencesSystem.window_draw_method -> window_draw_method:    enum    Drawing method used by the window manager
UserPreferencesView.manipulator_handle_size -> manipulator_handle_size:    int    Size of widget handles as percentage of widget radius
UserPreferencesView.manipulator_hotspot -> manipulator_hotspot:    int    Distance around the handles to accept mouse clicks
UserPreferencesView.manipulator_size -> manipulator_size:    int    Diameter of widget, in 10 pixel units
UserPreferencesView.mini_axis_brightness -> mini_axis_brightness:    int    Brightness of the icon
UserPreferencesView.mini_axis_size -> mini_axis_size:    int    The axes icon's size
UserPreferencesView.object_origin_size -> object_origin_size:    int    Diameter in Pixels for Object/Lamp origin display
UserPreferencesView.open_left_mouse_delay -> open_left_mouse_delay:    int    Time in 1/10 seconds to hold the Left Mouse Button before opening the toolbox
UserPreferencesView.open_right_mouse_delay -> open_right_mouse_delay:    int    Time in 1/10 seconds to hold the Right Mouse Button before opening the toolbox
UserPreferencesView.open_sublevel_delay -> open_sublevel_delay:    int    Time delay in 1/10 seconds before automatically opening sub level menus
UserPreferencesView.open_toplevel_delay -> open_toplevel_delay:    int    Time delay in 1/10 seconds before automatically opening top level menus
UserPreferencesView.rotation_angle -> rotation_angle:    int    Rotation step for numerical pad keys (2 4 6 8)
UserPreferencesView.show_column_layout -> show_column_layout:    boolean    Use a column layout for toolbox
UserPreferencesView.show_large_cursors -> show_large_cursors:    boolean    Use large mouse cursors when available
UserPreferencesView.show_manipulator -> show_manipulator:    boolean    Use 3D transform manipulator
UserPreferencesView.show_mini_axis -> show_mini_axis:    boolean    Show a small rotating 3D axes in the bottom left corner of the 3D View
UserPreferencesView.show_object_info -> show_object_info:    boolean    Display objects name and frame number in 3D view
UserPreferencesView.show_playback_fps -> show_playback_fps:    boolean    Show the frames per second screen refresh rate, while animation is played back
UserPreferencesView.show_splash -> show_splash:    boolean    Display splash screen on startup
UserPreferencesView.show_tooltips -> show_tooltips:    boolean    Display tooltips
UserPreferencesView.show_tooltips_python -> show_tooltips_python:    boolean    Show Python references in tooltips
UserPreferencesView.show_view_name -> show_view_name:    boolean    Show the name of the view's direction in each 3D View
UserPreferencesView.smooth_view -> smooth_view:    int    Time to animate the view in milliseconds, zero to disable
UserPreferencesView.timecode_style -> timecode_style:    enum    Format of Time Codes displayed when not displaying timing in terms of frames
UserPreferencesView.use_auto_perspective -> use_auto_perspective:    boolean    Automatically switch between orthographic and perspective when changing from top/front/side views
UserPreferencesView.use_camera_lock_parent -> use_camera_lock_parent:    boolean    When the camera is locked to the view and in fly mode, transform the parent rather than the camera
UserPreferencesView.use_directional_menus -> use_directional_menus:    boolean    Otherwise menus, etc will always be top to bottom, left to right, no matter opening direction
UserPreferencesView.use_global_pivot -> use_global_pivot:    boolean    Lock the same rotation/scaling pivot in all 3D Views
UserPreferencesView.use_global_scene -> use_global_scene:    boolean    Force the current Scene to be displayed in all Screens
UserPreferencesView.use_mouse_depth_cursor -> use_mouse_depth_cursor:    boolean    Use the depth under the mouse when placing the cursor
UserPreferencesView.use_mouse_depth_navigate -> use_mouse_depth_navigate:    boolean    Use the depth under the mouse to improve view pan/rotate/zoom functionality
UserPreferencesView.use_mouse_over_open -> use_mouse_over_open:    boolean    Open menu buttons and pulldowns automatically when the mouse is hovering
UserPreferencesView.use_quit_dialog -> use_quit_dialog:    boolean    Asks for confirmation when quitting through the window close button
UserPreferencesView.use_rotate_around_active -> use_rotate_around_active:    boolean    Use selection as the pivot point
UserPreferencesView.use_zoom_to_mouse -> use_zoom_to_mouse:    boolean    Zoom in towards the mouse pointer's position in the 3D view, rather than the 2D window center
UserPreferencesView.view2d_grid_spacing_min -> view2d_grid_spacing_min:    int    Minimum number of pixels between each gridline in 2D Viewports
UserSolidLight.diffuse_color -> diffuse_color:    float[3]    Diffuse color of the OpenGL light
UserSolidLight.direction -> direction:    float[3]    Direction that the OpenGL light is shining
UserSolidLight.specular_color -> specular_color:    float[3]    Color of the light's specular highlight
UserSolidLight.use -> use:    boolean    Enable this OpenGL light in solid draw mode
VertexColors.active -> active:    pointer, (read-only)    Active vertex color layer
VertexColors.active_index -> active_index:    int    Active vertex color index
VertexGroup.index -> index:    int, (read-only)    Index number of the vertex group
VertexGroup.lock_weight -> lock_weight:    boolean    Maintain the relative weights for the group
VertexGroup.name -> name:    string    Vertex group name
VertexGroupElement.group -> group:    int, (read-only)    
VertexGroupElement.weight -> weight:    float    Vertex Weight
VertexGroups.active -> active:    pointer, (read-only)    Vertex groups of the object
VertexGroups.active_index -> active_index:    int    Active index in vertex group array
VoxelData.domain_object -> domain_object:    pointer    Object used as the smoke simulation domain
VoxelData.extension -> extension:    enum    How the texture is extrapolated past its original bounds
VoxelData.file_format -> file_format:    enum    Format of the source data set to render
VoxelData.filepath -> filepath:    string    The external source data file to use
VoxelData.intensity -> intensity:    float    Multiplier for intensity values
VoxelData.interpolation -> interpolation:    enum    Method to interpolate/smooth values between voxel cells
VoxelData.resolution -> resolution:    int[3]    Resolution of the voxel grid
VoxelData.smoke_data_type -> smoke_data_type:    enum    Simulation value to be used as a texture
VoxelData.still_frame -> still_frame:    int    The frame number to always use
VoxelData.use_still_frame -> use_still_frame:    boolean    Always render a still frame from the voxel data sequence
WalkNavigation.jump_height -> jump_height:    float    Maximum height of a jump
WalkNavigation.mouse_speed -> mouse_speed:    float    Speed factor for when looking around, high values mean faster mouse movement
WalkNavigation.teleport_time -> teleport_time:    float    Interval of time warp when teleporting in navigation mode
WalkNavigation.use_gravity -> use_gravity:    boolean    Walk with gravity, or free navigate
WalkNavigation.use_mouse_reverse -> use_mouse_reverse:    boolean    Reverse the mouse look
WalkNavigation.view_height -> view_height:    float    View distance from the floor when walking
WalkNavigation.walk_speed -> walk_speed:    float    Base speed for walking and flying
WalkNavigation.walk_speed_factor -> walk_speed_factor:    float    Multiplication factor when using the fast or slow modifiers
Window.height -> height:    int, (read-only)    Window height
Window.screen -> screen:    pointer    Active screen showing in the window
Window.width -> width:    int, (read-only)    Window width
Window.x -> x:    int, (read-only)    Horizontal location of the window
Window.y -> y:    int, (read-only)    Vertical location of the window
WorldLighting.adapt_to_speed -> adapt_to_speed:    float    Use the speed vector pass to reduce AO samples in fast moving pixels - higher values result in more aggressive sample reduction (requires Vec pass enabled, for Raytrace
Adaptive QMC)
WorldLighting.ao_blend_type -> ao_blend_type:    enum    Defines how AO mixes with material shading
WorldLighting.ao_factor -> ao_factor:    float    Factor for ambient occlusion blending
WorldLighting.bias -> bias:    float    Bias (in radians) to prevent smoothed faces from showing banding (for Raytrace Constant Jittered)
WorldLighting.correction -> correction:    float    Ad-hoc correction for over-occlusion due to the approximation
WorldLighting.distance -> distance:    float    Length of rays, defines how far away other faces give occlusion effect
WorldLighting.environment_color -> environment_color:    enum    Defines where the color of the environment light comes from
WorldLighting.environment_energy -> environment_energy:    float    Defines the strength of environment light
WorldLighting.error_threshold -> error_threshold:    float    Low values are slower and higher quality
WorldLighting.falloff_strength -> falloff_strength:    float    Attenuation falloff strength, the higher, the less influence distant objects have
WorldLighting.gather_method -> gather_method:    enum    
WorldLighting.indirect_bounces -> indirect_bounces:    int    Number of indirect diffuse light bounces
WorldLighting.indirect_factor -> indirect_factor:    float    Factor for how much surrounding objects contribute to light
WorldLighting.passes -> passes:    int    Number of preprocessing passes to reduce over-occlusion
WorldLighting.sample_method -> sample_method:    enum    Method for generating shadow samples (for Raytrace)
WorldLighting.samples -> samples:    int    Amount of ray samples. Higher values give smoother results and longer rendering times
WorldLighting.threshold -> threshold:    float    Samples below this threshold will be considered fully shadowed/unshadowed and skipped (for Raytrace Adaptive QMC)
WorldLighting.use_ambient_occlusion -> use_ambient_occlusion:    boolean    Use Ambient Occlusion to add shadowing based on distance between objects
WorldLighting.use_cache -> use_cache:    boolean    Cache AO results in pixels and interpolate over neighboring pixels for speedup
WorldLighting.use_environment_light -> use_environment_light:    boolean    Add light coming from the environment
WorldLighting.use_falloff -> use_falloff:    boolean    Distance will be used to attenuate shadows
WorldLighting.use_indirect_light -> use_indirect_light:    boolean    Add indirect light bouncing of surrounding objects
WorldMistSettings.depth -> depth:    float    Distance over which the mist effect fades in
WorldMistSettings.falloff -> falloff:    enum    Type of transition used to fade mist
WorldMistSettings.height -> height:    float    Control how much mist density decreases with height
WorldMistSettings.intensity -> intensity:    float    Overall minimum intensity of the mist effect
WorldMistSettings.start -> start:    float    Starting distance of the mist, measured from the camera
WorldMistSettings.use_mist -> use_mist:    boolean    Occlude objects with the environment color as they are further away

EOF

